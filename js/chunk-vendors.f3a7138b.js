(self["webpackChunkthis_or_that"]=self["webpackChunkthis_or_that"]||[]).push([[504],{1656:function(e,t,n){"use strict";function r(e,t,n,r,s,i,a,o){var u,l="function"===typeof e?e.options:e;if(t&&(l.render=t,l.staticRenderFns=n,l._compiled=!0),r&&(l.functional=!0),i&&(l._scopeId="data-v-"+i),a?(u=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||"undefined"===typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),s&&s.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(a)},l._ssrRegister=u):s&&(u=o?function(){s.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:s),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(e,t){return u.call(t),c(e,t)}}else{var h=l.beforeCreate;l.beforeCreate=h?[].concat(h,u):[u]}return{exports:e,options:l}}n.d(t,{A:function(){return r}})},7223:function(e,t,n){"use strict";n.d(t,{TaL:function(){return r},O0W:function(){return OI},d_2:function(){return Qa}});var r={};n.r(r),n.d(r,{draw:function(){return su},fromPixels:function(){return iu},fromPixelsAsync:function(){return eu},toPixels:function(){return ru}});var s={};n.r(s),n.d(s,{assertParamsValid:function(){return uu},computeFlatOffset:function(){return wu},computeOutShape:function(){return cu},getNormalizedAxes:function(){return fu},isSliceContinous:function(){return vu},maskToAxes:function(){return lu},parseSliceParams:function(){return ku},sliceInfo:function(){return Iu},startForAxis:function(){return yu},startIndicesWithElidedDims:function(){return gu},stopForAxis:function(){return xu},stopIndicesWithElidedDims:function(){return mu},stridesForAxis:function(){return bu},stridesWithElidedDims:function(){return hu}});var i={};n.r(i),n.d(i,{collectGatherOpShapeInfo:function(){return hg},computeOutShape:function(){return cg},segOpComputeOptimalWindowSize:function(){return lg}});var a={};n.r(a),n.d(a,{ERF_A1:function(){return Nf},ERF_A2:function(){return Tf},ERF_A3:function(){return Ef},ERF_A4:function(){return Rf},ERF_A5:function(){return _f},ERF_P:function(){return $f},PARALLELIZE_THRESHOLD:function(){return df},RowPartitionType:function(){return of},SELU_SCALE:function(){return Sf},SELU_SCALEALPHA:function(){return Cf},applyActivation:function(){return Rd},assertAndGetBroadcastShape:function(){return xo},assertAxesAreInnerMostDims:function(){return Tc},assertParamsConsistent:function(){return sf},assignToTypedArray:function(){return Lf},axesAreInnerMostDims:function(){return Cc},calculateShapes:function(){return If},checkEinsumDimSizes:function(){return jf},checkPadOnDimRoundingMode:function(){return Yu},combineLocations:function(){return Sc},combineRaggedTensorToTensorShapes:function(){return uf},complexWithEvenIndex:function(){return Df},complexWithOddIndex:function(){return Of},computeConv2DInfo:function(){return Ou},computeConv3DInfo:function(){return Mu},computeDefaultPad:function(){return Pu},computeDilation2DInfo:function(){return Au},computeOptimalWindowSize:function(){return pf},computeOutAndReduceShapes:function(){return $c},computeOutShape:function(){return af},computePool2DInfo:function(){return Fu},computePool3DInfo:function(){return Du},convertConv2DDataFormat:function(){return Xu},decodeEinsumEquation:function(){return Gf},eitherStridesOrDilationsAreOne:function(){return Ku},expandShapeToKeepDim:function(){return Nc},exponent:function(){return Pf},exponents:function(){return zf},fromStringArrayToUint8:function(){return pg},fromUint8ToStringArray:function(){return dg},getAxesPermutation:function(){return Ec},getBroadcastDims:function(){return bo},getComplexWithIndex:function(){return Mf},getEinsumComputePath:function(){return Kf},getEinsumPermutation:function(){return Hf},getFusedBiasGradient:function(){return Ed},getFusedDyActivation:function(){return Td},getImageCenter:function(){return ff},getInnerMostAxes:function(){return _c},getPermuted:function(){return mf},getRaggedRank:function(){return cf},getReductionAxes:function(){return yo},getReshaped:function(){return gf},getReshapedPermuted:function(){return bf},getRowPartitionTypesHelper:function(){return lf},getSliceBeginCoords:function(){return yf},getSliceSize:function(){return xf},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return Jf},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return Zf},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return Qf},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return ng},getSparseReshapeInputOutputMismatchErrorMessage:function(){return sg},getSparseReshapeInputOutputMultipleErrorMessage:function(){return rg},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return eg},getSparseReshapeNegativeOutputDimErrorMessage:function(){return tg},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return ug},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return ig},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return ag},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return og},getUndoAxesPermutation:function(){return Rc},isIdentityPermutation:function(){return qf},log:function(){return Nr},mergeRealAndImagArrays:function(){return Af},prepareAndValidate:function(){return vf},prepareSplitSize:function(){return Yf},segment_util:function(){return i},shouldFuse:function(){return _d},slice_util:function(){return s},splitRealAndImagArrays:function(){return Ff},stridesOrDilationsArePositive:function(){return qu},tupleValuesAreOne:function(){return ju},upcastType:function(){return Bs},validateDefaultValueShape:function(){return hf},validateInput:function(){return kf},validateUpdateShape:function(){return wf},warn:function(){return $r}});var o={};n.r(o),n.d(o,{addImpl:function(){return FN},bincountImpl:function(){return PT},bincountReduceImpl:function(){return BT},bitwiseAndImpl:function(){return VT},castImpl:function(){return TN},ceilImpl:function(){return qT},concatImpl:function(){return tE},equalImpl:function(){return tR},expImpl:function(){return dR},expm1Impl:function(){return bR},floorImpl:function(){return zR},gatherNdImpl:function(){return qR},gatherV2Impl:function(){return JR},greaterEqualImpl:function(){return r_},greaterImpl:function(){return e_},lessEqualImpl:function(){return b_},lessImpl:function(){return f_},linSpaceImpl:function(){return v_},logImpl:function(){return I_},maxImpl:function(){return B_},maximumImpl:function(){return V_},minimumImpl:function(){return aA},multiplyImpl:function(){return HE},negImpl:function(){return yA},notEqualImpl:function(){return RA},prodImpl:function(){return jA},raggedGatherImpl:function(){return nF},raggedRangeImpl:function(){return aF},raggedTensorToTensorImpl:function(){return pF},rangeImpl:function(){return mF},rsqrtImpl:function(){return DF},scatterImpl:function(){return LF},sigmoidImpl:function(){return xN},simpleAbsImpl:function(){return VN},sliceImpl:function(){return DT},sparseFillEmptyRowsImpl:function(){return lD},sparseReshapeImpl:function(){return dD},sparseSegmentReductionImpl:function(){return gD},sqrtImpl:function(){return CD},staticRegexReplaceImpl:function(){return _D},stridedSliceImpl:function(){return MD},stringNGramsImpl:function(){return BD},stringSplitImpl:function(){return GD},stringToHashBucketFastImpl:function(){return KD},subImpl:function(){return IR},tileImpl:function(){return nO},topKImpl:function(){return oO},transposeImpl:function(){return ZN},uniqueImpl:function(){return vO}});n(4114),n(3375),n(9225),n(3972),n(9209),n(5714),n(7561),n(6197);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const u=1e-7,l=1e-4;class c{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class h{refCount(e){return d("refCount")}incRef(e){return d("incRef")}timerAvailable(){return!0}time(e){return d("time")}read(e){return d("read")}readSync(e){return d("readSync")}readToGPU(e,t){return d("readToGPU")}numDataIds(){return d("numDataIds")}disposeData(e,t){return d("disposeData")}write(e,t,n){return d("write")}move(e,t,n,r,s){return d("move")}createTensorFromGPUData(e,t,n){return d("createTensorFromGPUData")}memory(){return d("memory")}floatPrecision(){return d("floatPrecision")}epsilon(){return 32===this.floatPrecision()?u:l}dispose(){return d("dispose")}}function d(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}n(9479),n(6573),n(8100),n(7936),n(7467),n(4732),n(9577);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function p(e){let t=e.length,n=0;while(t>0)n=Math.random()*t|0,t--,m(e,t,n)}function f(e,t,n){return Math.max(e,Math.min(t,n))}function g(e){return e%2===0?e:e+1}function m(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function b(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function y(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function x(e,t,n=""){y(k(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function v(e){y(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function w(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function k(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function I(e){return e%1===0}function C(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function S(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function $(e,t=(e=>0),n,r){return new Promise(((s,i)=>{let a=0;const o=()=>{if(e())return void s();a++;const u=t(a);null!=n&&a>=n?i():null!=r?r(o,u):setTimeout(o,u)};o()}))}function N(e,t){let n=1,r=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(-1===e[i]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function T(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),y(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),y(e.every((e=>I(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function E(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||s?null:T(t,e).sort();let a=0;for(let o=0;o<e.length;++o){if(null!=i){if(i[a]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==i[a]||i[a]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),i[a]<=o&&a++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function R(e,t){return _(e,t)}function _(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function F(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function D(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function O(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function M(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function L(e){return"string"===typeof e||e instanceof String}function z(e){return"boolean"===typeof e}function P(e){return"number"===typeof e}function B(e){return Array.isArray(e)?B(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":P(e)?"float32":L(e)?"string":z(e)?"bool":"float32"}function W(e){return!!(e&&e.constructor&&e.call&&e.apply)}function U(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function G(e,t,n,r=!1){const s=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)s[t]=n[e+t]}else{const i=t[0],a=t.slice(1),o=a.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<i;t++)s[t]=G(e+t*o,a,n,r)}return s}function H(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return G(0,e,t,n)}function j(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function K(e,t){const n=q(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function q(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function X(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return H(e,new Float32Array(n));if("int32"===t)return H(e,new Int32Array(n));if("bool"===t)return H(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Y(e){e.forEach((t=>{y(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function J(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function Z(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function Q(e){return e&&e.then&&"function"===typeof e.then}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ee="tfjsflags";class te{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ne,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Q(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(ee in e){const t=e[ee].split(",");t.forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=se(t,n)}))}}}function ne(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(re(t,n[0],n[1]),n.join("=")))),t}function re(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function se(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}function ie(){return oe}let ae,oe=null;function ue(e){oe=e}function le(){if(null==ae){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}ae=e}return ae}function ce(){const e=le();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function he(e,t){const n=ce();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const de="Abs",pe="Acos",fe="Acosh",ge="Add",me="AddN",be="All",ye="Any",xe="ArgMax",ve="ArgMin",we="Asin",ke="Asinh",Ie="Atan",Ce="Atanh",Se="Atan2",$e="AvgPool",Ne="AvgPoolGrad",Te="AvgPool3D",Ee="AvgPool3DGrad",Re="BatchMatMul",_e="BatchToSpaceND",Ae="Bincount",Fe="BitwiseAnd",De="BroadcastTo",Oe="BroadcastArgs",Me="Cast",Le="Ceil",ze="ClipByValue",Pe="Complex",Be="ComplexAbs",We="Concat",Ue="Conv2D",Ve="Conv2DBackpropFilter",Ge="Conv2DBackpropInput",He="Conv3D",je="Conv3DBackpropFilterV2",Ke="Conv3DBackpropInputV2",qe="Cos",Xe="Cosh",Ye="Cumprod",Je="Cumsum",Ze="CropAndResize",Qe="DenseBincount",et="DepthToSpace",tt="DepthwiseConv2dNative",nt="DepthwiseConv2dNativeBackpropFilter",rt="DepthwiseConv2dNativeBackpropInput",st="Diag",it="Dilation2D",at="Dilation2DBackpropInput",ot="Dilation2DBackpropFilter",ut="Draw",lt="RealDiv",ct="Einsum",ht="Elu",dt="EluGrad",pt="Erf",ft="Equal",gt="Exp",mt="ExpandDims",bt="Expm1",yt="FFT",xt="Fill",vt="FlipLeftRight",wt="Floor",kt="FloorDiv",It="FusedBatchNorm",Ct="GatherV2",St="GatherNd",$t="Greater",Nt="GreaterEqual",Tt="Identity",Et="IFFT",Rt="Imag",_t="IsFinite",At="IsInf",Ft="IsNan",Dt="LeakyRelu",Ot="Less",Mt="LessEqual",Lt="LinSpace",zt="Log",Pt="Log1p",Bt="LogicalAnd",Wt="LogicalNot",Ut="LogicalOr",Vt="LogSoftmax",Gt="LRN",Ht="LRNGrad",jt="Max",Kt="Maximum",qt="MaxPool",Xt="MaxPoolGrad",Yt="MaxPool3D",Jt="MaxPool3DGrad",Zt="MaxPoolWithArgmax",Qt="Mean",en="Min",tn="Minimum",nn="MirrorPad",rn="Mod",sn="Multinomial",an="Multiply",on="Neg",un="NotEqual",ln="NonMaxSuppressionV3",cn="NonMaxSuppressionV4",hn="NonMaxSuppressionV5",dn="OnesLike",pn="OneHot",fn="Pack",gn="PadV2",mn="Pow",bn="Prelu",yn="Prod",xn="RaggedGather",vn="RaggedRange",wn="RaggedTensorToTensor",kn="Range",In="Real",Cn="Reciprocal",Sn="Relu",$n="Reshape",Nn="ResizeNearestNeighbor",Tn="ResizeNearestNeighborGrad",En="ResizeBilinear",Rn="ResizeBilinearGrad",_n="Relu6",An="Reverse",Fn="Round",Dn="Rsqrt",On="ScatterNd",Mn="TensorScatterUpdate",Ln="SearchSorted",zn="Select",Pn="Selu",Bn="Slice",Wn="Sin",Un="Sinh",Vn="Sign",Gn="Sigmoid",Hn="Softplus",jn="Sqrt",Kn="Sum",qn="SpaceToBatchND",Xn="SplitV",Yn="Softmax",Jn="SparseFillEmptyRows",Zn="SparseReshape",Qn="SparseSegmentMean",er="SparseSegmentSum",tr="SparseToDense",nr="SquaredDifference",rr="Square",sr="StaticRegexReplace",ir="StridedSlice",ar="StringNGrams",or="StringSplit",ur="StringToHashBucketFast",lr="Sub",cr="Tan",hr="Tanh",dr="Tile",pr="TopK",fr="Transform",gr="Transpose",mr="Unique",br="Unpack",yr="UnsortedSegmentSum",xr="ZerosLike",vr="Step",wr="FromPixels",kr="RotateWithOffset",Ir="_FusedMatMul",Cr="FusedConv2D",Sr="FusedDepthwiseConv2D";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $r(...e){ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(...e)}function Nr(...e){ie().getBool("IS_TEST")||ie().getBool("PROD")||console.log(...e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Tr=he("kernelRegistry",(()=>new Map)),Er=he("gradRegistry",(()=>new Map));function Rr(e,t){const n=Or(e,t);return Tr.get(n)}function _r(e){return Er.get(e)}function Ar(e){const t=Tr.entries(),n=[];while(1){const{done:r,value:s}=t.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===e&&n.push(a)}return n}function Fr(e){const{kernelName:t,backendName:n}=e,r=Or(t,n);Tr.has(r)&&$r(`The kernel '${t}' for backend '${n}' is already registered`),Tr.set(r,e)}function Dr(e){const{kernelName:t}=e;Er.has(t)&&ie().getBool("DEBUG")&&$r(`Overriding the gradient for '${t}'`),Er.set(t,e)}function Or(e,t){return`${t}_${e}`}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Lr=n(947),zr=n.n(Lr);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Pr=zr()||Lr;function Br(e){return Pr.fromString(e,!0,16)}const Wr=Br("c3a5c85c97cb3127"),Ur=Br("b492b66fbe98f273"),Vr=Br("9ae16a3b2f90404f");function Gr(e){return e.xor(e.shru(47))}function Hr(e,t,n){const r=e.slice(t,t+n);return Pr.fromBytes(Array.from(r),!0,!0)}function jr(e,t){return Hr(e,t,8)}function Kr(e,t){return Hr(e,t,4)}function qr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Xr(e,t,n=Br("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Yr(e,t,n,r,s,i){s=s.add(e),i=qr(i.add(s).add(r),21);const a=s;return s=s.add(t),s=s.add(n),i=i.add(qr(s,44)),[s.add(r),i.add(a)]}function Jr(e,t,n,r){return Yr(jr(e,t),jr(e,t+8),jr(e,t+16),jr(e,t+24),n,r)}function Zr(e,t=e.length){if(t>=8){const n=Vr.add(2*t),r=jr(e,0).add(Vr),s=jr(e,t-8),i=qr(s,37).mul(n).add(r),a=qr(r,25).add(s).mul(n);return Xr(i,a,n)}if(t>=4){const n=Vr.add(2*t),r=Kr(e,0);return Xr(r.shl(3).add(t),Kr(e,t-4),n)}if(t>0){const n=e[0],r=e[t>>1],s=e[t-1],i=n+(r<<8),a=t+(s<<2);return Gr(Vr.mul(i).xor(Wr.mul(a))).mul(Vr)}return Vr}function Qr(e,t=e.length){const n=Vr.add(2*t),r=jr(e,0).mul(Ur),s=jr(e,8),i=jr(e,t-8).mul(n),a=jr(e,t-16).mul(Vr);return Xr(qr(r.add(s),43).add(qr(i,30)).add(a),r.add(qr(s.add(Vr),18)).add(i),n)}function es(e,t=e.length){const n=Vr.add(2*t),r=jr(e,0).mul(Vr),s=jr(e,8),i=jr(e,t-8).mul(n),a=jr(e,t-16).mul(Vr),o=qr(r.add(s),43).add(qr(i,30)).add(a),u=Xr(o,r.add(qr(s.add(Vr),18)).add(i),n),l=jr(e,16).mul(n),c=jr(e,24),h=o.add(jr(e,t-32)).mul(n),d=u.add(jr(e,t-24)).mul(n);return Xr(qr(l.add(c),43).add(qr(h,30)).add(d),l.add(qr(c.add(r),18)).add(h),n)}function ts(e,t=e.length){const n=Pr.fromNumber(81,!0);if(t<=32)return t<=16?Zr(e,t):Qr(e,t);if(t<=64)return es(e,t);let r=n,s=n.mul(Ur).add(113),i=Gr(s.mul(Vr).add(113)).mul(Vr),a=[Pr.UZERO,Pr.UZERO],o=[Pr.UZERO,Pr.UZERO];r=r.mul(Vr).add(jr(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=qr(r.add(s).add(a[0]).add(jr(e,u+8)),37).mul(Ur),s=qr(s.add(a[1]).add(jr(e,u+48)),42).mul(Ur),r=r.xor(o[1]),s=s.add(a[0]).add(jr(e,u+40)),i=qr(i.add(o[0]),33).mul(Ur),a=Jr(e,u,a[1].mul(Ur),r.add(o[0])),o=Jr(e,u+32,i.add(o[1]),s.add(jr(e,u+16))),[i,r]=[r,i],u+=64}while(u!==l);const h=Ur.add(i.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=qr(r.add(s).add(a[0]).add(jr(e,u+8)),37).mul(h),s=qr(s.add(a[1]).add(jr(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(a[0].mul(9).add(jr(e,u+40))),i=qr(i.add(o[0]),33).mul(h),a=Jr(e,u,a[1].mul(h),r.add(o[0])),o=Jr(e,u+32,i.add(o[1]),s.add(jr(e,u+16))),[i,r]=[r,i],Xr(Xr(a[0],o[0],h).add(Gr(s).mul(Wr)).add(i),Xr(a[1],o[1],h).add(r),h)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ns(e,t){return"string"===t?as(e):ss([e],t)}function rs(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function ss(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ls(e)),ie().getBool("DEBUG")&&A(e,t),rs(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function is(){return ie().platform.now()}function as(e,t="utf-8"){return t=t||"utf-8",ie().platform.encode(e,t)}function os(e,t="utf-8"){return t=t||"utf-8",ie().platform.decode(e,t)}function us(e){return null!=ie().platform.isTypedArray?ie().platform.isTypedArray(e):Mr(e)}function ls(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||Q(e)||null==e||us(e)&&n)t.push(e);else if(Array.isArray(e)||us(e))for(let r=0;r<e.length;++r)ls(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)ls(e[s],t,n)}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cs{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ds)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const a=is();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:is()-a})}if(ie().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const t=r[u];t.data().then((n=>{hs(n,t.dtype,e)}))}const o={kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))};return o}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function hs(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class ds{logKernelProfile(e,t,n,r,s,i){const a="number"===typeof r?S(`${r}ms`,9):r["error"],o=S(e,25),u=t.rank,l=t.size,c=S(t.shape.toString(),14);let h="";for(const d in s){const e=s[d];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${a}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ps(e,t,n){const r={},s={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],i=n.inputs;for(const e in i){const a=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[a.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[n.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(i[t.outputs[e].id]){for(const e in n)i[n[e].id]=!0,a[t.id]=!0;break}}const o=[];for(let u=0;u<e.length;u++){const t=e[u];if(s[t.id]&&a[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}function fs(e,t,n,r){for(let s=t.length-1;s>=0;s--){const i=t[s],a=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[t];if(!k(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=s;else{const t=e[a.id];e[a.id]=r(t,s),t.dispose()}}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const gs=20,ms=3,bs=7;function ys(e,t,n,r){const s=V(t),i=xs(e,t,n,s),a=t.length,o=ks(e,t,n,s,i),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${a}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function xs(e,t,n,r){const s=w(t),i=r[r.length-1],a=new Array(i).fill(0),o=t.length,u="complex64"===n?Is(e):e;if(o>1)for(let l=0;l<s/i;l++){const e=l*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],vs(u[e+t],0,n).length)}return a}function vs(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(bs))} + ${parseFloat(e[1].toFixed(bs))}j`:L(e)?`'${e}'`:"bool"===n?ws(e):parseFloat(e.toFixed(bs)).toString(),S(r,t)}function ws(e){return 0===e?"false":"true"}function ks(e,t,n,r,s,i=!0){const a="complex64"===n?2:1,o=t[0],u=t.length;if(0===u){if("complex64"===n){const t=Is(e);return[vs(t[0],0,n)]}return"bool"===n?[ws(e[0])]:[e[0].toString()]}if(1===u){if(o>gs){const t=ms*a;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-ms)*a,o*a));return"complex64"===n&&(r=Is(r),i=Is(i)),["["+r.map(((e,t)=>vs(e,s[t],n))).join(", ")+", ..., "+i.map(((e,t)=>vs(e,s[o-ms+t],n))).join(", ")+"]"]}const t="complex64"===n?Is(e):Array.from(e);return["["+t.map(((e,t)=>vs(e,s[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>gs){for(let t=0;t<ms;t++){const r=t*h,i=r+h;d.push(...ks(e.slice(r,i),l,n,c,s,!1))}d.push("...");for(let t=o-ms;t<o;t++){const r=t*h,i=r+h;d.push(...ks(e.slice(r,i),l,n,c,s,t===o-1))}}else for(let g=0;g<o;g++){const t=g*h,r=t+h;d.push(...ks(e.slice(t,r),l,n,c,s,g===o-1))}const p=2===u?",":"";d[0]="["+(o>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=",\n";for(let g=2;g<u;g++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Is(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Cs{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=w(e),null!=n){const e=n.length;y(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||_(t,this.size),this.strides=V(e)}set(e,...t){0===t.length&&(t=[0]),y(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ss().makeTensor(this.values,this.shape,this.dtype)}}let Ss=null,$s=null,Ns=null;function Ts(e){Ss=e}function Es(e){$s=e}function Rs(e){Ns=e}class _s{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=w(e),this.strides=V(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return $s.buffer(this.shape,this.dtype,e)}bufferSync(){return $s.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return H(this.shape,e,"complex64"===this.dtype)}arraySync(){return H(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ss().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>os(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ss().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Ss().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>os(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ss().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Ss().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return $s.print(this,e)}clone(){return this.throwIfDisposed(),$s.clone(this)}toString(e=!1){const t=this.dataSync();return ys(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),$s.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ss().makeVariable(this,e,t,n)}}function As(){return he("Tensor",(()=>_s))}Object.defineProperty(_s,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),As();class Fs extends _s{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!k(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ss().disposeTensor(this),this.dataId=e.dataId,Ss().incRef(this,null)}dispose(){Ss().disposeVariable(this),this.isDisposedInternal=!0}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Ds,Os,Ms,Ls,zs;Object.defineProperty(Fs,Symbol.hasInstance,{value:e=>e instanceof _s&&null!=e.assign&&e.assign instanceof Function}),function(e){e["R0"]="R0",e["R1"]="R1",e["R2"]="R2",e["R3"]="R3",e["R4"]="R4",e["R5"]="R5",e["R6"]="R6"}(Ds||(Ds={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="int32",e["complex64"]="complex64"}(Os||(Os={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="bool",e["complex64"]="complex64"}(Ms||(Ms={})),function(e){e["float32"]="float32",e["int32"]="float32",e["bool"]="float32",e["complex64"]="complex64"}(Ls||(Ls={})),function(e){e["float32"]="complex64",e["int32"]="complex64",e["bool"]="complex64",e["complex64"]="complex64"}(zs||(zs={}));const Ps={float32:Ls,int32:Os,bool:Ms,complex64:zs};function Bs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ps[e][t]}function Ws(e){return Bs(e,"int32")}function Us(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Vs(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gs(e,t){if(e.dtype===t.dtype)return[e,t];const n=Bs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Hs(e,t){return t.some((t=>t.id===e.id))}function js(e){const t=[],n=new Set;return Ks(e,t,n),t}function Ks(e,t,n){if(null==e)return;if(e instanceof _s)return void t.push(e);if(!qs(e))return;const r=e;for(const s in r){const e=r[s];n.has(e)||(n.add(e),Ks(e,t,n))}}function qs(e){return Array.isArray(e)||"object"===typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xs(e){return null!=e.kernelName}class Ys{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Js{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ys}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],r=await this.initializeBackend(n).success;if(r)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?($r(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e),r=n?await t:t;if(!r)return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new cs(this.backendInstance),!0}setupRegisteredKernels(){const e=Ar(this.backendName);e.forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){const t=Ar(e);t.forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof h||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,$r(`Initialization of backend ${e} failed`),$r(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return $r(`Initialization of backend ${e} failed`),$r(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return Js.nextTensorId++}nextVariableId(){return Js.nextVariableId++}clone(e){const t=ei.runKernel(Tt,{x:e}),n={x:e},r=e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return ei.runKernel(Me,n,r)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,s,{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;const r=null!=Rr(e,this.backendName);if(!r)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Xs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Xs(e)){const{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;const u=Rr(t,this.backendName);y(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const l=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=Xs(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=a()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=_r(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(y(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const a=n.filter(((e,t)=>s[t]));return i.concat(a)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&L(e[0])&&(s=e.map((e=>as(e))));const i=r.write(s,t,n),a=new _s(t,n,i,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(i),t=M(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){n=n||"float32";const s={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,i=new _s(r,s,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Fs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*O(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Fs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*O(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=_r(e);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=q(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=js(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(y(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));y(s instanceof _s,(()=>"The result y returned by f() must be a tensor."));const i=ps(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?Zs(s.shape):n,fs(e,i,(e=>this.tidy(e)),ti);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return y(W(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;y(t.every((e=>e instanceof _s)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));const s=(r,s)=>(n=e(...t,s),y(n.value instanceof _s,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),y(W(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),i=(e,r)=>{const s=n.gradFunc(e,r),i=Array.isArray(s)?s:[s];y(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),y(i.every((e=>e instanceof _s)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((e,t)=>{a[t]=()=>e})),a};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:r})}}readSync(e){const t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){const t=this.state.tensorInfo.get(e);return t.backend.read(e)}readToGPU(e,t){const n=this.state.tensorInfo.get(e);return n.backend.readToGPU(e,t)}async time(e){const t=is(),n=await this.backend.time(e);return n.wallMs=is()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ys;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Zs(e){const t=K(w(e),"float32");return ei.makeTensor(t,e,"float32")}function Qs(){const e=le();if(null==e._tfengine){const t=new te(e);e._tfengine=new Js(t)}return ue(e._tfengine.ENV),Ts((()=>e._tfengine)),e._tfengine}Js.nextTensorId=0,Js.nextVariableId=0;const ei=Qs();function ti(e,t){const n={a:e,b:t};return ei.runKernel(ge,n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ni(){return"undefined"!==typeof navigator&&null!=navigator}let ri;function si(e){if(void 0!==ri)return ri;if(e||ni()){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ii(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ai=ie();ai.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ai.registerFlag("IS_BROWSER",(()=>ii())),ai.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),ai.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ai.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),ai.registerFlag("PROD",(()=>!1)),ai.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ai.getBool("DEBUG"))),ai.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ai.registerFlag("IS_TEST",(()=>!1)),ai.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>ai.getBool("DEBUG"))),ai.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ai.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ai.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));n(4979);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oi(e,t){let n=e;if(us(e))return"string"===t?[]:[e.length];if(Us(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Vs(e))return[e.buffer.size/(null==t?4:O(t))];if(!Array.isArray(e))return[];const r=[];while(Array.isArray(n)||us(n)&&"string"!==t)r.push(n.length),n=n[0];return Array.isArray(e)&&ie().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ui(e,r,[]),r}function ui(e,t,n){if(n=n||[],!Array.isArray(e)&&!us(e))return void y(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));y(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),y(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)ui(e[s],r,n.concat(s))}function li(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function ci(e,t,n,r="numeric"){if(e instanceof As())return li(r,e.dtype,t,n),e;let s=B(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),li(r,s,t,n),null==e||!us(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=oi(e,s);us(e)||Array.isArray(e)||(e=[e]);const a=!0,o="string"!==s?ss(e,s):ls(e,[],a);return ei.makeTensor(o,i,s)}function hi(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const s=e;return s.map(((e,s)=>ci(e,`${t}[${s}]`,n,r)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const di="__op";function pi(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=di;const s=(...e)=>{ei.startScope(n);try{const t=r(...e);return Q(t)&&console.error("Cannot return a Promise inside of tidy."),ei.endScope(t),t}catch(t){throw ei.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fi(e,t){const n=ci(e,"real","complex"),r=ci(t,"imag","complex");x(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ei.runKernel(Pe,s)}const gi=pi({complex_:fi});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mi(e,t,n,r){if(null==r)r=B(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Vs(e)||Us(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return ei.backend.createTensorFromGPUData(e,t||n,r)}if(!us(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Y(t);const e=w(t),r=w(n);y(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==w(t.slice(s));y(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return us(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ss(e,r):ls(e,[],!0),ei.makeTensor(e,t,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bi(e,t,n){const r=oi(e,n);return mi(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const yi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class xi{static join(e){return new xi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),e=e.map((e=>us(e)?e.buffer:e)),0===e.length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,s=new ArrayBuffer(r),i=new Uint8Array(s);let a=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],r=e+a,s=r-n.start,u=a,l=Math.min(t,n.end),c=l-n.start,h=new Uint8Array(n.buffer,s,c-s);if(i.set(h,u),a+=h.length,t<n.end)break}return s}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=vi(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function vi(e,t){let n=0,r=e.length;while(n<=r){const s=Math.floor((r-n)/2)+n,i=t(e[s]);if(0===i)return s;i<0?r=s:n=s+1}return-1}function wi(e){ie().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ki(){return ei}function Ii(){return ei.memory()}function Ci(e,t){return ei.tidy(e,t)}function Si(e){const t=js(e);t.forEach((e=>e.dispose()))}function $i(e){return ei.keep(e)}function Ni(e,t,n=1){return ei.registerBackend(e,t,n)}function Ti(){return ei.backend}Rs(wi);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ei=4;async function Ri(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Ei*t.length,r=new Uint8Array(n);let s=0;for(let i=0;i<t.length;i++){const e=t[i],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=Ei,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}const i=await Promise.all(r);return{data:Di(i),specs:n}}function _i(e,t){const n=new xi(e),r={};let s=0;for(const i of t){const e=Ai(i,((e,t)=>n.slice(s+e,s+t)));r[i.name]=Fi(i,n.slice(s,s+e)),s+=e}return r}function Ai(e,t){const n=w(e.shape);let r;if("quantization"in e){const t=e.quantization;r=yi[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=Ei+new Uint32Array(t(e,e+Ei))[0];return e}r=yi[e.dtype]}return n*r}function Fi(e,t){const n=e.name,r=e.dtype,s=e.shape,i=w(s);let a,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}const u=yi[s.dtype],l="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){a=new Float32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];a[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=qi();a=e(l)}}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${n}': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);a=new Int32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];a[e]=Math.round(t*s.scale+s.min)}}o+=i*u}else if("string"===r){const n=w(e.shape);a=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+Ei))[0];o+=Ei;const n=new Uint8Array(t.slice(o,o+e));a.push(n),o+=e}}else{const e=yi[r];if("float32"===r)a=new Float32Array(t);else if("int32"===r)a=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){a=new Float32Array(t);const e=new Float32Array(a.length/2),n=new Float32Array(a.length/2);for(let t=0;t<e.length;t++)e[t]=a[2*t],n[t]=a[2*t+1];const r=bi(e,s,"float32"),i=bi(n,s,"float32"),o=gi(r,i);return r.dispose(),i.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${r}`)}a=new Uint8Array(t)}o+=i*e}return bi(a,s,r)}function Di(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Oi="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Mi(e){return Oi?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Li(e){if(Oi)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function zi(e){if(Oi){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function Pi(e){return xi.join(e)}function Bi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Wi(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function Ui(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Wi(e,n,r)}function Vi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Mi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Mi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new xi(e.weightData).byteLength}}function Gi(e){const t=[];for(const n of e)t.push(...n.weights);return t}function Hi(){const e=e=>{let t=e<<13,n=0;while(0===(8388608&t))n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function ji(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function Ki(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function qi(){const e=Hi(),t=ji(),n=Ki();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let a=0;a<r.length;a++){const s=r[a],o=e[n[s>>10]+(1023&s)]+t[s>>10];i[a]=o}return new Float32Array(s)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Xi{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Xi.instance&&(Xi.instance=new Xi),Xi.instance}static registerSaveRouter(e){Xi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Xi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Xi.getHandlers(e,"save")}static getLoadHandlers(e,t){return Xi.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[],s="load"===t?Xi.getInstance().loadRouters:Xi.getInstance().saveRouters;return s.forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Yi=e=>Xi.getSaveHandlers(e),Ji=(e,t)=>Xi.getLoadHandlers(e,t),Zi="tensorflowjs",Qi=1,ea="models_store",ta="model_info_store";function na(){if(!ie().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ra(e){const t=e.result;t.createObjectStore(ea,{keyPath:"modelPath"}),t.createObjectStore(ta,{keyPath:"modelPath"})}class sa{constructor(e){if(this.indexedDB=na(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Zi,Qi);r.onupgradeneeded=()=>ra(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(ea,"readonly"),r=t.objectStore(ea),i=r.get(this.modelPath);i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(i.result.modelArtifacts)},i.onerror=e=>(s.close(),n(i.error)),t.oncomplete=()=>s.close()}else{t.weightData=xi.join(t.weightData);const r=Vi(t),a=s.transaction(ta,"readwrite");let o,u,l=a.objectStore(ta);try{o=l.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(i){return n(i)}o.onsuccess=()=>{u=s.transaction(ea,"readwrite");const o=u.objectStore(ea);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(i){return n(i)}c.onsuccess=()=>e({modelArtifactsInfo:r}),c.onerror=e=>{l=a.objectStore(ta);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(c.error)),t.onerror=e=>(s.close(),n(c.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}sa.URL_SCHEME="indexeddb://";const ia=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(sa.URL_SCHEME)?aa(e.slice(sa.URL_SCHEME.length)):null;function aa(e){return new sa(e)}function oa(e){return e.startsWith(sa.URL_SCHEME)?e.slice(sa.URL_SCHEME.length):e}Xi.registerSaveRouter(ia),Xi.registerLoadRouter(ia);class ua{constructor(){this.indexedDB=na()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Zi,Qi);n.onupgradeneeded=()=>ra(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(ta,"readonly"),i=s.objectStore(ta),a=i.getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=oa(e),new Promise(((t,n)=>{const r=this.indexedDB.open(Zi,Qi);r.onupgradeneeded=()=>ra(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(ta,"readwrite"),a=i.objectStore(ta),o=a.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),i=()=>{u=s.transaction(ea,"readwrite");const r=u.objectStore(ea),i=r.delete(e);i.onsuccess=()=>t(o.result.modelArtifactsInfo),i.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const la="/",ca="tensorflowjs_models",ha="info",da="model_topology",pa="weight_specs",fa="weight_data",ga="model_metadata";function ma(e){return{info:[ca,e,ha].join(la),topology:[ca,e,da].join(la),weightSpecs:[ca,e,pa].join(la),weightData:[ca,e,fa].join(la),modelMetadata:[ca,e,ga].join(la)}}function ba(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ya(e){const t=e.split(la);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(la)}function xa(e){return e.startsWith(va.URL_SCHEME)?e.slice(va.URL_SCHEME.length):e}class va{constructor(e){if(!ie().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ma(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Vi(e),i=xi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Li(i));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw ba(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=zi(i),t}}va.URL_SCHEME="localstorage://";const wa=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(va.URL_SCHEME)?ka(e.slice(va.URL_SCHEME.length)):null;function ka(e){return new va(e)}Xi.registerSaveRouter(wa),Xi.registerLoadRouter(wa);class Ia{constructor(){y(ie().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),y("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ca+la,n=la+ha;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){const t=ya(s);e[t]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=xa(e);const t=ma(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return ba(t),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ca="://";class Sa{constructor(){this.managers={}}static getInstance(){return null==Sa.instance&&(Sa.instance=new Sa),Sa.instance}static registerManager(e,t){y(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Ca)&&(e=e.slice(0,e.indexOf(Ca))),y(e.length>0,(()=>"scheme must not be an empty string."));const n=Sa.getInstance();y(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Sa.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Sa.getInstance().managers)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $a{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&ie().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();const t=this.functionRefs[e.data.index];t(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return Mr(e)}}if(ie().get("IS_BROWSER")){ie().setPlatform("browser",new $a);try{Sa.registerManager(va.URL_SCHEME,new Ia)}catch(pY){}try{Sa.registerManager(sa.URL_SCHEME,new ua)}catch(pY){}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Na={importFetch:()=>n(5817)};let Ta;class Ea{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ie().global.fetch?ie().global.fetch(e,t):(null==Ta&&(Ta=Na.importFetch()),Ta(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ra(e,t="float32",n){return t=t||"float32",Y(e),new Cs(e,t,n)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _a(e,t){const n=ci(e,"x","cast");if(!F(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return ei.runKernel(Me,r,s)}ie().get("IS_NODE")&&!ie().get("IS_BROWSER")&&ie().setPlatform("node",new Ea);const Aa=pi({cast_:_a});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fa(e){const t=ci(e,"x","clone","string_or_numeric"),n={x:t};return ei.runKernel(Tt,n)}const Da=pi({clone_:Fa});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Oa(e,t=!1){console.log(e.toString(t))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Qs();const Ma={buffer:Ra,cast:Aa,clone:Da,print:Oa};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function La(e,t){let n=ci(e,"a","add"),r=ci(t,"b","add");[n,r]=Gs(n,r);const s={a:n,b:r};return ei.runKernel(ge,s)}Es(Ma);const za=pi({add_:La});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pa(e,t){let n=ci(e,"a","floorDiv"),r=ci(t,"b","floorDiv");[n,r]=Gs(n,r);const s={a:n,b:r};return ei.runKernel(kt,s)}const Ba=pi({floorDiv_:Pa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wa(e,t){let n=ci(e,"a","div"),r=ci(t,"b","div");if([n,r]=Gs(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Ba(n,r);const s={a:n,b:r},i={};return ei.runKernel(lt,s,i)}const Ua=pi({div_:Wa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Va(e,t){let n=ci(e,"a","mul"),r=ci(t,"b","mul");[n,r]=Gs(n,r);const s={a:n,b:r};return ei.runKernel(an,s)}const Ga=pi({mul_:Va});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ha(e){const t=ci(e,"x","sqrt","float32"),n={x:t};return ei.runKernel(jn,n)}const ja=pi({sqrt_:Ha});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ka(e){const t=ci(e,"x","square"),n={};return ei.runKernel("Square",{x:t},n)}const qa=pi({square_:Ka});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xa(e){const t=ci(e,"x","zerosLike"),n={x:t};return ei.runKernel(xr,n)}const Ya=pi({zerosLike_:Xa});function Ja(e,t){y(W(e),(()=>"The f passed in variableGrads(f) must be a function")),y(null==t||Array.isArray(t)&&t.every((e=>e instanceof Fs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ei.registeredVariables)t.push(ei.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),y(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const i=!0,{value:a,grads:o}=ei.gradients(e,t,null,i);y(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),y(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const u={};return t.forEach(((e,t)=>{null!=o[t]&&(u[e.name]=o[t])})),null!=r&&r.forEach((e=>u[e.name]=null)),{value:a,grads:u}}function Za(e){return ei.customGrad(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qa(e,t){if((us(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&us(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],r=[];return mi(e,n,r,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const eo=new Map,to=new Map;class no{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ro{constructor(){this.classNameMap={}}static getMap(){return null==ro.instance&&(ro.instance=new ro),ro.instance}static register(e){ro.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function so(e,t,n){y(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),y("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),y(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const r=n,s=t+">"+r;return ro.register(e),eo.set(s,e),to.set(e,s),e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class io extends no{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Si(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Ja(e,t)}dispose(){null!=this.iterations_&&Si(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Qa(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(io,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ao extends io{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=ei.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Ci((()=>Ya(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Ci((()=>Ya(r).variable(s)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Ci((()=>{const e=za(Ga(a,this.rho),Ga(qa(i),1-this.rho)),t=Ga(Ua(ja(za(o,this.epsilon)),ja(za(a,this.epsilon))),i),n=za(Ga(o,this.rho),Ga(qa(t),1-this.rho));a.assign(e),o.assign(n);const s=za(Ga(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Si(this.accumulatedGrads.map((e=>e.variable))),Si(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["rho"],t["epsilon"])}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oo(e,t,n){Y(e),n=n||B(t);const r={shape:e,value:t,dtype:n};return ei.runKernel(xt,{},r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class uo extends io{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=ei.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Ci((()=>oo(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable;Ci((()=>{const e=za(i,qa(s));i.assign(e);const t=za(Ga(Ua(s,ja(za(e,ei.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Si(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t["learningRate"],t["initialAccumulatorValue"])}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lo(e,t){let n=ci(e,"base","pow"),r=ci(t,"exp","pow");[n,r]=Gs(n,r);const s={a:n,b:r};return ei.runKernel(mn,s)}const co=pi({pow_:lo});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ho(e,t){let n=ci(e,"a","sub"),r=ci(t,"b","sub");[n,r]=Gs(n,r);const s={a:n,b:r};return ei.runKernel(lr,s)}const po=pi({sub_:ho});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fo extends io{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ci((()=>{this.accBeta1=Qa(t).variable(),this.accBeta2=Qa(n).variable()})),null==r&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ci((()=>{const n=po(1,this.accBeta1),r=po(1,this.accBeta2);t.forEach(((t,s)=>{const i=ei.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ci((()=>Ya(i).variable(a)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Ci((()=>Ya(i).variable(a)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,c=za(Ga(u,this.beta1),Ga(o,1-this.beta1)),h=za(Ga(l,this.beta2),Ga(qa(o),1-this.beta2)),d=Ua(c,n),p=Ua(h,r);u.assign(c),l.assign(h);const f=za(Ga(Ua(d,za(ja(p),this.epsilon)),-this.learningRate),i);i.assign(f)})),this.accBeta1.assign(Ga(this.accBeta1,this.beta1)),this.accBeta2.assign(Ga(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Si(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Si(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Ci((()=>{this.accBeta1.assign(co(this.beta1,this.iterations_+1)),this.accBeta2.assign(co(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function go(e){const t=ci(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ei.runKernel(Be,e)}{const e={x:t};return ei.runKernel(de,e)}}const mo=pi({abs_:go});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bo(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=e[i]||1,o=t[t.length-1-s]||1;o>1&&1===a&&r.unshift(i)}return r}function yo(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],i=t.length-r-1,a=t[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function xo(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let i=e[e.length-s-1];null==i&&(i=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===i)r[n-s-1]=a;else if(1===a)r[n-s-1]=i;else{if(i!==a){const n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}r[n-s-1]=i}}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vo(e,t){let n=ci(e,"a","maximum"),r=ci(t,"b","maximum");[n,r]=Gs(n,r),"bool"===n.dtype&&(n=Aa(n,"int32"),r=Aa(r,"int32")),xo(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(Kt,s)}const wo=pi({maximum_:vo});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ko extends io{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ci((()=>{this.iteration=Qa(0).variable(),this.accBeta1=Qa(t).variable()})),null==r&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ci((()=>{const n=po(1,this.accBeta1),r=Ua(-this.learningRate,za(Ga(this.iteration,this.decay),1));t.forEach(((t,s)=>{const i=ei.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ya(i).variable(a)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Ya(i).variable(a)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,c=za(Ga(u,this.beta1),Ga(o,1-this.beta1)),h=Ga(l,this.beta2),d=mo(o),p=wo(h,d);u.assign(c),l.assign(p);const f=za(Ga(Ua(r,n),Ua(c,za(p,this.epsilon))),i);i.assign(f)})),this.iteration.assign(za(this.iteration,1)),this.accBeta1.assign(Ga(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Si(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Si(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"],t["decay"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Io extends io{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=ei.registeredVariables[t];Ci((()=>{const e=za(Ga(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=$i(Qa(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t["learningRate"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Co extends Io{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Qa(this.momentum)}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=ei.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Ci((()=>Ya(r).variable(e)))}}const s=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&Ci((()=>{let e;const t=za(Ga(this.m,s),i);e=this.useNesterov?za(Ga(this.c,za(i,Ga(t,this.m))),r):za(Ga(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Si(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t["learningRate"],t["momentum"],t["useNesterov"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class So extends io{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ei.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=ei.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Ci((()=>Ya(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Ci((()=>Ya(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Ci((()=>Ya(r).variable(s)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Ci((()=>{const e=za(Ga(a,this.decay),Ga(qa(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=za(Ga(t,this.decay),Ga(i,1-this.decay)),u=Ua(Ga(i,this.learningRate),ja(po(e,za(qa(s),this.epsilon)))),l=za(Ga(o,this.momentum),u);a.assign(e),t.assign(s),o.assign(l);const c=po(r,l);r.assign(c)}else{const e=za(Ga(a,this.decay),Ga(qa(i),1-this.decay)),t=za(Ga(o,this.momentum),Ua(Ga(i,this.learningRate),ja(za(e,this.epsilon))));a.assign(e),o.assign(t);const n=po(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Si(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Si(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Si(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t["learningRate"],t["decay"],t["momentum"],t["epsilon"],t["centered"])}}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const $o=[ao,uo,fo,ko,Co,So,Io];function No(){for(const e of $o)so(e)}n(4603),n(7566),n(8721);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const To="model",Eo=".json",Ro=".weights.bin";function _o(e){return new Promise((e=>setTimeout(e))).then(e)}class Ao{constructor(e){if(!ie().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ao.URL_SCHEME)&&(e=e.slice(Ao.URL_SCHEME.length)),null!=e&&0!==e.length||(e=To),this.modelJsonFileName=e+Eo,this.weightDataFileName=e+Ro}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=xi.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Bi(e,t),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=s,await _o((()=>i.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await _o((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Vi(e)}}}}Ao.URL_SCHEME="downloads://";const Fo=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ao.URL_SCHEME)?Do(e.slice(Ao.URL_SCHEME.length)):null;function Do(e="model"){return new Ao(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Oo(e,t,n,r){a(e),n=null==n?0:n,r=null==r?1:r,o(n,r);let s=0;const i=i=>(i.then((i=>{const a=n+ ++s/e.length*(r-n);return t(a),i})),i);function a(e){y(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}function o(e,t){y(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),y(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),y(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}return Promise.all(e.map(i))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Mo(e,t){null==t&&(t={});const n=null==t.fetchFunc?ie().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=0,i=.5,a=null==t.onProgress?await Promise.all(r):await Oo(r,t.onProgress,s,i),o=a.map((e=>e.arrayBuffer())),u=.5,l=1,c=null==t.onProgress?await Promise.all(o):await Oo(o,t.onProgress,u,l);return c}function Lo(e,t){var n;const r=null==t.fetchFunc?ie().platform.fetch:t.fetchFunc;let s,i=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{var a;while(i<e.length){if(!s){const n=(await r(e[i],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:u}=await s.read();if(!o)return void n.enqueue(u);i++,s=void 0,null===(a=t.onProgress)||void 0===a||a.call(t,i/e.length)}n.close()}})}Xi.registerSaveRouter(Fo);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const zo="application/octet-stream",Po="application/json";class Bo{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(y("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ie().platform.fetch,y(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&y(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Bi(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:Po}),"model.json"),null!=e.weightData){const n=xi.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:zo}),"model.weights.bin")}const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Vi(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Ui(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Gi(e.weightsManifest),r=()=>Lo(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=Wo(t),s=this.weightPathPrefix||n,i=[],a=[];for(const o of e)for(const e of o.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e),n=Gi(e),r=await Mo(t,this.loadOptions);return[n,r]}}function Wo(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}function Uo(e){return null!=e.match(Bo.URL_SCHEME_REGEX)}Bo.URL_SCHEME_REGEX=/^https?:\/\//;const Vo=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Uo(e))):Uo(e),n)return Go(e,t)}return null};function Go(e,t){return new Bo(e,t)}function Ho(e,t){return Go(e,t)}Xi.registerSaveRouter(Vo),Xi.registerLoadRouter(Vo);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jo(e,t,n){if(v(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=oi(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return mi(e,t,r,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Ko,qo=!1;function Xo(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,i=!1,a=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else if(null!=e.getContext)a=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}const u=Rr(wr,ei.backendName);if(null!=u){const n={pixels:e},r={numChannels:t};return ei.runKernel(wr,n,r)}const[l,c]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let h,d;if(a)h=e.getContext("2d").getImageData(0,0,l,c).data;else if(r||n)h=e.data;else if(i||s||o){if(null==Ko)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ko=new OffscreenCanvas(1,1).getContext("2d")}else Ko=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ko.canvas.width=l,Ko.canvas.height=c,Ko.drawImage(e,0,0,l,c),h=Ko.getImageData(0,0,l,c).data}if(4===t)d=new Int32Array(h);else{const e=l*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=h[4*n+e]}const p=[c,l,t];return jo(d,p,"int32")}function Yo(e){return null!=e&&e.data instanceof Uint8Array}function Jo(){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function Zo(e){return null!=e&&0!==e.width&&0!==e.height}function Qo(e){return Jo()&&!(e instanceof ImageBitmap)&&Zo(e)&&!Yo(e)}async function eu(e,t=3){let n=null;if(ie().getBool("WRAP_TO_IMAGEBITMAP")&&Qo(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Xo(n,t)}function tu(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function nu(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function ru(e,t){let n=ci(e,"img","toPixels");if(!(e instanceof _s)){const e=n;n=Aa(e,"int32"),e.dispose()}tu(n);const[r,s]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2],a=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let l=0;l<r*s;++l){const e=[0,0,0,255];for(let r=0;r<i;r++){const t=a[l*i+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===i?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*l;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){if(!qo){const e=Rr(ut,ei.backendName);null!=e&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),qo=!0)}t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}function su(e,t,n){let r=ci(e,"img","draw");if(!(e instanceof _s)){const e=r;r=Aa(e,"int32"),e.dispose()}tu(r),nu(null===n||void 0===n?void 0:n.imageOptions);const s={image:r},i={canvas:t,options:n};ei.runKernel(ut,s,i)}const iu=pi({fromPixels_:Xo}),au=-2,ou=-1;function uu(e,t,n){const r=e.shape.length;y(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),y(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)y(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function lu(e){const t=[];let n=0;while(e>0)1&e&&t.push(n),e/=2,n++;return t}function cu(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function hu(e,t,n,r){const s=[...e];for(let i=s.length;i<r.length;i++)s.push(1);for(let i=0;i<n;i++)0===i?s[t]=1:(s.splice(t,0,1),s.pop());return s}function du(e,t,n){return n<=e?n:n-(t-1)}function pu(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function fu(e,t,n,r,s,i,a,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=gu(a,u,l,r,e),h=mu(o,u,l,s,e),d=hu(i,u,l,e)}else for(let p=0;p<l;p++)c[p]=yu(a,r,i,e,p,u),h[p]=xu(o,s,i,e,p,u),d[p]=bu(i,p,u);return{begin:c,end:h,strides:d}}function gu(e,t,n,r,s){const i=[...s],a=pu(n,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=0;else{const s=du(t,n,o);let a=r[s];e&1<<s&&(a=0),i[o]=a}return i}function mu(e,t,n,r,s){const i=[...s],a=pu(n,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{const s=du(t,n,o);let a=r[s];e&1<<s&&(a=Number.MAX_SAFE_INTEGER),i[o]=a}for(let o=0;o<i.length;o++){const e=s[o];i[o]<0&&(i[o]+=e),i[o]=f(0,i[o],s[o])}return i}function bu(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function yu(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=f(0,a,u-1),a}function xu(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=o>0?f(0,a,u):f(-1,a,u-1),a}function vu(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function wu(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ku(e,t,n){let r;const s=e.shape.length;let i;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{y(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(y(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function Iu(e,t,n,r,s,i,a,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=a&&0!==(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:u};for(let x=0;x<h.dims;x++)c&&0!==(1<<x&o)&&h.numAddAxisAfterEllipsis++,1<<x&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};Cu(h,d);let p=!0,f=!0,g=!0;const m=[],b=[];for(let x=0;x<e.length;++x){if(0===d.strides[x])throw Error(`strides[${x}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<x),n=e[x];if(-1===n){m.push(t?1:-1);continue}const r=[d.beginMask&1<<x,d.endMask&1<<x],s=[d.strides[x]>0?0:-1,d.strides[x]>0?n:n-1];if(t&&d.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[x];const i=!!(d.beginMask&1<<x&&d.endMask&1<<x);if(d.beginValid&&d.endValid){if(t){const e=d.begin[x]<0?n+d.begin[x]:d.begin[x];if(d.begin[x]=e,d.end[x]=d.begin[x]+1,e<0||e>=n)throw Error(`slice index ${d.begin[x]} of dimension ${x} out of bounds.`)}else d.begin[x]=Su(d.begin[x],0,d.strides[x],n,r,s),d.end[x]=Su(d.end[x],1,d.strides[x],n,r,s);const e=1===d.strides[x]&&0===d.begin[x]&&d.end[x]===n;p=p&&e,f=f&&(0===x&&1===d.strides[x]||e)}else p=p&&1===d.strides[x]&&i,f=f&&(0===x&&1===d.strides[x]||i);let a,o=!1;if(d.beginValid&&d.endValid?(a=d.end[x]-d.begin[x],o=!0):t?(a=1,o=!0):i&&n>=0&&(a=d.strides[x]<0?-n:n,o=!0),o){let e;e=0===a||a<0!==d.strides[x]<0?0:Math.trunc(a/d.strides[x])+(a%d.strides[x]!==0?1:0),m.push(e)}else m.push(-1)}for(let x=0;x<d.finalShapeGatherIndices.length;++x){const e=d.finalShapeGatherIndices[x];e>=0?b.push(m[e]):e===au&&b.push(1)}const y=b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==au));return{finalShapeSparse:y,finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function Cu(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(au),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(ou),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function Su(e,t,n,r,s,i){if(s[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $u(e,t=null,n=!1){const r=ci(e,"x","all","bool"),s={x:r},i={axis:t,keepDims:n};return ei.runKernel(be,s,i)}const Nu=pi({all_:$u});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tu(e,t=null,n=!1){const r=ci(e,"x","any","bool"),s={x:r},i={axis:t,keepDims:n};return ei.runKernel(ye,s,i)}const Eu=pi({any_:Tu});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ru(e,t=0){const n=ci(e,"x","argMax"),r={x:n},s={axis:t};return ei.runKernel(xe,r,s)}const _u=pi({argMax_:Ru});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Au(e,t,n,r,s="NHWC",i){const a=e[3],o=[...t,a],u=Xu(s);return Ou(e,o,n,i,r,null,null,u)}function Fu(e,t,n,r,s,i,a="channelsLast"){const[o,u]=Bu(t);let l;if("channelsLast"===a)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);l=[o,u,e[1],e[1]]}return Ou(e,l,n,r,s,i,!1,a)}function Du(e,t,n,r,s,i,a="NDHWC"){const[o,u,l]=Wu(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return Mu(e,c,n,r,s,!1,h,i)}function Ou(e,t,n,r,s,i,a=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[g,m]=Bu(n),[b,y]=Bu(r),x=Uu(d,b),v=Uu(p,y),{padInfo:w,outHeight:k,outWidth:I}=Vu(s,l,c,g,m,x,v,i,o),C=a?f*h:f;let S;return"channelsFirst"===o?S=[u,C,k,I]:"channelsLast"===o&&(S=[u,k,I,C]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:e,outShape:S,filterShape:t}}function Mu(e,t,n,r,s,i=!1,a="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[u,l,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[u,d,l,c,h]=e}const[p,f,g,,m]=t,[b,y,x]=Wu(n),[v,w,k]=Wu(r),I=Uu(p,v),C=Uu(f,w),S=Uu(g,k),{padInfo:$,outDepth:N,outHeight:T,outWidth:E}=Gu(s,l,c,h,b,y,x,I,C,S,o),R=i?m*d:m;let _;return"channelsFirst"===a?_=[u,R,N,T,E]:"channelsLast"===a&&(_=[u,N,T,E,R]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:T,outWidth:E,outChannels:R,padInfo:$,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function Lu(e,t,n,r,s){null==r&&(r=Pu(e,t,n));const i=e[0],a=e[1],o=Hu((i-t+2*r)/n+1,s),u=Hu((a-t+2*r)/n+1,s);return[o,u]}function zu(e,t,n,r,s,i){null==s&&(s=Pu(e,t[0],r[0]));const a=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*s>=t[o]&&(a[o]=Hu((e[o]-t[o]+2*s)/r[o]+1,i));return a}function Pu(e,t,n,r=1){const s=Uu(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Bu(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Wu(e){return"number"===typeof e?[e,e,e]:e}function Uu(e,t){return t<=1?e:e+(e-1)*(t-1)}function Vu(e,t,n,r,s,i,a,o,u){let l,c,h;if("number"===typeof e){const s=0===e?"VALID":"NUMBER";l={top:e,bottom:e,left:e,right:e,type:s};const a=Lu([t,n],i,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+i-t),o=Math.max(0,(h-1)*s+a-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2),f=o-p;l={top:u,bottom:d,left:p,right:f,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1],m=0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT";l={top:d,bottom:p,left:f,right:g,type:m},c=Hu((t-i+d+p)/r+1,o),h=Hu((n-a+f+g)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}function Gu(e,t,n,r,s,i,a,o,u,l,c){let h,d,p,f;if("valid"===e&&(e=0),"number"===typeof e){const g=0===e?"VALID":"NUMBER";h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:g};const m=zu([t,n,r,1],[o,u,l],1,[s,i,a],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const e=(d-1)*s+o-t,c=(p-1)*i+u-n,g=(f-1)*a+l-r,m=Math.floor(e/2),b=e-m,y=Math.floor(c/2),x=c-y,v=Math.floor(g/2),w=g-v;h={top:y,bottom:x,left:v,right:w,front:m,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Hu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ju(e){const[t,n,r]=Bu(e);return 1===t&&1===n&&1===r}function Ku(e,t){return ju(e)||ju(t)}function qu(e){return Bu(e).every((e=>e>0))}function Xu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Yu(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)y(I(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{y(I(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ju(e,t){const n=ci(e,"x","reshape","string_or_numeric"),r={x:n},s={shape:t};return ei.runKernel($n,r,s)}const Zu=pi({reshape_:Ju});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qu(e,t,n,r,s){const i=ci(e,"x","avgPool","float32"),a=1;y(Ku(n,a),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));let o=i,u=!1;3===i.rank&&(u=!0,o=Zu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),y(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),Yu("avgPool",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let h=ei.runKernel($e,l,c);return h=Aa(h,i.dtype),u?Zu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const el=pi({avgPool_:Qu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tl(e,t,n,r,s,i="NDHWC"){const a=ci(e,"x","avgPool3d","float32");let o=a,u=!1;4===a.rank&&(u=!0,o=Zu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),y(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),y("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),y("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Yu("avgPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i};let h=ei.runKernel(Te,l,c);return h=Aa(h,o.dtype),u?Zu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const nl=pi({avgPool3d_:tl});function rl(e){let t;return t=0===e.rank||1===e.rank?Zu(e,[1,1,1,e.size]):2===e.rank?Zu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Zu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sl(e,t,n,r,s,i){null==i&&(i=.001);const a=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),u=ci(n,"variance","batchNorm");let l,c;null!=s&&(l=ci(s,"scale","batchNorm")),null!=r&&(c=ci(r,"offset","batchNorm")),y(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),y(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),y(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=rl(a),d={x:h,scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:i},f=ei.runKernel(It,d,p);return Zu(f,a.shape)}const il=pi({batchNorm_:sl});function al(e,t,n,r,s,i){const a=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),u=ci(n,"variance","batchNorm");let l,c;return null!=s&&(l=ci(s,"scale","batchNorm")),null!=r&&(c=ci(r,"offset","batchNorm")),y(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),y(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),y(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&y(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&y(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),il(a,o,u,c,l,i)}const ol=pi({batchNorm2d_:al});function ul(e,t,n,r,s,i){const a=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),u=ci(n,"variance","batchNorm");let l,c;return null!=s&&(l=ci(s,"scale","batchNorm")),null!=r&&(c=ci(r,"offset","batchNorm")),y(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),y(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),y(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&y(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&y(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),il(a,o,u,c,l,i)}const ll=pi({batchNorm3d_:ul});function cl(e,t,n,r,s,i){const a=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),u=ci(n,"variance","batchNorm");let l,c;return null!=s&&(l=ci(s,"scale","batchNorm")),null!=r&&(c=ci(r,"offset","batchNorm")),y(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),y(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),y(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&y(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&y(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),il(a,o,u,c,l,i)}const hl=pi({batchNorm4d_:cl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dl(e,t){let n=ci(e,"broadcastTo","x");const r=n.shape;if(Y(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();while(e.length<t.length)e.unshift(1);n=Zu(n,e)}const s=n.shape,i=Array.from(t);for(let l=t.length-1;l>=0;l--)if(s[l]===t[l])i[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);const a=i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0));if(0===a.length)return Da(n);const o={x:n},u={reps:i};return ei.runKernel(dr,o,u)}const pl=pi({broadcastTo_:dl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fl(e,t,n){const r=ci(e,"x","clipByValue");if(y(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return oo(r.shape,t,r.dtype);const s={x:r},i={clipValueMin:t,clipValueMax:n};return ei.runKernel(ze,s,i)}const gl=pi({clipByValue_:fl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ml(e,t=0){y(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=hi(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Da(n[0]);const r=n,s={axis:t};return ei.runKernel(We,r,s)}const bl=pi({concat_:ml});function yl(e){return bl(e,0)}const xl=pi({concat1d_:yl});function vl(e,t){return bl(e,t)}const wl=pi({concat2d_:vl});function kl(e,t){return bl(e,t)}const Il=pi({concat3d_:kl});function Cl(e,t){return bl(e,t)}const Sl=pi({concat4d_:Cl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $l(e,t,n,r,s="NHWC",i=[1,1],a){const o=ci(e,"x","conv2d","float32"),u=ci(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Zu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),y(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),y(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Yu("conv2d",r,a);const h="NHWC"===s?l.shape[3]:l.shape[1];y(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),y(Ku(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),y(qu(i),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),y(qu(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=ei.runKernel(Ue,d,p);return c?Zu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Nl=pi({conv2d_:$l});function Tl(e,t,n,r,s="NWC",i=1,a){const o=ci(e,"x","conv1d"),u=ci(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Zu(o,[1,o.shape[0],o.shape[1]])),y(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),y(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Yu("conv1d",r,a),y(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),y(Ku(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),y(qu(i),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),y(qu(n),(()=>"Error in conv1D: Stride should be larger than 0.")),y("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Zu(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=Zu(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=[1,n],f=[1,i],g="NHWC",m=Nl(d,h,p,r,g,f,a);return Zu(m,c?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}const El=pi({conv1d_:Tl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rl(e,t,n,r,s,i="NHWC",a){y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Zu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),y(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),y(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),y(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?u.shape[3]:u.shape[1];y(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),y(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Yu("conv2dDerInput",s,a);const d={dy:u,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},f=ei.runKernel(Ge,d,p);return l?Zu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const _l=pi({conv2DBackpropInput_:Rl});function Al(e,t,n,r,s,i){const a=ci(e,"x","conv2dTranspose"),o=ci(t,"filter","conv2dTranspose");return _l(n,a,o,r,s,"NHWC",i)}const Fl=pi({conv2dTranspose_:Al});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dl(e,t,n,r,s="NDHWC",i=[1,1,1]){const a=ci(e,"x","conv3d"),o=ci(t,"filter","conv3d");let u=a,l=!1;4===a.rank&&(l=!0,u=Zu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),y(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),y(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),y(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),y(Ku(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),y("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),y(qu(i),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),y(qu(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:i},d=ei.runKernel(He,c,h);return l?Zu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Ol=pi({conv3d_:Dl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ml(e,t,n,r,s){y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,a=t,o=!1;4===t.rank&&(o=!0,a=Zu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const u=i[4],l=a.shape[4];y(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),y(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),y(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),y(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),y(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:s,strides:r,inputShape:i},d=ei.runKernel(Ke,c,h);return o?Zu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Ll=pi({conv3DBackpropInput_:Ml});function zl(e,t,n,r,s){const i=ci(e,"x","conv3dTranspose"),a=ci(t,"filter","conv3dTranspose");return Ll(n,i,a,r,s)}const Pl=pi({conv3dTranspose_:zl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bl(e,t,n,r=!1){const s=ci(e,"x","denseBincount"),i=ci(t,"weights","denseBincount");y("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),y(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),y(i.size===s.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`));const a={x:s,weights:i},o={size:n,binaryOutput:r};return ei.runKernel(Qe,a,o)}const Wl=pi({denseBincount_:Bl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ul(e,t,n,r,s="NHWC",i=[1,1],a){const o=ci(e,"x","depthwiseConv2d","float32"),u=ci(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Zu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),y(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),y(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===s?l.shape[3]:l.shape[1];y(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Yu("depthwiseConv2d",r,a);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=ei.runKernel(tt,d,p);return c?Zu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Vl=pi({depthwiseConv2d_:Ul});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gl(e){const t=ci(e,"x","elu","float32"),n={x:t};return ei.runKernel(ht,n)}const Hl=pi({elu_:Gl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jl(e,t){let n=ci(e,"a","equal","string_or_numeric"),r=ci(t,"b","equal","string_or_numeric");[n,r]=Gs(n,r),xo(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(ft,s)}const Kl=pi({equal_:jl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ql(e){let t=ci(e,"x","erf");y("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Aa(t,"float32"));const n={x:t};return ei.runKernel(pt,n)}const Xl=pi({erf_:ql});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yl(e){const t=ci(e,"x","exp"),n={x:t};return ei.runKernel(gt,n)}const Jl=pi({exp_:Yl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zl(e,t=0){const n=ci(e,"x","expandDims","string_or_numeric");y(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return ei.runKernel(mt,r,s)}const Ql=pi({expandDims_:Zl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ec(e,t){const n=ci(e,"x","tile","string_or_numeric");y(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return ei.runKernel(dr,r,s)}const tc=pi({tile_:ec});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nc(e,t,n,r="float32"){null==t&&(t=e);const s=Ra([e,t],r),i=e<=t?e:t;for(let o=0;o<i;++o)s.set(1,o,o);const a=Zu(s.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return tc(Ql(a,0),[n[0],1,1]);if(2===n.length)return tc(Ql(Ql(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return tc(Ql(Ql(Ql(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const rc=pi({eye_:nc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sc(e){const t=ci(e,"x","floor","float32"),n={x:t};return ei.runKernel(wt,n)}const ic=pi({floor_:sc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ac(e,t,n=0,r=0){const s=ci(e,"x","gather"),i=ci(t,"indices","gather","int32"),a={x:s,indices:i},o={axis:n,batchDims:r};return ei.runKernel(Ct,a,o)}const oc=pi({gather_:ac});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uc(e,t){let n=ci(e,"a","greater","string_or_numeric"),r=ci(t,"b","greater","string_or_numeric");[n,r]=Gs(n,r),xo(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel($t,s)}const lc=pi({greater_:uc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cc(e,t){let n=ci(e,"a","greaterEqual","string_or_numeric"),r=ci(t,"b","greaterEqual","string_or_numeric");[n,r]=Gs(n,r),xo(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(Nt,s)}const hc=pi({greaterEqual_:cc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dc(e,t=.2){const n=ci(e,"x","leakyRelu"),r={x:n},s={alpha:t};return ei.runKernel(Dt,r,s)}const pc=pi({leakyRelu_:dc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fc(e){const t=ci(e,"x","log","float32"),n={x:t};return ei.runKernel(zt,n)}const gc=pi({log_:fc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mc(e){const t=ci(e,"x","log1p"),n={x:t};return ei.runKernel(Pt,n)}const bc=pi({log1p_:mc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yc(e,t=null,n=!1){const r=ci(e,"x","max"),s={x:r},i={reductionIndices:t,keepDims:n};return ei.runKernel(jt,s,i)}const xc=pi({max_:yc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vc(e,t=null,n=!1){let r=ci(e,"x","sum");"bool"===r.dtype&&(r=Aa(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return ei.runKernel(Kn,s,i)}const wc=pi({sum_:vc});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kc(e,t=-1){const n=ci(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Za(((e,n)=>{const r=!0,s=xc(e,t,!0),i=po(e,s),a=po(Aa(i,"float32"),gc(wc(Jl(i),t,r)));n([a]);const o=(e,n)=>{const[r]=n,s=!0,i=Jl(r);return po(e,Ga(wc(e,t,s),i))};return{value:a,gradFunc:o}}));return r(n)}const Ic=pi({logSoftmax_:kc});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Sc(e,t,n){const r=e.length+t.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[i++]):s.push(t[a++]);return s}function $c(e,t){const n=[],r=e.length;for(let i=0;i<r;i++)-1===t.indexOf(i)&&n.push(e[i]);const s=t.map((t=>e[t]));return[n,s]}function Nc(e,t){const n=t.map((e=>1));return Sc(e,n,t)}function Tc(e,t,n){y(Cc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Ec(e,t){if(Cc(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Rc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function _c(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ac(e,t=null,n=!1){const r=ci(e,"x","logSumExp"),s=T(t,r.shape),i=xc(r,s,!0),a=po(r,i),o=Jl(a),u=wc(o,s),l=gc(u),c=za(Zu(i,l.shape),l);if(n){const e=Nc(c.shape,s);return Zu(c,e)}return c}const Fc=pi({logSumExp_:Ac});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dc(e,t){const n=ci(e,"a","logicalAnd","bool"),r=ci(t,"b","logicalAnd","bool");xo(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(Bt,s)}const Oc=pi({logicalAnd_:Dc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mc(e,t,n=!1,r=!1){let s=ci(e,"a","matMul"),i=ci(t,"b","matMul");[s,i]=Gs(s,i);const a={a:s,b:i},o={transposeA:n,transposeB:r};return ei.runKernel(Re,a,o)}const Lc=pi({matMul_:Mc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zc(e,t,n,r,s){const i=ci(e,"x","maxPool"),a=1;let o=i,u=!1;3===i.rank&&(u=!0,o=Zu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),y(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),y(Ku(n,a),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Yu("maxPool",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s},h=ei.runKernel(qt,l,c);return u?Zu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Pc=pi({maxPool_:zc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bc(e,t=[1,1,1],n,r,s,i="NDHWC"){const a=ci(e,"x","maxPool3d");let o=a,u=!1;4===a.rank&&(u=!0,o=Zu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),y(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),y("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Yu("maxPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i},h=ei.runKernel(Yt,l,c);return u?Zu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Wc=pi({maxPool3d_:Bc});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uc(e,t=null,n=!1){const r=ci(e,"x","mean"),s={x:r},i={axis:t,keepDims:n};return ei.runKernel(Qt,s,i)}const Vc=pi({mean_:Uc});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gc(e,t=null,n=!1){const r=ci(e,"x","min"),s={x:r},i={axis:t,keepDims:n};return ei.runKernel(en,s,i)}const Hc=pi({min_:Gc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jc(e,t){let n=ci(e,"a","minimum"),r=ci(t,"b","minimum");[n,r]=Gs(n,r),"bool"===n.dtype&&(n=Aa(n,"int32"),r=Aa(r,"int32")),xo(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(tn,s)}const Kc=pi({minimum_:jc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qc(e,t=null,n=!1){e=ci(e,"x","moments");const r=T(t,e.shape),s=Vc(e,r,n);let i=s.shape;n||(i=Nc(s.shape,r));const a=qa(po(Aa(e,"float32"),Zu(s,i))),o=Vc(a,r,n);return{mean:s,variance:o}}const Xc=pi({moments_:qc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yc(e){const t=ci(e,"x","neg"),n={x:t};return ei.runKernel(on,n)}const Jc=pi({neg_:Yc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zc(e,t){let n=ci(e,"a","notEqual","string_or_numeric"),r=ci(t,"b","notEqual","string_or_numeric");[n,r]=Gs(n,r),xo(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(un,s)}const Qc=pi({notEqual_:Zc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eh(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i=ci(e,"indices","oneHot","int32"),a={indices:i},o={dtype:s,depth:t,onValue:n,offValue:r};return ei.runKernel(pn,a,o)}const th=pi({oneHot_:eh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nh(e,t="float32"){if(Y(e),"complex64"===t){const t=nh(e,"float32"),n=nh(e,"float32");return gi(t,n)}const n=q(w(e),t);return ei.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rh(e,t="float32"){if(Y(e),"complex64"===t){const t=rh(e,"float32"),n=nh(e,"float32");return gi(t,n)}const n=K(w(e),t);return ei.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sh(e){const t=ci(e,"x","onesLike"),n={x:t};return ei.runKernel(dn,n)}const ih=pi({onesLike_:sh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ah(e,t,n=0){const r=ci(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},i={x:r};return ei.runKernel(gn,i,s)}const oh=pi({pad_:ah});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uh(e,t){const n=ci(e,"x","prelu"),r=ci(t,"alpha","prelu"),s={x:n,alpha:r};return ei.runKernel(bn,s)}const lh=pi({prelu_:uh});var ch=n(928);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hh{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=ch.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;while(!n){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class dh{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ch.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ph(e,t=0,n=1,r,s){if(Y(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new hh(t,n,r,!1,s),a=Ra(e,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const fh=pi({randomNormal_:ph});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gh(e,t=0,n=1,r="float32",s){Y(e);const i=Ra(e,r),a=new dh(t,n,null,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const mh=pi({randomUniform_:gh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bh(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return ei.runKernel(kn,{},s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yh(e){const t=ci(e,"x","relu"),n={x:t};return ei.runKernel(Sn,n)}const xh=pi({relu_:yh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vh(e,t){const n=ci(e,"x","reverse"),r={x:n},s={dims:t};return ei.runKernel(An,r,s)}const wh=pi({reverse_:vh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kh(e){const t=ci(e,"x","selu"),n={x:t};return ei.runKernel(Pn,n)}const Ih=pi({selu_:kh});function Ch(e,t,n,r,s,i=[1,1],a="NHWC"){const o=ci(e,"x","separableConv2d"),u=ci(t,"depthwiseFilter","separableConv2d"),l=ci(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Zu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");y(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),y(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),y(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),y(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),y(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],p=u.shape[3];y(l.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`));const f=Vl(c,u,r,s,a,i),g=1,m=Nl(f,l,g,"valid",a);return h?Zu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Sh=pi({separableConv2d_:Ch});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $h(e){const t=ci(e,"x","sigmoid","float32"),n={x:t};return ei.runKernel(Gn,n)}const Nh=pi({sigmoid_:$h});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Th(e,t,n){const r=ci(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:t,size:n};return ei.runKernel(Bn,s,i)}const Eh=pi({slice_:Th});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rh(e,t,n){const r=ci(e,"x","slice1d");return y(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Eh(r,[t],[n])}const _h=pi({slice1d_:Rh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ah(e,t,n){const r=ci(e,"x","slice2d");return y(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Eh(r,t,n)}const Fh=pi({slice2d_:Ah});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dh(e,t,n){const r=ci(e,"x","slice3d");return y(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Eh(r,t,n)}const Oh=pi({slice3d_:Dh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mh(e,t,n){const r=ci(e,"x","slice4d");return y(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Eh(r,t,n)}const Lh=pi({slice4d_:Mh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zh(e,t=-1){const n=ci(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return ei.runKernel(Yn,r,s)}const Ph=pi({softmax_:zh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bh(e){const t=ci(e,"x","softplus"),n={x:t};return ei.runKernel(Hn,n)}const Wh=pi({softplus_:Bh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uh(e,t,n=0){const r=ci(e,"x","split"),s={x:r},i={numOrSizeSplits:t,axis:n};return ei.runKernel(Xn,s,i)}const Vh=pi({split_:Uh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gh(e,t){const n=ci(e,"x","squeeze","string_or_numeric");return Zu(n,E(n.shape,t).newShape)}const Hh=pi({squeeze_:Gh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jh(e,t=0){const n=hi(e,"tensors","stack","string_or_numeric");y(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&y(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return ei.runKernel(fn,r,s)}const Kh=pi({stack_:jh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qh(e){const t=ci(e,"x","tanh","float32"),n={x:t};return ei.runKernel(hr,n)}const Xh=pi({tanh_:qh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yh(e,t){v(e);const n=oi(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const r=null;return mi(e,r,n,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jh(e,t,n){if(v(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=oi(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return mi(e,t,r,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zh(e,t=0,n=1,r,s){if(Y(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new hh(t,n,r,!0,s),a=Ra(e,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const Qh=pi({truncatedNormal_:Zh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ed(e,t=0){const n=ci(e,"x","unstack","string_or_numeric");y(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return ei.runKernel(br,r,s)}const td=pi({unstack_:ed});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nd(e,t=!0,n,r){return ei.makeVariable(e,t,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rd(e,t,n){const r=ci(t,"a","where"),s=ci(n,"b","where"),i=ci(e,"condition","where","bool"),a=xo(xo(i.shape,r.shape),s.shape),o=pl(i,a),u=pl(r,a),l=pl(s,a),c={condition:o,t:u,e:l};return ei.runKernel(zn,c)}const sd=pi({where_:rd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function id(e){const t=ci(e,"input","imag"),n={input:t};return ei.runKernel(Rt,n)}const ad=pi({imag_:id});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function od(e){const t=ci(e,"input","real"),n={input:t};return ei.runKernel(In,n)}const ud=pi({real_:od});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ld(e,t,n){const r=ci(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),y(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{y(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},i={perm:t};return"complex64"===r.dtype?Ci((()=>{let e=ud(r),t=ad(r);return e=ei.runKernel(gr,{x:e},i),t=ei.runKernel(gr,{x:t},i),n&&(t=Jc(t)),gi(e,t)})):ei.runKernel(gr,s,i)}const cd=pi({transpose_:ld});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hd(e,t){if(null==t)return e.shape.slice();if(k(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dd(e,t,n,r){const s=ci(e,"x","dropout");if(y("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),y(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof _s?s.clone():s;const i=hd(s,n),a=1-t,o=Ua(ic(za(mh(i,0,1,"float32",r),a)),a);return Ga(s,o)}const pd=pi({dropout_:dd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fd(e){y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ei.runKernel(yt,t)}const gd=pi({fft_:fd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function md(e,t){y("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,s=Eh(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=bl([e,nh(r)],e.shape.length-1),n=t}else s=e;const i=Ya(s),a=Zu(gi(s,i),[r,n]),o=gd(a),u=Math.floor(n/2)+1,l=ud(o),c=ad(o),h=Vh(l,[u,n-u],l.shape.length-1),d=Vh(c,[u,n-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,Zu(gi(h[0],d[0]),p)}const bd=pi({rfft_:md});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yd(e){y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ei.runKernel(Et,t)}const xd=pi({ifft_:yd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vd(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Zu(e,[n,t]);r=xd(s)}else{const s=[n,2*(t-1)],i=Zu(ud(e),[n,t]),a=Zu(ad(e),[n,t]),o=wh(Eh(i,[0,1],[n,t-2]),1),u=Ga(wh(Eh(a,[0,1],[n,t-2]),1),Qa(-1)),l=bl([i,o],1),c=bl([a,u],1),h=Zu(gi(l,c),[s[0],s[1]]);r=xd(h)}if(r=ud(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Zu(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}const wd=pi({irfft_:vd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kd(e,t,n,r,s,i="NHWC",a){let o=e;3===e.rank&&(o=Zu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Zu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),y(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),y(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),y(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?u.shape[3]:u.shape[1];y(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),y(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Yu("conv2dDerFilter",s,a);const h={x:o,dy:u},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:n};return ei.runKernel(Ve,h,d)}const Id=pi({conv2DBackpropFilter_:kd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cd(e){const t=ci(e,"x","relu6"),n={x:t};return ei.runKernel(_n,n)}const Sd=pi({relu6_:Cd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $d(e,t=0){const n=ci(e,"x","step"),r={x:n},s={alpha:t};return ei.runKernel(vr,r,s)}const Nd=pi({step_:$d});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Td(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ga(e,Nd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ed(e,t){let n=t;const r=yo(e.shape,t.shape);return r.length>0&&(n=wc(n,r)),Zu(n,e.shape)}function Rd(e,t,n,r){if("linear"===t)return e;if("relu"===t)return xh(e);if("elu"===t)return Hl(e);if("relu6"===t)return Sd(e);if("prelu"===t)return lh(e,n);if("leakyrelu"===t)return pc(e,r);if("sigmoid"===t)return Nh(e);throw new Error(`Unknown fused activation ${t}.`)}const _d=(e,t)=>{const n=e>0;return!n||"linear"===t};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ad({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===_d(ei.state.gradientDepth,u)){y("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Nl(e,t,n,r,s,i,a);return null!=o&&(h=za(h,o)),Rd(h,u,l,c)}const h=ci(e,"x","conv2d","float32"),d=ci(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Zu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),y(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),y(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Yu("fused conv2d",r,a);const g="NHWC"===s?p.shape[3]:p.shape[1];y(d.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`)),y(Ku(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const m=Ou(p.shape,d.shape,n,i,r,a);let b,x;if(null!=o&&(b=ci(o,"bias","fused conv2d"),[b]=Gs(b,h),"NHWC"===s?xo(m.outShape,b.shape):(y(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),y(0===b.shape.length||b.shape[0]===m.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${m.outChannels})`)))),null!=l){const e=l.shape;if(y(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)y(1===e[0]||e[0]===m.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${m.outChannels}).`));else if(3===e.length)try{xo(e,m.outShape)}catch(I){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(t)}x=ci(l,"prelu weights","fused conv2d")}const v=(e,t)=>{y("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[a,o,l,c]=t,h=Td(e,l,u);y(ju(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=_l(o.shape,h,a,n,r),p=Id(o,h,a.shape,n,r),f=[d,p];if(null!=c){const e=Ed(c,h);f.push(e)}return f},w={x:p,filter:d,bias:b,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:u,leakyreluAlpha:c};if(null==o){const e=Za(((e,t,n)=>{let r=ei.runKernel(Cr,w,k);return n([t,e,r]),f&&(r=Zu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(p,d)}{const e=Za(((e,t,n,r)=>{let s=ei.runKernel(Cr,w,k);return r([t,e,s,n]),f&&(s=Zu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(p,d,b)}}const Fd=pi({fusedConv2d_:Ad});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dd(e,t,n,r,s,i=[1,1],a){let o=e;3===e.rank&&(o=Zu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Zu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:n};return ei.runKernel(nt,l,c)}const Od=pi({depthwiseConv2dNativeBackpropFilter_:Dd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Md(e,t,n,r,s,i=[1,1],a){let o=t,u=!1;3===t.rank&&(u=!0,o=Zu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:e},h=ei.runKernel(rt,l,c);return u?Zu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Ld=pi({depthwiseConv2dNativeBackpropInput_:Md});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zd({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===_d(ei.state.gradientDepth,i)){let u=Lc(e,t,n,r);return null!=s&&(u=za(u,s)),Rd(u,i,a,o)}let u=ci(e,"a","fused matMul"),l=ci(t,"b","fused matMul");[u,l]=Gs(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),g=l.shape.slice(0,-2),m=w(f),b=w(g);y(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=xo(u.shape.slice(0,-2),l.shape.slice(0,-2)),v=x.concat([d,p]),k=Zu(u,n?[m,c,d]:[m,d,c]),I=Zu(l,r?[b,p,h]:[b,h,p]);let C,S;null!=s&&(C=ci(s,"bias","fused matMul"),[C]=Gs(C,u),xo(v,C.shape)),null!=a&&(S=ci(a,"prelu weights","fused matMul"));const $=(e,t)=>{const[a,o,u,l]=t,c=Td(Zu(e,u.shape),u,i);let h,d;if(n||r?!n&&r?(h=Lc(c,o,!1,!1),d=Lc(c,a,!0,!1)):n&&!r?(h=Lc(o,c,!1,!0),d=Lc(a,c,!1,!1)):(h=Lc(o,c,!0,!0),d=Lc(c,a,!0,!0)):(h=Lc(c,o,!1,!0),d=Lc(a,c,!0,!1)),null!=s){const e=Ed(l,c);return[h,d,e]}return[h,d]},N={a:k,b:I,bias:C,preluActivationWeights:S},T={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==s){const e=Za(((e,t,n)=>{const r=ei.runKernel(Ir,N,T);return n([e,t,r]),{value:Zu(r,v),gradFunc:$}}));return e(k,I)}{const e=Za(((e,t,n,r)=>{const s=ei.runKernel(Ir,N,T);return r([e,t,s,n]),{value:Zu(s,v),gradFunc:$}}));return e(k,I,C)}}const Pd=pi({fusedMatMul_:zd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bd(e,t,n,r,s="bilinear",i=0){const a=ci(e,"image","cropAndResize"),o=ci(t,"boxes","cropAndResize","float32"),u=ci(n,"boxInd","cropAndResize","int32"),l=o.shape[0];y(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),y(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),y(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),y(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),y(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),y("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:a,boxes:o,boxInd:u},h={method:s,extrapolationValue:i,cropSize:r},d=ei.runKernel(Ze,c,h);return d}const Wd=pi({cropAndResize_:Bd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ud(e){const t=ci(e,"image","flipLeftRight","float32");y(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t},r=ei.runKernel(vt,n,{});return r}const Vd=pi({flipLeftRight_:Ud});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gd(e){const t=ci(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];y(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),y(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,tc(t,s)}const Hd=pi({grayscaleToRGB_:Gd});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jd(e,...t){const n=t.map(((e,t)=>ci(e,`tensors${t}`,"einsum"))),r={equation:e};return ei.runKernel(ct,n,r)}const Kd=pi({einsum_:jd});
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qd(e){const t=ci(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];y(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),y(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,i=Aa(t,"float32"),a=Yh([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Kd("ij,j->i",i,a);break;case 3:o=Kd("ijk,k->ij",i,a);break;case 4:o=Kd("ijkl,l->ijk",i,a);break;case 5:o=Kd("ijklm,m->ijkl",i,a);break;case 6:o=Kd("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=Ql(o,-1),Aa(o,s)}const Xd=pi({rgbToGrayscale_:qd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yd(e,t,n=0,r=.5){const s=ci(e,"image","rotateWithOffset","float32");y(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},a={radians:t,fillValue:n,center:r},o=ei.runKernel(kr,i,a);return o}const Jd=pi({rotateWithOffset_:Yd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zd(e,t,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=e.shape[0];return n=Math.min(n,a),y(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),y(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),y(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),y(1===t.rank,(()=>"scores must be a 1D tensor")),y(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),y(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qd(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=ci(e,"boxes","nonMaxSuppression","float32"),a=ci(t,"scores","nonMaxSuppression","float32"),o=Zd(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return ei.runKernel(ln,{boxes:i,scores:a},u)}const ep=pi({nonMaxSuppression_:Qd});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tp(e,t,n){const r=np(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function np(e,t,n){return sp(e,t,n||rp)}function rp(e,t){return e>t?1:e<t?-1:0}function sp(e,t,n){let r=0,s=e.length,i=0,a=!1;while(r<s){i=r+(s-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ip(e,t,n,r,s){return up(e,t,n,r,s,0)}function ap(e,t,n,r,s,i){return up(e,t,n,r,s,0,!1,i,!0)}function op(e,t,n,r,s,i){return up(e,t,n,r,s,i,!0)}function up(e,t,n,r,s,i,a=!1,o=!1,u=!1){const l=[];for(let m=0;m<t.length;m++)t[m]>s&&l.push({score:t[m],boxIndex:m,suppressBeginIndex:0});l.sort(hp);const c=i>0?-.5/i:0,h=[],d=[];while(h.length<n&&l.length>0){const t=l.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=t;if(n<s)break;let o=!1;for(let u=h.length-1;u>=a;--u){const n=lp(e,i,h[u]);if(n>=r){o=!0;break}if(t.score=t.score*cp(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>s&&tp(l,t,hp))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return a&&(g["selectedScores"]=d),u&&(g["validOutputs"]=p),g}function lp(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(u-a),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,l),m=Math.max(a,c),b=Math.min(o,h),y=Math.min(u,d),x=Math.max(b-g,0)*Math.max(y-m,0);return x/(p+f-x)}function cp(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function hp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function dp(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=ci(e,"boxes","nonMaxSuppressionAsync"),a=ci(t,"scores","nonMaxSuppressionAsync"),o=Zd(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([i.data(),a.data()]),l=u[0],c=u[1],{selectedIndices:h}=ip(l,c,n,r,s);return i!==e&&i.dispose(),a!==t&&a.dispose(),Yh(h,"int32")}const pp=dp;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fp(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=ci(e,"boxes","nonMaxSuppression"),o=ci(t,"scores","nonMaxSuppression"),u=Zd(a,o,n,r,s,i);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,i=u.softNmsSigma;const l={boxes:a,scores:o},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i},h=ei.runKernel(hn,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}const gp=pi({nonMaxSuppressionWithScore_:fp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function mp(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=ci(e,"boxes","nonMaxSuppressionAsync"),o=ci(t,"scores","nonMaxSuppressionAsync"),u=Zd(a,o,n,r,s,i);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,i=u.softNmsSigma;const l=await Promise.all([a.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=op(c,h,n,r,s,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:Yh(d,"int32"),selectedScores:Yh(p)}}const bp=mp;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yp(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=ci(e,"boxes","nonMaxSuppression"),o=ci(t,"scores","nonMaxSuppression"),u=Zd(a,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,d={boxes:a,scores:o},p={maxOutputSize:l,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},f=ei.runKernel(cn,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const xp=pi({nonMaxSuppressionPadded_:yp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function vp(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=ci(e,"boxes","nonMaxSuppressionAsync"),o=ci(t,"scores","nonMaxSuppressionAsync"),u=Zd(a,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:g}=ap(d,p,l,c,h,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:Yh(f,"int32"),validOutputs:Qa(g,"int32")}}const wp=vp;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kp(e,t,n=!1,r=!1){const s=ci(e,"images","resizeBilinear");y(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),y(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),y(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=Zu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},l=ei.runKernel(En,o,u);return a?Zu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Ip=pi({resizeBilinear_:kp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cp(e,t,n=!1,r=!1){const s=ci(e,"images","resizeNearestNeighbor");y(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),y(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),y("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),y(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=Zu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},l=ei.runKernel(Nn,o,u);return a?Zu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Sp=pi({resizeNearestNeighbor_:Cp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $p(e,t,n){const r=ci(e,"x","bincount"),s=ci(t,"weights","bincount");y("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),y(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},a={size:n};return ei.runKernel(Ae,i,a)}const Np=pi({bincount_:$p});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tp(e,t){let n=ci(e,"a","lessEqual","string_or_numeric"),r=ci(t,"b","lessEqual","string_or_numeric");[n,r]=Gs(n,r),xo(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(Mt,s)}const Ep=pi({lessEqual_:Tp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rp(e){const t=ci(e,"x","round"),n={x:t};return ei.runKernel(Fn,n)}const _p=pi({round_:Rp});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ap(e,t="binary",n=!1,r=.5){const s=ci(e,"image","threshold"),i=.2989,a=.587,o=.114,u=s.shape[0]*s.shape[1];let l,c,h,d,p=Ga(Yh([r]),255);if(y(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),y(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),y("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),y("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[l,c,h]=Vh(s,[1,1,1],-1);const e=Ga(l,i),t=Ga(c,a),n=Ga(h,o);d=za(za(e,t),n)}else d=e;if("otsu"===t){const e=Np(Aa(_p(d),"int32"),bi([]),256);p=Fp(e,u)}const f=n?Ep(d,p):lc(d,p),g=Aa(Ga(f,255),"int32");return g}function Fp(e,t){let n,r,s,i,a,o,u=Yh([-1]),l=Yh([0]),c=Yh([0]);for(let h=0;h<e.size-1;h++){n=Eh(e,0,h+1),r=Eh(e,h+1),a=Ua(wc(n),t),o=Ua(wc(r),t);const d=wc(Ga(n,bh(0,n.size)));s=Ua(d,wc(n));const p=oo(r.shape,n.size),f=za(bh(0,r.size),p),g=Ga(r,f);i=Ua(wc(g),wc(r));const m=po(s,i),b=po(s,i),y=Ga(a,o);c=Ga(Ga(y,m),b);const x=lc(c,l);l=sd(x,c,l),u=sd(x,Yh([h]),u)}return u}const Dp=pi({threshold_:Ap});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Op(e,t,n="nearest",r="constant",s=0,i){const a=ci(e,"image","transform","float32"),o=ci(t,"transforms","transform","float32");y(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),y(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),y(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const u={image:a,transforms:o},l={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return ei.runKernel(fr,u,l)}const Mp=pi({transform_:Op});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Lp(e,t){let n=ci(e,"a","less","string_or_numeric"),r=ci(t,"b","less","string_or_numeric");[n,r]=Gs(n,r),xo(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(Ot,s)}const zp=pi({less_:Lp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pp(e,t,n){const r=ci(e,"a","bandPart");y(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,a]=r.shape.slice(-2);let o,u;"number"===typeof t?(y(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),y(t<=i,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`)),o=ci(t<0?i:t,"numLower","bandPart")):(y("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=sd(zp(t,0),i,Kc(t,i))),"number"===typeof n?(y(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),y(n<=a,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`)),u=ci(n<0?a:n,"numUpper","bandPart")):(y("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=sd(zp(n,0),a,Kc(n,a)));const l=Zu(bh(0,i,1,"int32"),[-1,1]),c=bh(0,a,1,"int32"),h=po(l,c),d=Oc(Ep(h,o),hc(h,Jc(u))),p=nh([i,a],r.dtype);return Zu(Kh(td(Zu(r,[-1,i,a])).map((e=>sd(d,e,p)))),s)}const Bp=pi({bandPart_:Pp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wp(e,t="euclidean",n=null,r=!1){e=ci(e,"x","norm");const s=Up(e,t,n);let i=s.shape;if(r){const t=T(n,e.shape);i=Nc(s.shape,t)}return Zu(s,i)}function Up(e,t,n=null){if(0===e.rank)return mo(e);if(1!==e.rank&&null===n)return Up(Zu(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return wc(mo(e),n);if(t===1/0)return xc(mo(e),n);if(t===-1/0)return Hc(mo(e),n);if("euclidean"===t||2===t)return ja(wc(co(mo(e),Qa(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return xc(wc(mo(e),n[0]),n[1]-1);if(t===1/0)return xc(wc(mo(e),n[1]),n[0]);if(t===-1/0)return Hc(wc(mo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ja(wc(qa(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Vp=pi({norm_:Wp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gp(e){let t;if(Array.isArray(e)){t=!1,y(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)y(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Vh(e,e.shape[0],0).map((e=>Hh(e,[0])));y(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(ei.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=Ga(wc(Ga(n[t],e)),n[t]);e=po(e,r)}return Ua(e,Vp(e,"euclidean"))})));return t?Kh(n,0):n}const Hp=pi({gramSchmidt_:Gp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jp(e,t=!1){if(y(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Kp(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=td(Zu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],i=[];r.forEach((e=>{const[n,r]=Kp(e,t);s.push(n),i.push(r)}));const a=Zu(Kh(s,0),e.shape),o=Zu(Kh(i,0),e.shape);return[a,o]}}function Kp(e,t=!1){return ei.tidy((()=>{y(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=rc(n),i=Da(e);const a=Jh([[1]],[1,1]);let o=Da(a);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=i,u=o,l=s;[o,i,s]=ei.tidy((()=>{const t=Eh(i,[e,e],[n-e,1]),u=Vp(t),l=Eh(i,[e,e],[1,1]),c=sd(lc(l,0),Jh([[-1]]),Jh([[1]])),h=po(l,Ga(c,u)),d=Ua(t,h);o=1===d.shape[0]?Da(a):bl([a,Eh(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Jc(Ua(Lc(c,h),u)),f=Eh(i,[e,0],[n-e,r]),g=Ga(p,o),m=cd(o);if(0===e)i=po(f,Lc(g,Lc(m,f)));else{const t=po(f,Lc(g,Lc(m,f)));i=bl([Eh(i,[0,0],[e,r]),t],0)}const b=cd(g),y=Eh(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=po(y,Lc(Lc(y,o),b));else{const t=po(y,Lc(Lc(y,o),b));s=bl([Eh(s,[0,0],[n,e]),t],1)}return[o,i,s]})),Si([t,u,l])}return!t&&n>r&&(s=Eh(s,[0,0],[n,r]),i=Eh(i,[0,0],[r,r])),[s,i]}))}const qp=pi({qr_:jp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Xp;(function(e){e[e["NONE"]=0]="NONE",e[e["MEAN"]=1]="MEAN",e[e["SUM"]=2]="SUM",e[e["SUM_BY_NONZERO_WEIGHTS"]=3]="SUM_BY_NONZERO_WEIGHTS"})(Xp||(Xp={}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yp(e,t){let n=ci(e,"a","squaredDifference"),r=ci(t,"b","squaredDifference");[n,r]=Gs(n,r),xo(n.shape,r.shape);const s={a:n,b:r},i={};return ei.runKernel(nr,s,i)}const Jp=pi({squaredDifference_:Yp});const Zp={flipLeftRight:Vd,grayscaleToRGB:Hd,resizeNearestNeighbor:Sp,resizeBilinear:Ip,rgbToGrayscale:Xd,rotateWithOffset:Jd,cropAndResize:Wd,nonMaxSuppression:ep,nonMaxSuppressionAsync:pp,nonMaxSuppressionWithScore:gp,nonMaxSuppressionWithScoreAsync:bp,nonMaxSuppressionPadded:xp,nonMaxSuppressionPaddedAsync:wp,threshold:Dp,transform:Mp},Qp={bandPart:Bp,gramSchmidt:Hp,qr:qp};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ef{static sgd(e){return new Io(e)}static momentum(e,t,n=!1){return new Co(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new So(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new fo(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new ao(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new ko(e,t,n,r,s)}static adagrad(e,t=.1){return new uo(e,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const tf=ef;n(9848);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const nf=(()=>"undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e())();function rf(){return new Promise((e=>nf((()=>e()))))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sf(e,t){const n=e[0].length;e.forEach(((e,t)=>{y(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),y(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let i=0;i<n;i++)y(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function af(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var of;function uf(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)while(r.length<e+n.length)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const i=n[s],a=r[r.length-n.length+s],o=r[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${i} but shape[${s+e}] = ${o}`)}else r[a]=i}return r}function lf(e){const t={FIRST_DIM_SIZE:of.FIRST_DIM_SIZE,VALUE_ROWIDS:of.VALUE_ROWIDS,ROW_LENGTHS:of.ROW_LENGTHS,ROW_SPLITS:of.ROW_SPLITS,ROW_LIMITS:of.ROW_LIMITS,ROW_STARTS:of.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function cf(e){return 0===e.length?0:e[0]===of.FIRST_DIM_SIZE?e.length-1:e.length}function hf(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}(function(e){e[e["FIRST_DIM_SIZE"]=0]="FIRST_DIM_SIZE",e[e["VALUE_ROWIDS"]=1]="VALUE_ROWIDS",e[e["ROW_LENGTHS"]=2]="ROW_LENGTHS",e[e["ROW_SPLITS"]=3]="ROW_SPLITS",e[e["ROW_LIMITS"]=4]="ROW_LIMITS",e[e["ROW_STARTS"]=5]="ROW_STARTS"})(of||(of={}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const df=30;function pf(e){return e<=df?e:U(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ff(e,t,n){const r=n*("number"===typeof e?e:e[0]),s=t*("number"===typeof e?e:e[1]);return[r,s]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gf(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function mf(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function bf(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?r?s.push(t[i-1]*e[i]):s.push(e[i]/t[i-1]):s.push(e[i]);return s}function yf(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function xf(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function vf(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===w(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,i=s[s.length-1];let a=1;for(let h=0;h<s.length-1;++h)a*=s[h];const o=e.shape,u=s.slice();u.pop();let l=1;for(let h=i;h<n;++h)l*=o[h],u.push(o[h]);const c=[...V(e.shape).map((e=>e/l)),1].slice(0,i);return[u,a,l,c]}function wf(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(i+" update.rank != "+(s+e.length-r));for(let a=0;a<s;++a)if(n.shape[a]!==t.shape[a])throw new Error(i+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<n.rank-s;++a)if(n.shape[a+s]!==e[a+r])throw new Error(i+` updates.shape[${a+s}] (${n.shape[a+s]}) != shape[${a+s}] (${e[a+s]})`)}function kf(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}wf(n,t,e)}function If(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,i=n.length;let a=1;for(let h=s;h<i;++h)a*=n[h];const o=s<1?1:s,u=w(t.shape)/o,l=[...V(n.slice(0,s)),1],c=w(n);return{sliceRank:s,numUpdates:u,sliceSize:a,strides:l,outputSize:c}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Cf=1.7580993408473768,Sf=1.0507009873554805,$f=.3275911,Nf=.254829592,Tf=-.284496736,Ef=1.421413741,Rf=-1.453152027,_f=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Af(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Ff(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Df(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Of(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Mf(e,t){const n=e[2*t],r=e[2*t+1];return{real:n,imag:r}}function Lf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function zf(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const i=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function Pf(e,t,n){const r=(n?2:-2)*Math.PI*(e/t),s=Math.cos(r),i=Math.sin(r);return{real:s,imag:i}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Bf="->",Wf=/->/g,Uf=",",Vf="...";function Gf(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(Wf,"").length)/Bf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Bf}").`);const[r,s]=e.split(Bf);y(-1===r.indexOf(Vf),(()=>`The ellipsis notation ("${Vf}") is not supported yet.`));const i=r.split(Uf),a=i.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<s.length;++d){const e=s[d];if(!i.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===o.indexOf(e)&&e!==Uf&&o.push(e)}const u=new Array(i.length);for(let d=0;d<a;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let e=0;e<i[d].length;++e)u[d].push(o.indexOf(i[d][e]))}const l=o.length,c=s.length,h=[];for(let d=c;d<l;++d)h.push(d);return{allDims:o,summedDims:h,idDims:u}}function Hf(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function jf(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:y(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Kf(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let a=0;a<s;++a)r.push([]);const i=[];for(let a=0;a<n.length;++a){const e=n[a],s=Xf(t,e);for(const t of s)-1===i.indexOf(t)&&(r[a].push(t),i.push(t))}return{path:n,steps:r}}function qf(e){return e.every(((e,t)=>e===t))}function Xf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Yf(e,t,n=0){let r=[];if("number"===typeof t)y(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);y(s<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}y(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Zf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Qf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eg(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function tg(e,t){return`size ${e} must be non-negative, not ${t}`}function ng(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function rg(e,t){const n=w(e),r=w(t);return`Input to reshape is a SparseTensor with ${n}\n  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function sg(e,t){const n=w(e),r=w(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ig(){return"segment ids must be >= 0"}function ag(){return"segment ids are not increasing"}function og(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function ug(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lg(e,t){let n,r=!1;e<=df?(n=e,r=!0):n=U(e,Math.floor(Math.sqrt(e)));while(!r)n>t||n===e?r=!0:n=U(e,n+1);return n}function cg(e,t,n){const r=[],s=e.length;for(let i=0;i<s;i++)i!==t?r.push(e[i]):r.push(n);return r}function hg(e,t,n,r){const s=t.shape.length,i=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const a=e.shape[n],o=[];let u=1,l=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<i;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:a,outputShape:o}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dg(e){try{return e.map((e=>os(e)))}catch(pY){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${pY}`)}}function pg(e){return e.map((e=>as(e)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fg(e,t){const n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);const r=Ra(e,"int32"),s=Ra([n.length,e.length],"int32");for(let i=0;i<n.length;i++){const t=r.indexToLoc(n[i]),a=i*e.length;s.values.set(t,a)}return s.toTensor()}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
No();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const gg={kernelName:de,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(e,Nd(Aa(n,"float32"),-1))}}},mg={kernelName:pe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=qa(Aa(n,"float32")),r=ja(po(Qa(1),t));return Jc(Ua(e,r))}}}},bg={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ja(po(qa(Aa(n,"float32")),1));return Ua(e,t)}}}},yg={kernelName:ge,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=xo(n.shape,r.shape),i=()=>{let t=e;const r=yo(n.shape,s);return r.length>0&&(t=wc(t,r)),Zu(t,n.shape)},a=()=>{let t=e;const n=yo(r.shape,s);return n.length>0&&(t=wc(t,n)),Zu(t,r.shape)};return{a:i,b:a}}},xg={kernelName:me,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},vg={kernelName:xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(n)}}},wg={kernelName:ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(n)}}},kg={kernelName:we,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,ja(po(Qa(1),qa(Aa(n,"float32")))))}}},Ig={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ja(za(Qa(1),qa(Aa(n,"float32"))));return Ua(e,t)}}}},Cg={kernelName:Se,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=xo(n.shape,r.shape),i=()=>{const t=za(qa(n),qa(r));let i=Ga(e,Ua(r,t));const a=yo(n.shape,s);return a.length>0&&(i=wc(i,a)),Zu(i,n.shape)},a=()=>{const t=za(qa(n),qa(r));let i=Jc(Ga(e,Ua(n,t)));const a=yo(r.shape,s);return a.length>0&&(i=wc(i,a)),Zu(i,r.shape)};return{a:i,b:a}}},Sg={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,za(qa(Aa(n,"float32")),1))}}},$g={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,po(Qa(1),qa(Aa(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ng(e,t,n,r,s,i){const a=ci(e,"dy","avgPool3dGrad"),o=ci(t,"input","avgPool3dGrad");let u=a,l=o,c=!1;4===o.rank&&(c=!0,u=Zu(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=Zu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),y(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),y(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),Yu("avgPool3dGrad",s,i);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:s,dimRoundingMode:i},p=ei.runKernel(Ee,h,d);return c?Zu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Tg=pi({avgPool3dGrad_:Ng}),Eg={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>Tg(e,r,s,i,a,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rg(e,t,n,r,s){const i=ci(e,"dy","avgPoolGrad"),a=ci(t,"input","avgPoolGrad");y(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,u=i,l=!1;3===a.rank&&(l=!0,o=Zu(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=Zu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),y(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),y(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},d=ei.runKernel(Ne,c,h);return l?Zu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const _g=pi({avgPoolGrad_:Rg}),Ag={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a}=n;return{x:()=>_g(e,r,s,i,a)}}},Fg={kernelName:Re,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Lc(e,s,!1,!1),b:()=>Lc(e,r,!0,!1)}:i&&!a?{a:()=>Lc(s,e,!1,!0),b:()=>Lc(r,e,!1,!1)}:{a:()=>Lc(s,e,!0,!0),b:()=>Lc(e,r,!0,!0)}:{a:()=>Lc(e,s,!1,!0),b:()=>Lc(r,e,!0,!1)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dg(e,t,n){const r=ci(e,"x","spaceToBatchND");y(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),y(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),y(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},i={blockShape:t,paddings:n};return ei.runKernel(qn,s,i)}const Og=pi({spaceToBatchND_:Dg}),Mg={kernelName:_e,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Og(e,r,s)}}},Lg={kernelName:De,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let u=s.length-1;u>=0;u--)if(s[u]===i[u])a[u]=1;else if(1!==s[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let u=0;u<a.length;u++)a[u]>1&&o.push(u);return{x:()=>wc(e,o,!0)}}},zg={kernelName:Me,gradFunc:e=>({x:()=>e.clone()})},Pg={kernelName:Le,gradFunc:e=>({x:()=>Ya(e)})},Bg={kernelName:ze,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>sd(Oc(hc(r,s),Ep(r,i)),e,Ya(e))}}},Wg={kernelName:Be,inputsToSave:["x"],gradFunc:gg.gradFunc},Ug={kernelName:We,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,i=T(s,t[0].shape)[0],a=r.map((e=>e[i])),o=Vh(e,a,i);return o.map((e=>()=>e))}},Vg={kernelName:Ue,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:i,strides:a,pad:o,dataFormat:u}=n;return y(ju(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>_l(r.shape,e,s,a,o,u),filter:()=>Id(r,e,s.shape,a,o,u)}}},Gg={kernelName:Ge,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:i,pad:a,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Nl(e,s,i,a,o,1,u),filter:()=>Id(e,r,s.shape,i,a,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hg(e,t,n,r,s){let i=e;4===e.rank&&(i=Zu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=Zu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),y(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),y(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),y(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),y(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),y(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},u={strides:r,pad:s,filterShape:n};return ei.runKernel(je,o,u)}const jg=pi({conv3DBackpropFilter_:Hg}),Kg={kernelName:He,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i}=n;y(ju(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=t;return{x:()=>Ll(a.shape,e,o,s,i),filter:()=>jg(a,e,o.shape,s,i)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qg(e){const t=ci(e,"x","sin","float32"),n={x:t};return ei.runKernel(Wn,n)}const Xg=pi({sin_:qg}),Yg={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(Jc(Xg(Aa(n,"float32"))),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jg(e){const t=ci(e,"x","sinh"),n={x:t};return ei.runKernel(Un,n)}const Zg=pi({sinh_:Jg}),Qg={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(Zg(Aa(n,"float32")),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function em(e,t=0,n=!1,r=!1){const s=ci(e,"x","cumsum"),i={x:s},a={axis:t,exclusive:n,reverse:r};return ei.runKernel(Je,i,a)}const tm=pi({cumsum_:em}),nm={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const t=Ec([s],r.rank);let n=tm(e,s,i,!a);return null!=t&&(n=cd(n,t)),n}}}},rm={kernelName:tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;y(ju(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return y(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),y(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),y(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),y(Ku(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),Yu("depthwiseConv2d",i,a),{x:()=>Ld(u.shape,e,l,s,i,o,a),filter:()=>Od(u,e,l.shape,s,i,o,a)}}},sm={kernelName:it,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,i={x:r,filter:s,dy:e},a={x:r,filter:s,dy:e};return{x:()=>ei.runKernel(at,i,n),filter:()=>ei.runKernel(ot,a,n)}}},im={kernelName:ht,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>ei.runKernel(dt,r)}}},am={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ga(Jl(Jc(qa(n))),2/Math.sqrt(Math.PI));return{x:()=>Ga(e,r)}}},om={kernelName:gt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(e,n)}}},um={kernelName:mt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Zu(e,n.shape)}}},lm={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(e,Jl(n))}}},cm={kernelName:wt,gradFunc:e=>({x:()=>Ya(e)})},hm={kernelName:kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=xo(n.shape,r.shape),i=()=>{const t=Ua(e,Aa(r,"float32")),i=yo(n.shape,s);return i.length>0?Zu(wc(t,i),n.shape):t},a=()=>{let t=Ga(e,Aa(n,"float32"));const i=yo(r.shape,s);i.length>0&&(t=Zu(wc(t,i),r.shape));const a=qa(r);return Jc(Ua(t,Aa(a,"float32")))};return{a:i,b:a}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dm(e){const t=ci(e,"x","rsqrt","float32"),n={x:t};return ei.runKernel(Dn,n)}const pm=pi({rsqrt_:dm}),fm={kernelName:It,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=t,u=null==o?Qa(1):o,l=yo(i.shape,s.shape),c=[];if(1===i.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=po(s,i),d=Ga(e,u),p=pm(za(a,Qa(r))),f=Ga(Ga(Ga(p,p),p),Qa(-.5)),g=()=>1===i.rank?Zu(Ga(Ga(e,tc(Zu(p,[1,1,1,i.shape[0]]),c)),u),s.shape):Zu(Ga(Ga(e,p),u),s.shape),m=()=>{let e=Ga(Ga(p,Qa(-1)),d);return 1===i.rank&&(e=wc(e,l)),Zu(e,i.shape)},b=()=>{let e=Ga(Ga(f,h),d);return 1===i.rank&&(e=wc(e,l)),Zu(e,i.shape)},y=()=>{const t=Ga(h,p);let n=Ga(e,t);return 1===i.rank&&(n=wc(n,l)),Zu(n,i.shape)},x=()=>{let t=e;return 1===i.rank&&(t=wc(t,l)),Zu(t,i.shape)};return{x:g,mean:m,variance:b,scale:y,offset:x}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gm(e,t,n){const r=ci(e,"x","unsortedSegmentSum"),s=ci(t,"segmentIds","unsortedSegmentSum","int32");y(I(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},a={numSegments:n};return ei.runKernel(yr,i,a)}const mm=pi({unsortedSegmentSum_:gm}),bm={kernelName:Ct,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:i,batchDims:a}=n,o=T(i,r.shape)[0],u=(e,t,n)=>()=>{const r=e.shape,s=t.size,a=r.slice(0,o),u=a.length,l=r.slice(i,r.length).slice(1),c=l.length,h=ym(0,u),d=ym(u+1,u+1+c),p=xm([a,[s],l]),f=Zu(n,p),g=Zu(t,[s]),m=xm([[u],h,d]),b=cd(f,m);let y=mm(b,g,e.shape[o]);const x=Rc(m);return y=cd(y,x),y};if(1===a){const t=r.shape[0],n=r.split(t,0),i=()=>{const t=Kh(n.map(((t,n)=>u(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)};return{x:i,indices:()=>s}}return{x:u(r,s,e),indices:()=>s}}};function ym(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function xm(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const vm={kernelName:Nt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ya(n),b:()=>Ya(r)}}},wm={kernelName:Tt,gradFunc:e=>({x:()=>Aa(e,"float32")})},km={kernelName:_t,gradFunc:e=>({x:()=>Ya(e)})},Im={kernelName:At,gradFunc:e=>({x:()=>Ya(e)})},Cm={kernelName:Ft,gradFunc:e=>({x:()=>Ya(e)})},Sm={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,i=lc(r,0);return{x:()=>sd(i,e,Ga(e,s))}}},$m={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,za(n,1))}}},Nm={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Aa(n,"float32"))}}},Tm={kernelName:Vt,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=!0,n=Jl(r);return po(e,Ga(wc(e,s,t),n))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Em(e,t,n,r=5,s=1,i=1,a=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:i,beta:a};return ei.runKernel(Ht,o,u)}const Rm=pi({localResponseNormalizationBackprop_:Em}),_m={kernelName:Gt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:i,bias:a,alpha:o,beta:u}=n;return{x:()=>Rm(r,s,e,i,a,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Am(e,t,n,r){return t.rank<n.rank&&(t=Zu(t,Nc(t.shape,r))),e.rank<n.rank&&(e=Zu(e,Nc(e.shape,r))),{x:()=>{const r=Ga(e,Aa(Kl(n,t),e.dtype));return r}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Fm={kernelName:jt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,i=t[0],a=t[1],o=T(s,i.shape),u=Am(e,a,i,o);return{x:()=>u["x"]()}}},Dm={kernelName:Kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=()=>Ga(e,Aa(hc(n,r),"float32")),i=()=>Ga(e,Aa(zp(n,r),"float32"));return{a:s,b:i}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Om(e,t,n,r,s,i,a){const o=ci(e,"dy","maxPool3dGrad"),u=ci(t,"input","maxPool3dGrad"),l=ci(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=Zu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Zu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=Zu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),y(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),y(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),y(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Yu("maxPool3dGrad",i,a);const f={dy:c,input:h,output:d},g={filterSize:r,strides:s,pad:i,dimRoundingMode:a},m=ei.runKernel(Jt,f,g);return p?Zu(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const Mm=pi({maxPool3dGrad_:Om}),Lm={kernelName:Yt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:u}=n;return{x:()=>Mm(e,r,s,i,a,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zm(e,t,n,r,s,i,a){const o=ci(e,"dy","maxPoolGrad"),u=ci(t,"input","maxPoolGrad"),l=ci(n,"output","maxPoolGrad");y(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),y(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),y(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),Yu("maxPoolGrad",i,a);const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return ei.runKernel(Xt,c,h)}const Pm=pi({maxPoolGrad_:zm}),Bm={kernelName:qt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Pm(e,r,s,i,a,o)}}},Wm={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,i=T(s,r.shape),a=$c(r.shape,i),o=a[1],u=w(o),l=()=>{const t=r.shape.slice();i.forEach((e=>{t[e]=1}));const n=Zu(e,t),s=Ua(Ga(n,rh(r.shape,"float32")),u);return s};return{x:l}}},Um={kernelName:en,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[i,a]=t,o=T(s,i.shape),u=Am(e,a,i,o);return{x:()=>u["x"]()}}},Vm={kernelName:tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=()=>Ga(e,Aa(Ep(n,r),"float32")),i=()=>Ga(e,Aa(lc(n,r),"float32"));return{a:s,b:i}}},Gm={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map((e=>e[0]));return{x:()=>Eh(e,i,r.shape)}}},Hm={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=xo(n.shape,r.shape),i=()=>{const t=yo(n.shape,s);return t.length>0?Zu(wc(e,t),n.shape):e},a=()=>{const t=Ga(e,Jc(ic(Ua(n,r)))),i=yo(r.shape,s);return i.length>0?Zu(wc(t,i),r.shape):t};return{a:i,b:a}}},jm={kernelName:an,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=xo(n.shape,r.shape),i=()=>{const t=Ga(e,Aa(r,"float32")),i=yo(n.shape,s);return i.length>0?Zu(wc(t,i),n.shape):t},a=()=>{const t=Ga(e,Aa(n,"float32")),i=yo(r.shape,s);return i.length>0?Zu(wc(t,i),r.shape):t};return{a:i,b:a}}},Km={kernelName:on,gradFunc:e=>({x:()=>Jc(e)})},qm={kernelName:pn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>nh(n.shape,"float32")}}},Xm={kernelName:dn,gradFunc:e=>({x:()=>Ya(e)})},Ym={kernelName:fn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n,s=td(e,r);return s.map((e=>()=>e))}},Jm={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map((e=>e[0]));return{x:()=>Eh(e,i,r.shape)}}},Zm={kernelName:mn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,i=n,a=r,o=xo(i.shape,a.shape),u=()=>{const t=Aa(a,"float32");let n=Ga(e,Ga(t,co(i,po(t,Qa(1)))));const r=yo(i.shape,o);return r.length>0&&(n=wc(n,r)),Zu(n,i.shape)},l=()=>{const t=lc(i,0),n=sd(t,gc(i),Ya(i));let r=Ga(e,Ga(s,n));const u=yo(a.shape,o);return u.length>0&&(r=wc(r,u)),Zu(r,a.shape)};return{a:u,b:l}}},Qm={kernelName:bn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=lc(n,0);return{x:()=>sd(s,e,Ga(e,r)),alpha:()=>{let t=sd(s,Ya(e),Ga(e,n));const i=yo(r.shape,e.shape);return i.length>0&&(t=wc(t,i)),Zu(t,r.shape)}}}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eb(e,t=0,n=!1,r=!1){const s=ci(e,"x","cumprod"),i={x:s},a={axis:t,exclusive:n,reverse:r};return ei.runKernel(Ye,i,a)}const tb=pi({cumprod_:eb});
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nb(e,t,n){const r=e.shape.slice();r[n]=1;const s=Zu(t,r),i=tb(e,n,!0,!1),a=tb(e,n,!0,!0),o=Ga(i,a);return Ga(s,o)}function rb(e,t,n){const r=e.shape.length,s=r-n.length,i=Ec(n,r);let a=e;null!=i&&(a=cd(e,i));const o=a.shape.slice(),u=o.splice(r-n.length,n.length),l=u.reduce(((e,t)=>e*t),1);o.push(l);const c=a.reshape(o);let h=nb(c,t,s);if(h=h.reshape(a.shape),null!=i){const e=Rc(i);h=cd(h,e)}return h}const sb={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let i=[];return i=void 0===s||null===s?r.shape.map(((e,t)=>t)):"number"===typeof s?[s]:s,{x:()=>rb(r,e,i)}}},ib={kernelName:lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=xo(n.shape,r.shape),i=()=>{const t=Ua(e,Aa(r,"float32")),i=yo(n.shape,s);return i.length>0?Zu(wc(t,i),n.shape):t},a=()=>{let t=Ga(e,Aa(n,"float32"));const i=yo(r.shape,s);i.length>0&&(t=Zu(wc(t,i),r.shape));const a=qa(r);return Jc(Ua(t,Aa(a,"float32")))};return{a:i,b:a}}},ab={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Jc(qa(n)))}}},ob={kernelName:_n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ga(Ep(n,6),Nd(n));return{x:()=>Ga(e,Aa(r,"float32"))}}},ub={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(e,Aa(Nd(n),"float32"))}}},lb={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Zu(e,n.shape)}}},cb={kernelName:En,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r},i=()=>ei.runKernel(Rn,s,n);return{images:i}}},hb={kernelName:Nn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r},i=()=>ei.runKernel(Tn,s,n);return{images:i}}},db={kernelName:An,gradFunc:(e,t,n)=>{const{dims:r}=n,s=T(r,e.shape);return{x:()=>wh(e,s)}}},pb={kernelName:Fn,gradFunc:e=>({x:()=>Ya(e)})},fb={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Jc(Ua(e,Ga(co(n,1.5),2)))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gb(e){const t=ci(e,"x","logicalNot","bool"),n={x:t};return ei.runKernel(Wt,n)}const mb=pi({logicalNot_:gb}),bb={kernelName:zn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Aa(Ya(n),"float32"),t:()=>Ga(e,Aa(n,e.dtype)),e:()=>Ga(e,Aa(mb(n),e.dtype))}}},yb={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=lc(n,Qa(0)),r=Qa(Cf),s=Qa(Sf),i=Ga(e,s),a=Ga(Ga(e,r),Jl(Aa(n,"float32")));return sd(t,i,a)}}}},xb={kernelName:Gn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(e,Ga(n,po(Qa(1),n)))}}},vb={kernelName:Vn,gradFunc:e=>({x:()=>Ya(e)})};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wb(e){const t=ci(e,"x","cos","float32"),n={x:t};return ei.runKernel(qe,n)}const kb=pi({cos_:wb}),Ib={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(kb(Aa(n,"float32")),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cb(e){const t=ci(e,"x","cosh","float32"),n={x:t};return ei.runKernel(Xe,n)}const Sb=pi({cosh_:Cb}),$b={kernelName:Un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(Sb(Aa(n,"float32")),e)}}},Nb={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:i}=n,a=r.shape,[o,u]=ku(r,s,i),l=[];for(let c=0;c<e.rank;c++)l.push([o[c],a[c]-o[c]-u[c]]);return{x:()=>oh(e,l)}}},Tb={kernelName:Yn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,i=!0,a=Ga(e,r);return{logits:()=>po(a,Ga(wc(a,[s],i),r))}}},Eb={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(e,Nh(n))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rb(e,t,n){const r=ci(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));y(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),y(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),y(r.shape[0]%s===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const i={x:r},a={blockShape:t,crops:n};return ei.runKernel(_e,i,a)}const _b=pi({batchToSpaceND_:Rb}),Ab={kernelName:qn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>_b(e,r,s)}}},Fb={kernelName:Xn,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>bl(e,r)}}},Db={kernelName:jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Ga(ja(Aa(n,"float32")),2))}}},Ob={kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(e,Ga(Aa(n,"float32"),2))}}},Mb={kernelName:nr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Qa(2),i=()=>Ga(e,Ga(s,po(n,r))),a=()=>Ga(e,Ga(s,po(r,n)));return{a:i,b:a}}},Lb={kernelName:vr,gradFunc:e=>({x:()=>Ya(e)})},zb={kernelName:lr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=xo(n.shape,r.shape),i=()=>{let t=e;const r=yo(n.shape,s);return r.length>0&&(t=wc(t,r)),Zu(t,n.shape)},a=()=>{let t=e;const n=yo(r.shape,s);return n.length>0&&(t=wc(t,n)),Zu(Jc(t),r.shape)};return{a:i,b:a}}},Pb={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:i}=n,a=T(i,r.shape);a.forEach((e=>{s[e]=1}));const o=Zu(e,s),u=Ga(o,rh(r.shape,"float32"));return{x:()=>u}}},Bb={kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,qa(kb(n)))}}},Wb={kernelName:hr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ga(po(Qa(1),qa(n)),e)}}},Ub={kernelName:dr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n,i=()=>{let t=Ya(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=za(t,Eh(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)t=za(t,Eh(e,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)t=za(t,Eh(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)t=za(t,Eh(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t};return{x:i}}},Vb={kernelName:gr,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,i=Rc(s);return{x:()=>cd(e,i)}}},Gb={kernelName:br,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Kh(e,s)}}},Hb={kernelName:yr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t,r=()=>jb(e,n);return{x:r}}};function jb(e,t){const n=wo(t,Ya(t)),r=oc(e,n);let s=hc(t,Qa(0,"int32"));const i=r.rank-s.rank;for(let o=0;o<i;++o)s=Ql(s,o+1);s=Oc(s,rh(r.shape,"bool"));const a=Ya(r);return sd(s,r,a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Kb={kernelName:xr,gradFunc:e=>({x:()=>Ya(e)})},qb=[gg,mg,bg,yg,xg,vg,wg,kg,Ig,Cg,Sg,$g,Eg,Ag,Fg,Mg,Lg,zg,Pg,Bg,Wg,Ug,Gg,Vg,Kg,Yg,Qg,nm,rm,sm,ib,im,am,om,um,lm,hm,cm,fm,bm,vm,wm,km,Im,Cm,Sm,$m,Nm,Tm,_m,Fm,Fm,Dm,Lm,Bm,Wm,Um,Vm,Gm,Hm,jm,Km,qm,Xm,Ym,Jm,Jm,Zm,Qm,sb,ab,ob,ub,lb,cb,hb,db,pb,fb,bb,yb,xb,vb,Ib,$b,Nb,Tb,Eb,Ab,Ab,Fb,Fb,Db,Mb,Ob,Lb,zb,Pb,Bb,Wb,Ub,Vb,Gb,Hb,Kb];for(const fY of qb)Dr(fY);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xb(e){const t=ci(e,"x","acos"),n={x:t};return ei.runKernel(pe,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.abs=function(){return this.throwIfDisposed(),mo(this)};const Yb=pi({acos_:Xb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jb(e){const t=ci(e,"x","acosh"),n={x:t};return ei.runKernel(fe,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.acos=function(){return this.throwIfDisposed(),Yb(this)};const Zb=pi({acosh_:Jb});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qb(e,t=0){const n=ci(e,"x","argMin"),r={x:n},s={axis:t};return ei.runKernel(ve,r,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.acosh=function(){return this.throwIfDisposed(),Zb(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.add=function(e){return this.throwIfDisposed(),za(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.all=function(e,t){return this.throwIfDisposed(),Nu(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.any=function(e,t){return this.throwIfDisposed(),Eu(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.argMax=function(e){return this.throwIfDisposed(),_u(this,e)};const ey=pi({argMin_:Qb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ty(e){const t=ci(e,"x","asin"),n={x:t};return ei.runKernel(we,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.argMin=function(e){return this.throwIfDisposed(),ey(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.asScalar=function(){return this.throwIfDisposed(),y(1===this.size,(()=>"The array must have only 1 element.")),Zu(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.asType=function(e){return this.throwIfDisposed(),Aa(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.as1D=function(){return this.throwIfDisposed(),Zu(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.as2D=function(e,t){return this.throwIfDisposed(),Zu(this,[e,t])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Zu(this,[e,t,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Zu(this,[e,t,n,r])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Zu(this,[e,t,n,r,s])};const ny=pi({asin_:ty});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ry(e){const t=ci(e,"x","asinh"),n={x:t};return ei.runKernel(ke,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.asin=function(){return this.throwIfDisposed(),ny(this)};const sy=pi({asinh_:ry});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iy(e){const t=ci(e,"x","atan"),n={x:t};return ei.runKernel(Ie,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.asinh=function(){return this.throwIfDisposed(),sy(this)};const ay=pi({atan_:iy});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oy(e,t){let n=ci(e,"a","atan2"),r=ci(t,"b","atan2");[n,r]=Gs(n,r);const s={a:n,b:r};return ei.runKernel(Se,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.atan=function(){return this.throwIfDisposed(),ay(this)};const uy=pi({atan2_:oy});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ly(e){const t=ci(e,"x","atanh"),n={x:t};return ei.runKernel(Ce,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.atan2=function(e){return this.throwIfDisposed(),uy(this,e)};const cy=pi({atanh_:ly});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hy(e){const t=ci(e,"x","ceil","float32"),n={x:t};return ei.runKernel(Le,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.atanh=function(){return this.throwIfDisposed(),cy(this)},As().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),el(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),_b(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),il(this,e,t,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.broadcastTo=function(e){return this.throwIfDisposed(),pl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.cast=function(e){return this.throwIfDisposed(),Aa(this,e)};const dy=pi({ceil_:hy});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function py(e,t,n="NHWC"){const r=ci(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];y(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),y(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),y(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),y(a%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return ei.runKernel(et,o,u)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.ceil=function(){return this.throwIfDisposed(),dy(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),gl(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof _s&&(e=[e]),bl([this,...e],t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.conv1d=function(e,t,n,r,s,i){return this.throwIfDisposed(),El(this,e,t,n,r,s,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Fl(this,e,t,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.conv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Nl(this,e,t,n,r,s,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.cos=function(){return this.throwIfDisposed(),kb(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.cosh=function(){return this.throwIfDisposed(),Sb(this)},
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),tb(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),tm(this,e,t,n)};const fy=pi({depthToSpace_:py});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gy(e,t,n,r,s=[1,1],i="NHWC"){const a=ci(e,"x","dilation2d"),o=ci(t,"filter","dilation2d");y(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),y(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),y("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let u=a,l=!1;3===a.rank&&(u=Zu(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0),y(u.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`));const c={x:u,filter:o},h={strides:n,pad:r,dilations:s},d=ei.runKernel(it,c,h);return l?Zu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),fy(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.depthwiseConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Vl(this,e,t,n,r,s,i)};const my=pi({dilation2d_:gy});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function by(e,t){let n=ci(e,"a","div"),r=ci(t,"b","div");[n,r]=Gs(n,r);const s=Ua(n,r),i=Ya(s),a=Kl(r,i);return sd(a,i,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),my(this,e,t,n,r,s)};const yy=pi({divNoNan_:by});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xy(e,t){const n=ci(e,"t1","dot"),r=ci(t,"t2","dot");y((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(y(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const e=Zu(n,[1,-1]),t=Zu(r,[-1,1]),s=Lc(e,t);return Zu(s,[])}if(1===n.rank&&2===r.rank){const e=Zu(n,[1,-1]),t=Zu(r,[r.shape[0],r.shape[1]]),s=Lc(e,t);return Zu(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Zu(r,[-1,1]),t=Lc(n,e);return Zu(t,[t.size])}{const e=Zu(r,[r.shape[0],r.shape[1]]),t=Lc(n,e);return t}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.divNoNan=function(e){return this.throwIfDisposed(),yy(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.div=function(e){return this.throwIfDisposed(),Ua(this,e)};const vy=pi({dot_:xy});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wy(e,t=null,n=!1){return Vp(e,"euclidean",t,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.dot=function(e){return this.throwIfDisposed(),vy(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.elu=function(){return this.throwIfDisposed(),Hl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.equal=function(e){return this.throwIfDisposed(),Kl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.erf=function(){return this.throwIfDisposed(),Xl(this)};const ky=pi({euclideanNorm_:wy});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Iy(e){const t=ci(e,"x","expm1"),n={x:t};return ei.runKernel(bt,n)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),ky(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.exp=function(){return this.throwIfDisposed(),Jl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.expandDims=function(e){return this.throwIfDisposed(),Ql(this,e)};const Cy=pi({expm1_:Iy});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sy(e){const t=ci(e,"x","isFinite"),n={x:t};return ei.runKernel(_t,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.expm1=function(){return this.throwIfDisposed(),Cy(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.fft=function(){return this.throwIfDisposed(),gd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.flatten=function(){return this.throwIfDisposed(),Zu(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.floor=function(){return this.throwIfDisposed(),ic(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ba(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.gather=function(e,t,n){return this.throwIfDisposed(),oc(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.greaterEqual=function(e){return this.throwIfDisposed(),hc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.greater=function(e){return this.throwIfDisposed(),lc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.ifft=function(){return this.throwIfDisposed(),xd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.irfft=function(){return this.throwIfDisposed(),wd(this)};const $y=pi({isFinite_:Sy});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ny(e){const t=ci(e,"x","isInf"),n={x:t};return ei.runKernel(At,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.isFinite=function(){return this.throwIfDisposed(),$y(this)};const Ty=pi({isInf_:Ny});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ey(e){const t=ci(e,"x","isNaN"),n={x:t};return ei.runKernel(Ft,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.isInf=function(){return this.throwIfDisposed(),Ty(this)};const Ry=pi({isNaN_:Ey});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _y(e,t=5,n=1,r=1,s=.5){const i=ci(e,"x","localResponseNormalization");y(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),y(I(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=Zu(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:a},l={depthRadius:t,bias:n,alpha:r,beta:s},c=ei.runKernel(Gt,u,l);return o?Zu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.isNaN=function(){return this.throwIfDisposed(),Ry(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.leakyRelu=function(e){return this.throwIfDisposed(),pc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.lessEqual=function(e){return this.throwIfDisposed(),Ep(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.less=function(e){return this.throwIfDisposed(),zp(this,e)};const Ay=pi({localResponseNormalization_:_y});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fy(e){const t=ci(e,"x","logSigmoid"),n=Za((e=>{const t=Jc(Wh(Jc(e))),n=t=>{const n=Ga(t,Nh(Jc(e)));return n};return{value:t,gradFunc:n}}));return n(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Ay(this,e,t,n,r)};const Dy=pi({logSigmoid_:Fy});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Oy(e,t){const n=ci(e,"a","logicalOr","bool"),r=ci(t,"b","logicalOr","bool");xo(n.shape,r.shape);const s={a:n,b:r};return ei.runKernel(Ut,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.logSigmoid=function(){return this.throwIfDisposed(),Dy(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ic(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Fc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.log=function(){return this.throwIfDisposed(),gc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.log1p=function(){return this.throwIfDisposed(),bc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Oc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.logicalNot=function(){return this.throwIfDisposed(),mb(this)};const My=pi({logicalOr_:Oy});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ly(e,t){const n=ci(e,"a","logicalXor","bool"),r=ci(t,"b","logicalXor","bool");return xo(n.shape,r.shape),Oc(My(e,t),mb(Oc(e,t)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.logicalOr=function(e){return this.throwIfDisposed(),My(this,e)};const zy=pi({logicalXor_:Ly});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Py(e,t,n){y("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=ci(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");y(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let o=0;o<r.rank;o++)y(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),y(t[o][0]>=0&&t[o][0]<=r.shape[o]-s&&t[o][1]>=0&&t[o][1]<=r.shape[o]-s,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-s} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},a={x:r};return ei.runKernel(nn,a,i)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.logicalXor=function(e){return this.throwIfDisposed(),zy(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Lc(this,e,t,n)},As().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Pc(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.max=function(e,t){return this.throwIfDisposed(),xc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.maximum=function(e){return this.throwIfDisposed(),wo(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.mean=function(e,t){return this.throwIfDisposed(),Vc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.min=function(e,t){return this.throwIfDisposed(),Hc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.minimum=function(e){return this.throwIfDisposed(),Kc(this,e)};const By=pi({mirrorPad_:Py});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wy(e,t){let n=ci(e,"a","mod"),r=ci(t,"b","mod");[n,r]=Gs(n,r);const s={a:n,b:r};return ei.runKernel(rn,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),By(this,e,t)};const Uy=pi({mod_:Wy});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vy(e,t,n,r,s,i,a){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=ci(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=Zu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),y(Ku(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const c=Fu(u.shape,t,i,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?Hy([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=Gy([c.inHeight,c.inWidth],h,d),m=p?r:"valid",b=p?u:Og(u,h,f),x="avg"===n?()=>el(b,t,i,m,a):()=>Pc(b,t,i,m,a),v=x(),w=p?v:_b(v,h,g);return l?Zu(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function Gy(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),i=e.concat(r,s),a=t.map(((e,t)=>(e-i[t]%e)%e)),o=s.map(((e,t)=>e+a[t])),u=t.map(((e,t)=>[r[t],o[t]])),l=t.map(((e,t)=>[0,a[t]]));return[u,l]}function Hy(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),i=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],i[t]]))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.mod=function(e){return this.throwIfDisposed(),Uy(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.mul=function(e){return this.throwIfDisposed(),Ga(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.neg=function(){return this.throwIfDisposed(),Jc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Vp(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.notEqual=function(e){return this.throwIfDisposed(),Qc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),th(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.onesLike=function(){return this.throwIfDisposed(),ih(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.pad=function(e,t){return this.throwIfDisposed(),oh(this,e,t)};const jy=pi({pool_:Vy});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ky(e,t=null,n=!1){let r=ci(e,"x","prod");"bool"===r.dtype&&(r=Aa(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return ei.runKernel(yn,s,i)}As().prototype.pool=function(e,t,n,r,s,i){return this.throwIfDisposed(),jy(this,e,t,n,r,s,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.pow=function(e){return this.throwIfDisposed(),co(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.prelu=function(e){return this.throwIfDisposed(),lh(this,e)};const qy=pi({prod_:Ky});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xy(e){const t=ci(e,"x","reciprocal"),n={x:t};return ei.runKernel(Cn,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.prod=function(e,t){return this.throwIfDisposed(),qy(this,e,t)};const Yy=pi({reciprocal_:Xy});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jy(e){const t=ci(e,"x","sign"),n={x:t};return ei.runKernel(Vn,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.reciprocal=function(){return this.throwIfDisposed(),Yy(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.relu=function(){return this.throwIfDisposed(),xh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.relu6=function(){return this.throwIfDisposed(),Sd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Zu(this,e.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.reshape=function(e){return this.throwIfDisposed(),Zu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Ip(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Sp(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.reverse=function(e){return this.throwIfDisposed(),wh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.rfft=function(){return this.throwIfDisposed(),bd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.round=function(){return this.throwIfDisposed(),_p(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.rsqrt=function(){return this.throwIfDisposed(),pm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.selu=function(){return this.throwIfDisposed(),Ih(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.separableConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Sh(this,e,t,n,r,s,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.sigmoid=function(){return this.throwIfDisposed(),Nh(this)};const Zy=pi({sign_:Jy});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qy(e,t,n,r,s=0,i=0,a=0,o=0,u=0){const l=ci(e,"x","stridedSlice","string_or_numeric"),c={x:l},h={begin:t,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:u};return ei.runKernel(ir,c,h)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.sign=function(){return this.throwIfDisposed(),Zy(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.sin=function(){return this.throwIfDisposed(),Xg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.sinh=function(){return this.throwIfDisposed(),Zg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.slice=function(e,t){return this.throwIfDisposed(),Eh(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.softmax=function(e){return this.throwIfDisposed(),Ph(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.softplus=function(){return this.throwIfDisposed(),Wh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Og(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.split=function(e,t){return this.throwIfDisposed(),Vh(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.sqrt=function(){return this.throwIfDisposed(),ja(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.square=function(){return this.throwIfDisposed(),qa(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Jp(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.squeeze=function(e){return this.throwIfDisposed(),Hh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof _s?[this,e]:[this,...e];return Kh(n,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.step=function(e){return this.throwIfDisposed(),Nd(this,e)};const ex=pi({stridedSlice_:Qy});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tx(e){const t=ci(e,"x","tan","float32"),n={x:t};return ei.runKernel(cr,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.stridedSlice=function(e,t,n,r,s,i,a,o){return this.throwIfDisposed(),ex(this,e,t,n,r,s,i,a,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.sub=function(e){return this.throwIfDisposed(),po(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.sum=function(e,t){return this.throwIfDisposed(),wc(this,e,t)};const nx=pi({tan_:tx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rx(e,t=1,n=!0){const r=ci(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const i={x:r},a={k:t,sorted:n},[o,u]=ei.runKernel(pr,i,a);return{values:o,indices:u}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.tan=function(){return this.throwIfDisposed(),nx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.tanh=function(){return this.throwIfDisposed(),Xh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.tile=function(e){return this.throwIfDisposed(),tc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.toBool=function(){return this.throwIfDisposed(),Aa(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.toFloat=function(){return this.throwIfDisposed(),Aa(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.toInt=function(){return this.throwIfDisposed(),Aa(this,"int32")};const sx=pi({topk_:rx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ix(e,t=0){const n=ci(e,"x","unique","string_or_numeric");y(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[i,a]=ei.runKernel(mr,r,s);return{values:i,indices:a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.topk=function(e,t){return this.throwIfDisposed(),sx(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.transpose=function(e){return this.throwIfDisposed(),cd(this,e)};const ax=pi({unique_:ix});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.unique=function(e){return this.throwIfDisposed(),ax(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),mm(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.unstack=function(e){return this.throwIfDisposed(),td(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.where=function(e,t){return this.throwIfDisposed(),sd(e,this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
As().prototype.zerosLike=function(){return this.throwIfDisposed(),Ya(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class ox extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ox.prototype)}}class ux extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ux.prototype)}}class lx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,lx.prototype)}}class cx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cx.prototype)}}class hx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hx.prototype)}}Error;
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class dx{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function px(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function fx(e,t){if(!e)throw new hx(t)}function gx(e,t){let n=0;for(const r of e)r===t&&n++;return n}function mx(e){return 1===e.length?e[0]:e}function bx(e){return Array.isArray(e)?e:[e]}function yx(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2"),n=t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==n[0]?n:"private"+n}function xx(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let vx={};function wx(e){if(null===e||void 0===e)return null;const t={};return t["className"]=e.getClassName(),t["config"]=e.getConfig(),t}function kx(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>kx(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t["type"]||"number"!==typeof t["value"]?kx(t):e[n]=t["value"])}}}function Ix(e,t={},n={},r="object",s=!1){if("string"===typeof e){const s=e;let i;if(s in n)i=n[s];else if(s in vx)i=vx[s];else if(i=t[s],null==i)throw new lx(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i["className"]||null==i["config"])throw new lx(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i["className"];let o,u;if(a in n?[o,u]=n[a]:a in vx?[o,u]=vx["className"]:a in t&&([o,u]=t[a]),null==o)throw new lx(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const n of Object.keys(vx))e[n]=vx[n];for(const s of Object.keys(n))e[s]=n[s];const t=i["config"];t["customObjects"]=e;const r=Object.assign({},vx);for(const s of Object.keys(n))vx[s]=n[s];kx(i["config"]);const a=u(o,i["config"],n,s);return vx=Object.assign({},r),a}{const e=Object.assign({},vx);for(const r of Object.keys(n))vx[r]=n[r];const t=new o(i["config"]);return vx=Object.assign({},e),t}}}function Cx(e,t){return e<t?-1:e>t?1:0}function Sx(e,t){return-1*Cx(e,t)}function $x(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Nx(e){if(null==e)throw new lx(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Tx(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new lx(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ex(e,t,n=0,r=1/0){return fx(n>=0),fx(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Rx(e,t){Array.isArray(e)?(y(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Rx(e,`element ${n+1} of ${t}`)))):y(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${_x(e)}.`))}function _x(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>_x(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function Ax(e,t,n){let r,s=null!=n?n():is();const i=(...i)=>{const a=null!=n?n():is();return a-s<t||(s=a,r=e(...i)),r};return i}function Fx(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let Dx=0;function Ox(){return Dx++}const Mx={};function Lx(e=""){return e in Mx||(Mx[e]=0),Mx[e]+=1,e+Mx[e].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const zx=["channelsFirst","channelsLast"],Px=["nearest","bilinear"],Bx=["valid","same","causal"],Wx=["max","avg"],Ux=["sum","mul","concat","ave"],Vx=new Map;function Gx(e){Tx(zx,"DataFormat",e)}function Hx(e){Tx(Px,"InterpolationFormat",e)}function jx(e){Tx(Bx,"PaddingMode",e)}function Kx(e){Tx(Wx,"PoolMode",e)}const qx=[],Xx="/";function Yx(e,t){qx.push(e);try{const e=t();return qx.pop(),e}catch(n){throw qx.pop(),n}}function Jx(){return 0===qx.length?"":qx.join(Xx)+Xx}function Zx(e){if(!tv(e))throw new Error("Not a valid tensor name: '"+e+"'");return Jx()+e}function Qx(e){if(!tv(e))throw new Error("Not a valid tensor name: '"+e+"'");Vx.has(e)||Vx.set(e,0);const t=Vx.get(e);if(Vx.set(e,Vx.get(e)+1),t>0){const n=`${e}_${t}`;return Vx.set(n,1),n}return e}const ev=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tv(e){return!!e.match(ev)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function nv(e){return e===parseInt(e.toString(),10)}function rv(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function sv(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function iv(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function av(e,t){if(t<e)throw new lx(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let ov;function uv(){return null==ov&&(ov=Ti().epsilon()),ov}function lv(){return"channelsLast"}function cv(e,t){return Aa(e,t)}function hv(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Zu(e,n)}function dv(e,t){return Ci((()=>{if(2!==e.shape.length)throw new lx(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);const n=hv(e,1);return vv(n,[1,t,1])}))}function pv(e){const t=[rv(e.shape)];return Zu(e,t)}function fv(e){if(e.rank<=1)throw new lx(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],rv(e.shape,1)];return Zu(e,t)}function gv(e,t,n){return Ci((()=>{switch(e.rank){case 1:return _h(e,t,n);case 2:return Fh(e,[t,0],[n,e.shape[1]]);case 3:return Oh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Lh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Eh(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Eh(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new lx(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function mv(e,t,n){return Ci((()=>{switch(e.rank){case 1:return _h(e,t,n);case 2:return Fh(e,[0,t],[e.shape[0],n]);case 3:return Oh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Lh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new lx(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function bv(e,t,n,r){return Ci((()=>{switch(e.rank){case 1:return _h(e,t,n);case 2:switch(r){case 1:return gv(e,t,n);case 2:return mv(e,t,n);default:throw new lx(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return gv(e,t,n);case 2:return Oh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return mv(e,t,n);default:throw new lx(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return gv(e,t,n);case 2:return Lh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Lh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return mv(e,t,n);default:throw new lx(`The axis is not within the rank of the tensor ${r}`)}default:throw new lx(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function yv(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),bl(e,t)}function xv(e,t){switch(e.rank){case 1:return xl([e,t]);case 2:return wl([e,t],0);case 3:return Il([e,t],0);case 4:return Sl([e,t],0);default:throw new lx(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function vv(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new lx(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return tc(e,t)}function wv(e,t=0,n=1,r,s){return fh(e,t,n,r,s)}function kv(e,t,n,r){if(e.rank<2||t.rank<2)throw new cx(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){const n=e.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(n!==r)throw new cx(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const s=!1,i=!1;return Pd({a:e,b:t,transposeA:s,transposeB:i,bias:r?Sv(e.rank,r,lv()):null,activation:n})}{const s=e.shape.slice(),i=s.pop();e=Zu(e,[-1,i]);const a=t.shape.slice(),o=a.pop(),u=a.pop(),l=[...a,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Zu(cd(t,c),[u,-1]);const h=[...s,...l],d=!1,p=!1;return Zu(Pd({a:e,b:t,transposeA:d,transposeB:p,bias:r?Sv(e.rank,r,lv()):null,activation:n}),h)}}function Iv(e,t,n){return Ci((()=>(t=Array.isArray(t)?Yh(t,"int32"):Aa(t,"int32"),oc(e,t,n))))}function Cv(e){return Ga(e,e)}function Sv(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new lx(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Zu(t,[1,r[0],1,1,1]):Zu(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Zu(t,[1,1,1,1,r[0]]):Zu(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Zu(t,[1,r[0],1,1]):Zu(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Zu(t,[1,1,1,r[0]]):Zu(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Zu(t,[1,r[0],1]):Zu(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Zu(t,[1,1,r[0]]):Zu(t,[1].concat(r))}else if(e<3)return t;throw new lx(`Unsupported input rank by biasAdd: ${t.rank}`)}function $v(e,t,n){return Ci((()=>(null==n&&(n=lv()),Gx(n),za(e,Sv(e.rank,t,n)))))}function Nv(e,t=1){if(1!==t)throw new cx(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Hl(e)}function Tv(e){return Ci((()=>Ua(e,za(mo(e),1))))}function Ev(e,t,n,r){return Ci((()=>pd(e,t,n,r)))}function Rv(e){return Ci((()=>{const t=za(.5,Ga(.2,e));return gl(t,0,1)}))}function _v(e,t,n=!1){return n?e():t()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Av=["fanIn","fanOut","fanAvg"],Fv=["normal","uniform","truncatedNormal"];
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Dv(e){Tx(Av,"FanMode",e)}function Ov(e){Tx(Fv,"Distribution",e)}class Mv extends no{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Lv extends Mv{apply(e,t){return nh(e,t)}}Lv.className="Zeros",so(Lv);class zv extends Mv{apply(e,t){return rh(e,t)}}zv.className="Ones",so(zv);class Pv extends Mv{constructor(e){if(super(),"object"!==typeof e)throw new lx(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new lx(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Ci((()=>Ga(Qa(this.value),rh(e,t))))}getConfig(){return{value:this.value}}}Pv.className="Constant",so(Pv);class Bv extends Mv{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return mh(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Bv.className="RandomUniform",so(Bv);class Wv extends Mv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new cx(`randomNormal does not support dType ${t}.`);return wv(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Wv.className="RandomNormal",so(Wv);class Uv extends Mv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new cx(`truncatedNormal does not support dType ${t}.`);return Qh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Uv.className="TruncatedNormal",so(Uv);class Vv extends Mv{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Ci((()=>{if(2!==e.length||e[0]!==e[1])throw new lx("Identity matrix initializer can only be used for 2D square matrices.");return Ga(this.gain,rc(e[0]))}))}getConfig(){return{gain:this.gain}}}function Gv(e,t="channelsLast"){let n,r;if(Gx(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=rv(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=rv(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=rv(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}Vv.className="Identity",so(Vv);class Hv extends Mv{constructor(e){if(super(),e.scale<0)throw new lx(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,Dv(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,Ov(this.distribution),this.seed=e.seed}apply(e,t){const n=Gv(e),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if(t=t||"float32","float32"!==t&&"int32"!==t)throw new cx(`${this.getClassName()} does not support dType ${t}.`);return Qh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return mh(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Hv.className="VarianceScaling",so(Hv);class jv extends Hv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Hv.className}}jv.className="GlorotUniform",so(jv);class Kv extends Hv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Hv.className}}Kv.className="GlorotNormal",so(Kv);class qv extends Hv{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Hv.className}}qv.className="HeNormal",so(qv);class Xv extends Hv{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Hv.className}}Xv.className="HeUniform",so(Xv);class Yv extends Hv{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Hv.className}}Yv.className="LeCunNormal",so(Yv);class Jv extends Hv{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Hv.className}}Jv.className="LeCunUniform",so(Jv);class Zv extends Mv{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Ci((()=>{if(e.length<2)throw new cx("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=w(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const i=[Math.max(r,n),Math.min(r,n)],a=wv(i,0,1,t,this.seed),o=Qp.qr(a,!1);let u=o[0];const l=o[1],c=l.flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return u=Ga(u,c.sign()),n<r&&(u=u.transpose()),Ga(Qa(this.gain),u.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Zv.className="Orthogonal",so(Zv);const Qv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ew(e,t={}){return Ix(e,ro.getMap().classNameMap,t,"initializer")}function tw(e){return wx(e)}function nw(e){if("string"===typeof e){const t=e in Qv?Qv[e]:e;if("GlorotNormal"===t)return new Kv;if("GlorotUniform"===t)return new jv;if("HeNormal"===t)return new qv;if("HeUniform"===t)return new Xv;if("LeCunNormal"===t)return new Yv;if("LeCunUniform"===t)return new Jv;{const e={};return e["className"]=t,e["config"]={},ew(e)}}return e instanceof Mv?e:ew(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function rw(e){return Array.isArray(e)&&Array.isArray(e[0])}function sw(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function iw(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new lx(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function aw(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new lx(`Expected exactly 1 Shape; got ${e.length}`)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ow(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const uw="Variable";class lw{constructor(e,t="float32",n=uw,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ox(),n=null==n?uw:n,this.originalName=Zx(n),this.name=Qx(this.originalName),this.trainable_=r,this.constraint=s,this.val=nd(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),cw(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function cw(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function hw(e){return e.map((e=>e.read()))}function dw(e){e.forEach((e=>{const t=e[0];t.write(e[1])}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class pw{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class fw{constructor(e,t,n,r,s,i,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=Ox(),null!=i&&(this.originalName=Zx(i),this.name=Qx(this.originalName)),this.rank=t.length}}let gw=0;class mw{constructor(e,t){this.callArgs=t,this.id=gw++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let bw=0;class yw extends no{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=bw++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=yx(e)+"_"+Lx(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new ux(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new lx(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return mx(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return mx(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ox(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ox(`Layer ${this.name} is not connected, no input to return.`);return mx(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ox(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ox(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return mx(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=bx(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=bx(this.inputSpec);if(t.length!==n.length)throw new lx(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const e=t[r],s=n[r];if(null==s)continue;const i=e.rank;if(null!=s.ndim&&i!==s.ndim)throw new lx(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new lx(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new lx(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&e.dtype!==s.dtype)throw new lx(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${e.dtype}.`);if(s.axes){const t=e.shape;for(const e in s.axes){const n=Number(e),i=s.axes[e],a=n>=0?t[n]:t[t.length+n];if(null!=i&&-1===[i,null].indexOf(a))throw new lx(`Input ${r} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],i=e.shape[t];if(null!=n&&null!=i&&n!==i)throw new lx(`Input ${r} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=bx(e),r=kw(e),s=Iw(e);if(r===s)throw new lx("Arguments to apply() must be all SymbolicTensors or all Tensors");return Yx(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of bx(e))t.push(n.shape);this.build(mx(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=bx(r),i=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(r=mx(i),null!=this.activityRegularizer)throw new cx("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=xw(e),r=this.computeOutputShape(n);let s;const i=vw(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new fw(i,n,this,bx(e),t,this.name,r))):new fw(i,r,this,bx(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new cx("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ox(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ox(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ux(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ow(this.weights)}build(e){this.built=!0}getWeights(e=!1){return hw(e?this.trainableWeights:this.weights)}setWeights(e){Ci((()=>{const t=this.weights;if(t.length!==e.length)throw new lx(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=hw(t);for(let s=0;s<r.length;++s){const i=r[s],a=t[s],o=e[s];if(!k(i.shape,o.shape))throw new lx(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}dw(n)}))}addWeight(e,t,n,r,s,i,a,o){if(-1!==this._addedWeightNames.indexOf(e))throw new lx(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():nw("zeros"));const u=r.apply(t,n),l=new lw(u,n,e,i,a);return u.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=bx(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=bx(t),i=bx(r);if(s.length!==i.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let a=0;a<s.length;a++)s[a].kerasMask=i[a]}addInboundNode(e,t,n,r,s,i,a=null){const o=bx(e);t=bx(t),n=bx(n),r=bx(r),s=sw(s),i=sw(i);const u=[],l=[],c=[];for(const h of o)u.push(h.sourceLayer),l.push(h.nodeIndex),c.push(h.tensorIndex);new mw({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e["batchInputShape"]=this.batchInputShape),null!=this.dtype&&(e["dtype"]=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function xw(e){e=bx(e);const t=[];for(const n of e)t.push(n.shape);return mx(t)}function vw(e){return"float32"}function ww(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=e.inputTensors[n],s=e.inboundLayers[n],i=e.nodeIndices[n],a=ww(r,s,i);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}function kw(e){let t=!0;for(const n of bx(e))if(!(n instanceof fw)){t=!1;break}return t}function Iw(e){let t=!0;for(const n of bx(e))if(n instanceof fw){t=!1;break}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Cw extends yw{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Lx("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new lx("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new lx("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new lx("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new fw(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new mw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new lx(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Sw(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new lx("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");const r=new Cw({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}),s=r.inboundNodes[0].outputTensors;return s[0]}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function $w(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Aa(t,e.dtype)}catch(pY){throw new lx(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}Cw.className="InputLayer",so(Cw);class Nw{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Nw)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new lx(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=$w(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof fw){if(null==this.id2Value[e.id])throw new lx(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new lx(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof fw){if(null==this.id2Value[e.id])throw new lx(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new lx(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Si(this.id2Mask)}}const Tw=new dx,Ew=new dx;function Rw(e){null!=Tw&&Tw.setMaxEntries(e),null!=Ew&&Ew.setMaxEntries(e)}function _w(e,t,n,r){const s=null!=n&&n["training"],i=Array.isArray(e),a=i?e:[e],o=a.map((e=>e.name)),u=[],l=t.names();for(const f of o)-1!==l.indexOf(f)?u.push(t.getValue(f)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=Tw.get(c);if(null==d){const e=Aw(a,t);d=e.sorted,h=e.recipientCounts,Tw.put(c,d),Ew.put(c,h)}h={},s||Object.assign(h,Ew.get(c));const p=new Nw(t);for(let f=0;f<d.length;++f){if(null!=r){const e=Ii().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=d[f],i=e.sourceLayer;if(i instanceof Cw)continue;const a=[],l=[],c=[];let g=!1;for(const n of e.inputs){const e=p.getValue(n),r=p.getMask(n);a.push(e),l.push(r),null!=r&&(g=!0),s||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}g&&(n=n||{},n["mask"]=l[0]);const m=bx(i.apply(a,n));let b=null;i.supportsMasking&&(b=i.computeMask(a,l));const y=Ow(e),x=Array.isArray(y)?y:[y];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],m[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(x[t].name);-1!==e&&(u[e]=m[t])}s||Si(c)}return p.disposeMasks(),i?u:u[0]}function Aw(e,t){y(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Dw(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of e){const{sorted:e,recipientMap:a}=Dw(i,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:Fw(r)}}function Fw(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Dw(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const i=[],a=[];i.push(e);while(i.length>0){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=a[a.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),r.push(e),n.add(e.name),t&&a.pop();else{a.push(i.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:r,recipientMap:s}}function Ow(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Mw=ie();
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Lw(e,t){return Ci((()=>ja(wc(Ga(e,e),t,!0))))}Mw.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),Rw);class zw extends no{getConfig(){return{}}}class Pw extends zw{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ci((()=>{const t=Lw(e,this.axis),n=gl(t,0,this.maxValue);return Ga(e,Ua(n,za(uv(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Pw.className="MaxNorm",so(Pw);class Bw extends zw{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ci((()=>Ua(e,za(uv(),Lw(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Bw.className="UnitNorm",so(Bw);class Ww extends zw{apply(e){return xh(e)}}Ww.className="NonNeg",so(Ww);class Uw extends zw{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ci((()=>{const t=Lw(e,this.axis),n=za(Ga(this.rate,gl(t,this.minValue,this.maxValue)),Ga(1-this.rate,t));return Ga(e,Ua(n,za(uv(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Uw.className="MinMaxNorm",so(Uw);const Vw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Gw(e){return wx(e)}function Hw(e,t={}){return Ix(e,ro.getMap().classNameMap,t,"constraint")}function jw(e){if(null==e)return null;if("string"===typeof e){const t=e in Vw?Vw[e]:e,n={className:t,config:{}};return Hw(n)}return e instanceof zw?e:Hw(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
async function Kw(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const i=e[s];if("number"!==typeof i){const e=i;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Si(r)}}function qw(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var Xw;(function(e){e[e["SILENT"]=0]="SILENT",e[e["VERBOSE"]=1]="VERBOSE"})(Xw||(Xw={}));const Yw=125;class Jw{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Zw{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Qw extends Jw{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t["size"]?0:t["size"];this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=Ci((()=>za(this.totals[r],Ga(e,n))));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params["metrics"])null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Ci((()=>{const e=Ga(Ua(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),$i(t[n])})))}}class ek extends Jw{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!==typeof r[i]){const a=r[i];e.push(a.data()),t.push(s),n.push(i)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){const e=this.history[t[s]][n[s]];e.dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class tk extends Jw{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||rf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=Yw),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");P(this.yieldEvery)&&(this.maybeWait=Ax(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Kw(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Kw(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Kw(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Kw(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Kw(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):P(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Kw(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Kw(e),await this.trainEnd(e))}}function nk(e,t){if(null==e&&(e={}),e instanceof Jw)return[e];if(Array.isArray(e)&&e[0]instanceof Jw)return e;const n=bx(e);return n.map((e=>new tk(e,t)))}class rk{constructor(){}static registerCallbackConstructor(e,t){y(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),rk.checkForDuplicate(t),null==rk.constructors[e]&&(rk.constructors[e]=[]),rk.constructors[e].push(t)}static checkForDuplicate(e){for(const t in rk.constructors){const n=rk.constructors[+t];n.forEach((t=>{if(t===e)throw new lx("Duplicate callback constructor.")}))}}static clear(){rk.constructors={}}static createCallbacks(e){const t=[];for(const n in rk.constructors){const r=+n;e>=r&&t.push(...rk.constructors[r])}return t.map((e=>new e))}}function sk(e,t,n,r,s,i,a,o,u){const l=new ek,c=[new Qw,...rk.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Zw(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ik(e,t={},n=!1){return Ix(e,ro.getMap().classNameMap,t,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ak(e,t){return Ci((()=>{"float32"!==e.dtype&&(e=Aa(e,"float32"));const n=wc(Cv(e),t,!0),r=oo(n.shape,uv()),s=ja(wo(n,r));return Ua(e,s)}))}function ok(e,t){return Ci((()=>Vc(Cv(po(t,e)),-1)))}function uk(e,t){return Ci((()=>Vc(mo(po(t,e)),-1)))}function lk(e,t){return Ci((()=>{const n=po(e,t),r=gl(mo(e),uv(),Number.MAX_VALUE),s=mo(Ua(n,r));return Ga(100,Vc(s,-1))}))}function ck(e,t){return Ci((()=>{const n=gl(t,uv(),Number.MAX_VALUE),r=gc(za(1,n)),s=gl(e,uv(),Number.MAX_VALUE),i=gc(za(1,s));return Vc(Cv(po(r,i)),-1)}))}function hk(e,t){return Ci((()=>{const n=wo(0,po(1,Ga(e,t)));return Vc(Cv(n),-1)}))}function dk(e,t){return Ci((()=>{const n=wo(0,po(1,Ga(e,t)));return Vc(n,-1)}))}function pk(e,t){return Ci((()=>{const n=wc(Ga(e,t),-1),r=xc(Ga(po(1,e),t),-1);return wo(0,za(1,po(r,n)))}))}function fk(e,t){return Ci((()=>{const n=Math.log(2),r=po(t,e),s=po(za(r,Wh(Ga(-2,r))),n);return Vc(s,-1)}))}function gk(e,t,n=!1){return Ci((()=>{if(n)t=Ph(t);else{const e=wc(t,t.shape.length-1,!0);t=Ua(t,e)}return t=gl(t,uv(),1-uv()),Jc(wc(Ga(Aa(e,"float32"),gc(t)),t.shape.length-1))}))}function mk(e,t,n=!1){return Ci((()=>{const r=Aa(ic(pv(e)),"int32");t=gl(t,uv(),1-uv());const s=t.shape,i=Zu(th(r,s[s.length-1]),s);return gk(i,t,n)}))}function bk(e,t){if(!k(e.shape,t.shape))throw new lx(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Ci((()=>{const n=xh(t),r=Jc(mo(t));return za(po(n,Ga(t,e)),bc(Jl(r)))}))}function yk(e,t){return Ci((()=>{let n;return n=gl(t,uv(),1-uv()),n=gc(Ua(n,po(1,n))),Vc(bk(e,n),-1)}))}function xk(e,t){return Ci((()=>{const n=gl(e,uv(),1),r=gl(t,uv(),1);return wc(Ga(e,gc(Ua(n,r))),-1)}))}function vk(e,t){return Ci((()=>{const n=gc(za(uv(),t));return Vc(po(t,Ga(e,n)),-1)}))}function wk(e,t){return Ci((()=>{const n=ak(e,-1),r=ak(t,-1),s=Ga(n,r);return Jc(wc(s,-1))}))}rk.constructors={};const kk={meanSquaredError:ok,meanAbsoluteError:uk,meanAbsolutePercentageError:lk,meanSquaredLogarithmicError:ck,squaredHinge:hk,hinge:dk,categoricalHinge:pk,logcosh:fk,categoricalCrossentropy:gk,sparseCategoricalCrossentropy:mk,binaryCrossentropy:yk,kullbackLeiblerDivergence:xk,poisson:vk,cosineProximity:wk};function Ik(e){if("string"===typeof e){if(e in kk)return kk[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new lx(t)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Ck(e,t){return Ci((()=>{const n=Ga(.5,ih(t)),r=cv(lc(t,n),e.dtype);return Vc(Kl(e,r),-1)}))}function Sk(e,t){return Ci((()=>cv(Kl(_u(e,-1),_u(t,-1)),"float32")))}function $k(e,t){return Ci((()=>Aa(wc(Oc(Kl(e,1),Kl(t,1))),"float32")))}function Nk(e,t){return Ci((()=>Aa(wc(Oc(Kl(e,0),Kl(t,1))),"float32")))}function Tk(e,t){return Ci((()=>{const n=$k(e,t),r=Nk(e,t),s=za(n,r);return Aa(sd(lc(s,0),Ua(n,s),0),"float32")}))}function Ek(e,t){return yk(e,t)}function Rk(e,t){return e.rank===t.rank&&(e=Hh(e,[e.rank-1])),t=_u(t,-1),t.dtype!==e.dtype&&(t=Aa(t,e.dtype)),Aa(Kl(e,t),"float32")}const _k=ok,Ak=ok,Fk=uk,Dk=uk,Ok=lk,Mk=lk,Lk=gk,zk=wk,Pk=mk,Bk={binaryAccuracy:Ck,categoricalAccuracy:Sk,precision:Tk,categoricalCrossentropy:Lk,sparseCategoricalCrossentropy:Pk,mse:_k,MSE:Ak,mae:Fk,MAE:Dk,mape:Ok,MAPE:Mk,cosine:zk};function Wk(e){if("string"===typeof e&&e in Bk)return Bk[e];if("string"!==typeof e&&null!=e)return e;throw new lx(`Unknown metric ${e}`)}function Uk(e){if(fx(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(kk))if(kk[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Bk))if(Bk[n]===e){t=n;break}return void 0!==t?t:e.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Vk(e){const t={Adagrad:()=>tf.adagrad(.01),Adadelta:()=>tf.adadelta(1,.95,uv()),Adam:()=>tf.adam(.001,.9,.999,uv()),Adamax:()=>tf.adamax(.002,.9,.999,uv(),0),RMSProp:()=>tf.rmsprop(.001,.9,0,uv()),SGD:()=>tf.sgd(.01)};if(t["adagrad"]=t["Adagrad"],t["adadelta"]=t["Adadelta"],t["adam"]=t["Adam"],t["adamax"]=t["Adamax"],t["rmsprop"]=t["RMSProp"],t["sgd"]=t["SGD"],e in t)return t[e]();throw new lx(`Unknown Optimizer ${e}`)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Gk=1048576;function Hk(e,t,n=!1){if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!jk(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Gk&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Gk}.`)}}function jk(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!jk(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!jk(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Kk(e,t,n,r=console.log){const s=Xk(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(const t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),Yk(i,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)s?Jk(o[c],n,r):Zk(o[c],n,a,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=qk(e),l=ow(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}function qk(e){let t;return t=null!=e.collectedTrainableWeights?ow(e.collectedTrainableWeights):ow(e.trainableWeights),t}function Xk(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function Yk(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function Jk(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(pY){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(pY){r="multiple"}const i=e.name,a=e.getClassName(),o=[`${i} (${a})`,s,r,e.countParams().toString()];Yk(o,t,n)}function Zk(e,t,n,r){let s,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(pY){i="multiple"}try{s=JSON.stringify(e.outputShape)}catch(pY){s="multiple"}const a=[];for(const h of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let e=0;e<h.inboundLayers.length;++e){const t=h.inboundLayers[e].name,n=h.nodeIndices[e],r=h.tensorIndices[e];a.push(`${t}[${n}][${r}]`)}const o=e.name,u=e.getClassName(),l=0===a.length?"":a[0],c=[`${o} (${u})`,i,s,e.countParams().toString(),l];Yk(c,t,r);for(let h=1;h<a.length;++h)Yk(["","","","",a[h]],t,r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Qk(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function eI(e,t){if(null===e)return null;if("string"===typeof e)return xx(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Qk(t,s,r)?n.push(r):n.push(eI(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=xx(n);t[e]=eI(r,e)}}return t}}function tI(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return yx(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Qk(t,s,r)?n.push(r):n.push(tI(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=yx(n);t[s]="name"!==n&&"className"!==n||"string"!==typeof r?tI(r,n):r}return t}}
/** @license See the LICENSE file. */
const nI="4.19.0",rI=e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))};class sI extends yw{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Lx(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],$x(this.inputs).length!==this.inputs.length)throw new lx(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);$x(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const b of this.inputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;fx(0===t,"input layer has >1 nodes"),fx(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const t=this.inputLayers[b];if(!(t instanceof Cw))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},i={},a=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new ux(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(sI.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let i=0;i<c;i++){const e=l.inputTensors[i],r=l.inboundLayers[i],s=l.nodeIndices[i],a=l.tensorIndices[i];o(e,t,n,r,s,a)}t.push(l);while(n.indexOf(l)>=0)n.splice(n.indexOf(l),1);a.push(l)},u=[],l=[];for(const b of this.outputs)o(b,u,l);const c=a.slice().reverse();for(const b of c){n[b.id]=b,b.id in t||(t[b.id]=0);let e=t[b.id];const i=null==r[b.outboundLayer.id]?0:r[b.outboundLayer.id];e=Math.max(e,i),r[b.outboundLayer.id]=e,s[b.outboundLayer.id]=b.outboundLayer,t[b.id]=e;for(let r=0;r<b.inboundLayers.length;r++){const s=b.inboundLayers[r],i=b.nodeIndices[r],a=s.inboundNodes[i],o=null==t[a.id]?0:t[a.id];t[a.id]=Math.max(e+1,o),n[a.id]=a}}const h={};for(const b in t){const e=t[b];e in h||(h[e]=[]),h[e].push(n[b])}const d={};for(const b in r){const e=r[b];e in d||(d[e]=[]),d[e].push(s[b])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Sx);this.layers=[];for(const b of p){const e=d[b];e.sort(((e,t)=>{const n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof sI&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Sx);const f=this.inputs.slice(),g=[];for(const b of p)for(const e of h[b]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new ux(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${g}`);for(const t of e.outputTensors)f.push(t);g.push(t.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const b of m){const e=m.filter((e=>e===b)).length;if(1!==e)throw new ux(`The name "${b}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new mw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new lx("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=rI(e);s&&this.parseWeights(e);for(const a of this.layers)for(const[e,t]of a.weights.entries()){const i=s?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[i])throw new lx(`Duplicate weight name: ${i}`);n[i]=t,r++}const i=[];for(const a in e){let r=a;if(null==n[a]){const e=a.split("/"),t=e.slice(0,-2).concat([e[e.length-1]]);r=t.join("/")}if(null!=n[r])i.push([n[r],e[a]]);else if(t)throw new lx(`Provided weight data has no target variable: ${a}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new lx(`${e.length} of ${r} weights are not set: ${e}`)}dw(i)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t["className"]=this.getClassName(),t["config"]=e,t["kerasVersion"]=`tfjs-layers ${nI}`,t["backend"]="TensorFlow.js",t}toJSON(e,t=!0){const n=tI(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Ci((()=>{e=bx(e);const n=new Nw;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return _w(this.outputs,n,t)}))}computeMask(e,t){return Ci((()=>{let n;return e=bx(e),n=null==t?px(null,e.length):bx(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=sw(e);if(t.length!==this.inputLayers.length)throw new lx(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<t.length;a++){const e=this.inputLayers[a],r=t[a],s=e.name+"_0_0";n[s]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Sx);if(r.length>1)for(const a of r){const e=this.nodesByDepth[a];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],s=t.nodeIndices[o],i=t.tensorIndices[o],a=`${e.name}_${s}_${i}`,u=n[a];r.push(u)}const s=e.computeOutputShape(mx(r)),i=sw(s),a=e.inboundNodes.indexOf(t);for(let t=0;t<i.length;t++){const r=`${e.name}_${a}_${t}`;n[r]=i[t]}}}const s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],t=this.outputLayersNodeIndices[a],n=this.outputLayersTensorIndices[a],r=`${e.name}_${t}_${n}`;i.push(r)}for(let a=0;a<i.length;a++){const e=i[a];fx(e in n),s.push(n[e])}return mx(s)}runInternalGraph(e,t){null==t&&(t=px(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],s=e[o],i=t[o];n[r.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Sx);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,i=new Array;for(const t of r)t.id in n&&i.push(n[t.id]);if(i.length===r.length){let r,a,o,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===i.length){const[t,n]=i[0];null==l["mask"]&&(l["mask"]=n),o=bx(e.call(t,l)),u=bx(e.computeMask(t,n)),r=[t],a=[n]}else r=i.map((e=>e[0])),a=i.map((e=>e[1])),null==l["mask"]&&(l["mask"]=a),o=bx(e.call(r,l)),u=bx(e.computeMask(r,a));if(e.activityRegularizer)throw new cx("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],i=u[e];n[t.id]=[r,i]}}}}const s=[],i=[],a=[];for(const o of this.outputs){fx(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];a.push(e.shape),s.push(e),i.push(t)}return[s,i,a]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof sI?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=sI.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new lx("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new lx(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new lx(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Ci((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=sI.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),r=i.getConfig(),s=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],r=sI.nodeKey(i,n);let a={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),a=e.callArgs}catch(pY){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=e.tensorIndices[r],u=sI.nodeKey(s,i);let l=t[u];null==l&&(l=0),n.push([s.name,l,o,a])}s.push(n)}}}const a={};a["name"]=i.name,a["className"]=e,a["config"]=r,a["inboundNodes"]=s,n.push(a)}e["layers"]=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],s=sI.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let a=t[s];null!==a&&void 0!==a||(a=0);const o=this.inputLayersTensorIndices[i];r.push([e.name,a,o])}e["inputLayers"]=r;const s=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=sI.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let a=t[r];null!==a&&void 0!==a||(a=0);const o=this.outputLayersTensorIndices[i];s.push([e.name,a,o])}return e["outputLayers"]=s,e}static fromConfig(e,t,n={},r=!1){const s={},i={};function a(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let r;for(const i of t){const o=i[0],u=i[1],l=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void a(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(mx(n),r)}function u(e){const n=e["name"],i=ik(e,null!=t["customObjects"]?t["customObjects"]:{});i.setFastWeightInitDuringBuild(r),s[n]=i;const o=e["inboundNodes"];o.forEach((e=>{if(!(e instanceof Array))throw new lx(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const l=t["name"],c=t["layers"];for(const g of c)u(g);while(!Nx(i))for(const e of c){const t=s[e["name"]];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t["inputLayers"];for(const g of p){const e=g[0],t=g[1],n=g[2];fx(e in s);const r=s[e],i=r.inboundNodes[t].outputTensors;h.push(i[n])}const f=t["outputLayers"];for(const g of f){const e=g[0],t=g[1],n=g[2];fx(e in s);const r=s[e],i=r.inboundNodes[t].outputTensors;d.push(i[n])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new lx("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Ci((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function iI(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function aI(e,t){return iI(e,t,"classWeight")}async function oI(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Ci((()=>{if(1===e.shape.length)return Da(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return _u(e,t)}if(1===e.shape[1])return Zu(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Si(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Yh(s,"float32")}return null}function uI(e,t){return Ga(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const lI=32;function cI(e,t){let n,r;const s=t;n=s["xs"],r=s["ys"],y(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=hI("input",e.inputNames,n),a=hI("output",e.outputNames,r),o=i[0].shape[0];y(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),y(a.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let u=0;u<i.length;u++)y(i[u].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let u=0;u<a.length;u++)y(a[u].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[u]} has ${a[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:a}}function hI(e,t,n){if(n instanceof _s)return[n];if(Array.isArray(n))return y(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new lx(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function dI(e){if(3===e.length)throw new cx("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function pI(e,t,n){const r=null!=n.batchesPerEpoch;if(y(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),y(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),y(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),y(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),y(null==n["validationSplit"],(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(gI(n.validationData))y(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=dI(n.validationData);i=e.xs,a=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=nk(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=sk(c,h,n.epochs,null,null,fI(t,n),null,s,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();while(f<n.epochs){const l={};await d.onEpochBegin(f);let c=0,h=0;r||(g=await t.iterator());while(!r||c<n.batchesPerEpoch){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=cI(e,t.value),i={};i["batch"]=h,i["size"]=r[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const t=aI(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)a.push(await oI(s[e],null,t[e]))}const l=r.concat(s).concat(a),p=o(l);Si(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];i[t]=n,$i(n)}await d.onBatchEnd(h,i),qw(i),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=gI(n.validationData)?bx(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):bx(e.evaluate(i,a,{batchSize:null==n.validationBatchSize?lI:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function fI(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function gI(e){return"function"===typeof e.iterator}function mI(e){return"function"===typeof e.next}async function bI(e,t,n){n=n||{};const r=null!=n.batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new cx("Verbose mode is not implemented yet.");y(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a=mI(t)?t:await t.iterator();let o=0,u=0;while(!r||u<n.batches){const t=await a.next();if(i=Ci((()=>{if(t.value){const{xs:n,ys:r}=cI(e,t.value),a=n.concat(r),l=Ci((()=>s(a)));if(Si(a),0===u)for(let e=0;e<l.length;++e)i.push(Qa(0));const c=a[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=i[e];i[e]=Ci((()=>za(i[e],Ga(c,t)))),u>0&&Si(n)}Si(l),o+=c,++u}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<i.length;++l){const e=i[l];i[l]=Ua(i[l],o),Si(e)}return mx(i)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function yI(e){y(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function xI(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>gv(e,t,n-t))):gv(e,t,n-t)}function vI(e,t){return Ci((()=>null==e?null:Array.isArray(e)?e.map((e=>vI(e,t))):Iv(e,"int32"===t.dtype?t:Aa(t,"int32"))))}function wI(e,t){const n=[];let r=0,s=null;while(r<e)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function kI(e){const t=[];e instanceof _s&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(hv(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function II(e,t){if(null==e)return;const n=[];if(t instanceof _s)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const s in t){const e=t[s];n.push(e.id)}const r=[];if(e instanceof _s)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function CI(e){return e instanceof _s}function SI(e){return Array.isArray(e)}function $I(e){return!CI(e)&&!SI(e)}function NI(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(SI(e)&&e.length>0)t=!0;else if($I(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new lx(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if($I(e)){i=[];for(const n of t){if(null==e[n])throw new lx(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(SI(e)){if(e.length!==t.length)throw new lx(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new lx(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=kI(i),null!=n)for(let a=0;a<t.length;++a){if(null==n[a])continue;const e=i[a];if(e.shape.length!==n[a].length)throw new lx(`Error when checking ${s}: expected ${t[a]} to have ${n[a].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[a].length;++t){if(0===t&&!r)continue;const i=e.shape[t],o=n[a][t];if(null!=o&&o>=0&&i!==o)throw new lx(`${s} expected a batch of elements where each example has shape [${n[a].slice(1,n[a].length)}] (i.e.,tensor shape [*,${n[a].slice(1,n[a].length)}]) but the ${s} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return i}function TI(e,t,n){const r=$x(e.map((e=>e.shape[0])));r.sort();const s=$x(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new lx(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new lx(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!k(r,s))throw new lx(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function EI(e,t,n){const r=[ok,yk,gk];for(let s=0;s<e.length;++s){const i=e[s],a=t[s],o=n[s];if(null!=a){if(a===gk&&1===i.shape[i.shape.length-1])throw new lx(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new lx(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function RI(e,t,n,r=!0,s=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new lx(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new lx(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let a=0;a<t.length;++a){if(null==n[a])continue;const e=i[a];if(e.shape.length!==n[a].length)throw new lx(`Error when checking ${s}: expected ${t[a]} to have ${n[a].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let i=0;i<n[a].length;++i){if(0===i&&!r)continue;const o=e.shape[i],u=n[a][i];if(null!=u&&u!==o)throw new lx(`Error when checking ${s}: expected ${t[a]} to have shape ${JSON.stringify(n[a])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}function _I(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}const AI="layers-model";class FI extends sI{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new lx("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Kk(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=Vk(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof io))throw new lx("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new lx(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Ik(e)))}else{const n=Ik(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new lx(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Ik(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const e=this.internalOutputShapes[i],t=this.outputNames[i];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Yx("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=_I(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Yx("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=r[e],i=t=>{const n="";let r,i,a;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===yk?-1!==["accuracy","acc"].indexOf(o)?i=Ck:-1!==["crossentropy","ce"].indexOf(o)&&(i=Ek):this.lossFunctions[e]===mk?-1!==["accuracy","acc"].indexOf(o)?i=Rk:-1!==["crossentropy","ce"].indexOf(o)&&(i=Pk):-1!==["accuracy","acc"].indexOf(o)?i=Sk:-1!==["crossentropy","ce"].indexOf(o)&&(i=Lk),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),a=i,r=n+s}else{const e=Wk(o);a=e,r=n+Uk(o)}let t;Yx(r,(()=>{t=a})),s(e,r,t)}};i(t)}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;yI(r);const s=!0,i=this.standardizeUserDataXY(e,t,s,r);try{const e=i[0].concat(i[1]);this.makeTestFunction();const t=this.testFunction,s=this.testLoop(t,e,r,n.verbose,n.steps);return mx(s)}finally{II(i[0],e),II(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),bI(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new lx(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new lx(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new lx("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),i=new Nw;if(e instanceof _s&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new lx(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new lx(`No value is provided for the model's input ${o.name}`);i.add(o,t)}const a=_w(s,i);return n?a:a[0]}retrieveSymbolicTensors(e){const t=px(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((e=>e.name));for(let r=0;r<e.length;++r){const a=i.indexOf(e[r]);if(-1!==a&&(t[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new lx(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Ci((()=>{const r=this.checkNumSamples(e);if(n)throw new cx("Verbose predictLoop() is not implemented yet.");const s=wI(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){const n=Ci((()=>{const n=s[t][0],r=s[t][1],i=xI(e,n,r),a=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)a.push({key:this.inputs[e],value:i[e]});else a.push({key:this.inputs[0],value:i});const o=new Nw(a);return _w(this.outputs,o)}));n.forEach(((e,t)=>i[t].push(e)))}return mx(i.map((e=>bl(e,0))))}))}predict(e,t={}){const n=kI(e);RI(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return yI(e),this.predictLoop(n,e)}finally{II(n,e)}}predictOnBatch(e){RI(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new ux("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let i=0;i<this.feedOutputShapes.length;++i){const e=this.feedOutputShapes[i],t=this.feedLossFns[i];t===mk?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(e=NI(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=NI(t,this.feedOutputNames,s,!1,"target"),TI(e,t,null),EI(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new lx(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,i){const[a,o]=this.standardizeUserDataXY(e,t,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=aI(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await oI(o[t],null,e[t]))}return[a,o,u]}testLoop(e,t,n,r=0,s){return Ci((()=>{const i=this.checkNumSamples(t,n,s,"steps"),a=[];if(r>0)throw new cx("Verbose mode is not implemented yet.");if(null!=s)throw new cx("steps mode in testLoop() is not implemented yet");{const r=wI(i,n),s=Yh(av(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],u=gv(s,i,o-i),l=vI(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)a.push(Qa(0));for(let e=0;e<c.length;++e){const t=c[e];a[e]=za(a[e],Ga(o-i,t))}}for(let e=0;e<a.length;++e)a[e]=Ua(a[e],i)}return a}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if(gx(e,r)>1){const t=gx(e.slice(0,n),r);s+=`_${t}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const a=new Nw(e),o=_w(this.outputs,a,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){const e=this.lossFunctions[n];let i=e(r[n],o[n]);null!=s[n]&&(i=uI(i,s[n]));const a=Vc(i);t.push(a),u=0===n?i:za(u,i)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],s=this.metricsTensors[n][1];e=Vc(t(r[s],o[s]))}$i(e),i.push(e)}return u=Vc(u),this.calculateLosses().forEach((e=>{u=za(u,e)})),u},o=this.collectedTrainableWeights.map((e=>e.read())),u=!0,l=this.optimizer_.minimize(a,u,o);return[l].concat(i)}}makeTestFunction(){this.testFunction=e=>Ci((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const a=new Nw(i),o=_w(this.outputs,a);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=Vc(r(s[e],o[e]));n=0===e?i:za(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=Vc(n(s[r],o[r]));t.push(i)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,i,a,o,u,l,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;yI(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);r=f[0],s=f[1],h=f[2];let g,m=!1;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2!==n.validationData.length)throw 3===n.validationData.length?new cx("validationData including sample weights is not supported yet."):new lx(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,u,null,null,e,d);l=t[0],c=t[1],g=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];l=xI(r,e,t),i=r,r=xI(r,0,e),c=xI(s,e,t),a=s,s=xI(s,0,e),g=l.concat(c)}else null!=n.validationSteps&&(m=!0);const b=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;m?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,g=[],w=x.slice());const k=nk(n.callbacks,n.yieldEvery),I=await this.fitLoop(y,b,x,d,n.epochs,n.verbose,k,v,g,n.shuffle,w,n.initialEpoch,null,null);return I}finally{this.isTraining=!1,II(r,e),II(s,t),II(i,e),II(a,t),II(l,o),II(c,u),null!=h&&Si(h)}}async fitLoop(e,t,n,r,s,i,a,o,u,l,c,h,d,f){null==r&&(r=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let g=!1;if(null!=o&&null!=u&&(g=!0),null!=f&&(g=!0,null==d))throw new lx("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,d,"steps_per_epoch");let b;null!=m&&(b=av(0,m)),null==i&&(i=1);const{callbackList:y,history:x}=sk(a,i,s,h,m,d,r,g,c);y.setModel(this),this.history=x,await y.onTrainBegin(),this.stopTraining_=!1;for(let v=h;v<s;++v){await y.onEpochBegin(v);const s={};if(null!=d)throw new cx("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new cx("batch shuffling is not implemneted yet");l&&p(b);const i=Yh(b),a=wI(m,r);for(let l=0;l<a.length;++l){const c={};if(await y.onBatchBegin(l,c),Ci((()=>{const h=a[l][0],d=a[l][1],p=gv(i,h,d-h);c["batch"]=l,c["size"]=d-h;const f=vI(t,p),m=e(f);for(let e=0;e<n.length;++e){const t=n[e],r=m[e];c[t]=r,$i(r)}if(l===a.length-1&&g){const e=this.testLoop(o,u,r);for(let t=0;t<n.length;++t){const r=n[t],i=e[t];$i(i),s["val_"+r]=i}}})),await y.onBatchEnd(l,c),qw(c),this.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(v,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return pI(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],i=this.makeTrainFunction(),a=i(r.concat(s)),o=[];for(const u of a){const e=await u.data();o.push(e[0])}return Si(a),II(n[0],e),II(n[1],t),mx(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let i=0;i<r.length;++i)n&&!r[i].trainable||t.push({name:r[i].originalName,tensor:s[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Ii().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ii().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=yx(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>yx(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=yx(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[yx(Uk(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>yx(Uk(e))));{const e={};for(const t in this.metrics)e[t]=yx(Uk(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=eI(e.optimizer_config),n=ik(t);let r,s;if("string"===typeof e.loss)r=xx(e.loss);else if(Array.isArray(e.loss))r=e.loss.map((e=>xx(e)));else if(null!=e.loss){r={};for(const t in e.loss)r[t]=xx(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>xx(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=xx(e.metrics[t])}this.compile({loss:r,metrics:s,optimizer:n})}async save(e,t){if("string"===typeof e){const t=Yi(e);if(0===t.length)throw new lx(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new lx(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new lx("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ri(this.getNamedWeights(t)),r=!1,s=null,i=this.toJSON(s,r),a={modelTopology:i,format:AI,generatedBy:`TensorFlow.js tfjs-layers v${nI}`,convertedBy:null},o=null!=t&&t.includeOptimizer;if(o&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await Ri(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Pi([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Hk(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Hk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}FI.className="Model",so(FI);class DI extends FI{}async function OI(e,t){if(null==t&&(t={}),"string"===typeof e){const n=Ji(e,t);if(0===n.length)n.push(Ho(e,t));else if(n.length>1)throw new lx(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return MI(e,void 0,t)}async function MI(e,t,n){if(null==n&&(n={}),null==e.load)throw new lx("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s["model_config"]&&(s=s["model_config"]);const i=null==n.strict||n.strict,a=null!=r.weightData&&null!=r.weightSpecs&&i,o=ik(eI(s),t,a),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new lx("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=LI(r.weightData,r.weightSpecs);o.loadWeights(e,i),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Si(e),Si(t.map((e=>e.tensor)))}return o}function LI(e,t){const n=_i(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}DI.className="Functional",so(DI);class zI extends FI{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Lx("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){const t=e.inboundNodes[0].outputTensors[0].shape;if(t.some((e=>e<0)))throw new lx(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof zI||e instanceof FI;let n;if(t){if(n=e,1!==n.outputs.length)throw new lx("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new lx("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new lx("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Sw({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new lx(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new lx("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ww(this.outputs[0])}this.inboundNodes=[],new mw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:px(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(aw(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new FI({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new ux("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new ux("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new ux("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new ux("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0]["className"])throw new lx("Legacy serialization format not supported yet.");s=t}else y(null!=t["layers"],(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t["layers"],delete t["layers"],i=t;const a=new e(i);if(!(a instanceof zI))throw new cx(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const o of s){const e=void 0,t=ik(o,e,r);r&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(e){if(null==this.model)throw new lx("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new lx("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n["className"]=t.getClassName(),n["config"]=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}zI.className="Sequential",so(zI);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class PI extends no{getConfig(){return{}}}class BI extends PI{apply(e,t=1){return Nv(e,t)}}BI.className="elu",so(BI);class WI extends PI{apply(e){return Ih(e)}}WI.className="selu",so(WI);class UI extends PI{apply(e){return xh(e)}}UI.className="relu",so(UI);class VI extends PI{apply(e){return Ci((()=>Kc(6,xh(e))))}}VI.className="relu6",so(VI);class GI extends PI{apply(e){return e}}GI.className="linear",so(GI);class HI extends PI{apply(e){return Nh(e)}}HI.className="sigmoid",so(HI);class jI extends PI{apply(e){return Rv(e)}}jI.className="hardSigmoid",so(jI);class KI extends PI{apply(e){return Wh(e)}}KI.className="softplus",so(KI);class qI extends PI{apply(e){return Tv(e)}}qI.className="softsign",so(qI);class XI extends PI{apply(e){return Xh(e)}}XI.className="tanh",so(XI);class YI extends PI{apply(e,t=-1){return Ph(e,t)}}YI.className="softmax",so(YI);class JI extends PI{apply(e,t=-1){return Ic(e,t)}}JI.className="logSoftmax",so(JI);class ZI extends PI{apply(e){return Ci((()=>Ci((()=>{const t=Math.sqrt(2),n=Ga(.5,za(1,Xl(Ua(e,t))));return Ga(e,n)}))))}}ZI.className="gelu",so(ZI);class QI extends PI{apply(e){return Ci((()=>Ga(.5,Ga(e,za(1,Xh(Ga(ja(Ua(2,Math.PI)),za(e,Ga(.044715,co(e,3))))))))))}}QI.className="gelu_new",so(QI);class eC extends PI{apply(e){return Ci((()=>Ga(e,Xh(Wh(e)))))}}eC.className="mish",so(eC);class tC extends PI{apply(e,t=1){return Ci((()=>Ga(Nh(Ga(e,t)),e)))}}function nC(e){return e.getClassName()}function rC(e,t={}){return Ix(e,ro.getMap().classNameMap,t,"activation")}function sC(e){if(null==e){const e={className:"linear",config:{}};return rC(e)}if("string"===typeof e){const t={};return t["className"]=e,t["config"]={},rC(t)}return e instanceof PI?e:rC(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function iC(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}tC.className="swish",so(tC);class aC extends no{}class oC extends aC{constructor(e){super(),iC(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Ci((()=>{let t=nh([1]);return this.hasL1&&(t=za(t,wc(Ga(this.l1,mo(e))))),this.hasL2&&(t=za(t,wc(Ga(this.l2,Cv(e))))),Zu(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t["l1"],l2:t["l2"]})}}oC.className="L1L2",so(oC);const uC={l1l2:"L1L2"};function lC(e){return wx(e)}function cC(e,t={}){return Ix(e,ro.getMap().classNameMap,t,"regularizer")}function hC(e){if(null==e)return null;if("string"===typeof e){const t=e in uC?uC[e]:e,n={className:t,config:{}};return cC(n)}return e instanceof aC?e:cC(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class dC extends yw{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=iw(e);let n=xh(e);return null!=this.maxValue&&(n=gl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}dC.className="ReLU",so(dC);class pC extends yw{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=iw(e);return pc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}pC.className="LeakyReLU",so(pC);class fC extends yw{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=nw(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=hC(e.alphaRegularizer),this.alphaConstraint=jw(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new lx(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){e=aw(e);const t=e.slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new pw({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=iw(e),lh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:tw(this.alphaInitializer),alphaRegularizer:lC(this.alphaRegularizer),alphaConstraint:Gw(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}fC.className="PReLU",so(fC);class gC extends yw{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new cx(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=iw(e);return Hl(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}gC.className="ELU",so(gC);class mC extends yw{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=iw(e);return Ga(n,Aa(lc(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}mC.className="ThresholdedReLU",so(mC);class bC extends yw{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new YI).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Ci((()=>{let n=iw(e);const r=t["mask"];if(null!=r){const e=Ga(po(rh(n.shape),Aa(r,n.dtype)),Qa(-1e9));n=za(n,e)}return this.axis instanceof Array?this.axis.length>1?Jl(po(n,Fc(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function yC(e,t,n){if("number"===typeof e)return px(e,t);if(e.length!==t)throw new lx(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if(!nv(s))throw new lx(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function xC(e,t,n,r,s=1){if(null==e)return e;const i=t+(t-1)*(s-1);let a;return a="same"===n?e:e-i+1,Math.floor((a+r-1)/r)}function vC(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+iv([n-t,0]);else{if("same"!==r)throw new lx(`Unsupport padding mode: ${r}.`);e*=t}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function wC(e,t){return Ci((()=>(Gx(t),"channelsFirst"===t?cd(e,[0,2,3,1]):e)))}function kC(e,t){return Ci((()=>(Gx(t),"channelsFirst"===t?cd(e,[0,2,3,4,1]):e)))}function IC(e,t,n,r=1,s="valid",i,a=1){return Ci((()=>{if(null==i&&(i=lv()),Gx(i),3!==e.shape.length)throw new lx(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new lx(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new lx(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===i&&(e=cd(e,[0,2,1])),"causal"===s)throw new cx("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=El(e,t,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=$v(o,n)),o}))}function CC(e,t,n,r=[1,1],s="valid",i,a,o=null){return Ci((()=>{if(null==i&&(i=lv()),Gx(i),3!==e.rank&&4!==e.rank)throw new lx(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new lx(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=wC(e,i);if("causal"===s)throw new cx("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Fd({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(u=cd(u,[0,3,1,2])),u}))}function SC(e,t,n,r=[1,1,1],s="valid",i,a){return Ci((()=>{if(null==i&&(i=lv()),Gx(i),4!==e.rank&&5!==e.rank)throw new lx(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new lx(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=kC(e,i);if("causal"===s)throw new cx("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ol(o,t,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=$v(o,n)),"channelsFirst"===i&&(o=cd(o,[0,4,1,2,3])),o}))}bC.className="Softmax",so(bC);class $C extends yw{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",$C.verifyArgs(t),this.rank=e,Rx(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new cx(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=yC(t.kernelSize,e,"kernelSize"),this.strides=yC(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,jx(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Gx(this.dataFormat),this.activation=sC(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=nw(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=jw(t.biasConstraint),this.biasRegularizer=hC(t.biasRegularizer),this.activityRegularizer=hC(t.activityRegularizer),this.dilationRate=yC(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new lx(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new lx(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new lx(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(fx("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!Ex(e.kernelSize,"number",1,3))throw new lx(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:nC(this.activation),useBias:this.useBias,biasInitializer:tw(this.biasInitializer),biasRegularizer:lC(this.biasRegularizer),activityRegularizer:lC(this.activityRegularizer),biasConstraint:Gw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class NC extends $C{constructor(e,t){super(e,t),this.kernel=null,NC.verifyArgs(t),this.filters=t.filters,Rx(this.filters,"filters"),this.kernelInitializer=nw(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=jw(t.kernelConstraint),this.kernelRegularizer=hC(t.kernelRegularizer)}build(e){e=aw(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new lx(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Ci((()=>{let t;e=iw(e);const n=null==this.bias?null:this.bias.read(),r=Fx(this.activation.getClassName());if(null!=r&&2===this.rank)t=CC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=IC(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=CC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new cx("convolutions greater than 3D are not implemented yet.");t=SC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=aw(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=xC(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:tw(this.kernelInitializer),kernelRegularizer:lC(this.kernelRegularizer),kernelConstraint:Gw(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new lx(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class TC extends NC{constructor(e){super(2,e),TC.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e["rank"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Ex(e.kernelSize,"number",1,2))throw new lx(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}TC.className="Conv2D",so(TC);class EC extends NC{constructor(e){super(3,e),EC.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e["rank"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new lx(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}EC.className="Conv3D",so(EC);class RC extends TC{constructor(e){if(super(e),this.inputSpec=[new pw({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new lx(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=aw(e),4!==e.length)throw new lx("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new lx("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new pw({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Ci((()=>{let t=iw(e);if(4!==t.shape.length)throw new lx(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=vC(a,c,u,this.padding),p=vC(o,h,l,this.padding),f=[r,d,p,this.filters];"channelsLast"!==this.dataFormat&&(t=cd(t,[0,2,3,1]));let g=Fl(t,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(g=cd(g,[0,3,1,2])),null!=this.bias&&(g=$v(g,this.bias.read(),this.dataFormat)),null!=this.activation&&(g=this.activation.apply(g)),g}))}computeOutputShape(e){e=aw(e);const t=e.slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=vC(t[r],o,i,this.padding),t[s]=vC(t[s],u,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e["dilationRate"],e}}RC.className="Conv2DTranspose",so(RC);class _C extends EC{constructor(e){if(super(e),this.inputSpec=[new pw({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new lx(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=aw(e),5!==e.length)throw new lx("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new lx("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new pw({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Ci((()=>{let t=iw(e);if(5!==t.shape.length)throw new lx(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i,a;"channelsFirst"===this.dataFormat?(a=2,s=3,i=4):(a=1,s=2,i=3);const o=n[a],u=n[s],l=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=vC(o,p,c,this.padding),b=vC(u,f,h,this.padding),y=vC(l,g,d,this.padding),x=[r,m,b,y,this.filters];"channelsLast"!==this.dataFormat&&(t=cd(t,[0,2,3,4,1]));let v=Pl(t,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=cd(v,[0,4,1,2,3])),null!==this.bias&&(v=$v(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){e=aw(e);const t=e.slice();let n,r,s,i;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,i=4):(n=4,r=1,s=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=vC(t[r],l,a,this.padding),t[s]=vC(t[s],c,o,this.padding),t[i]=vC(t[i],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e["dilationRate"],e}}_C.className="Conv3DTranspose",so(_C);class AC extends NC{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new lx("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new lx("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new lx(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=nw(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=hC(t.depthwiseRegularizer),this.depthwiseConstraint=jw(t.depthwiseConstraint),this.pointwiseInitializer=nw(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=hC(t.pointwiseRegularizer),this.pointwiseConstraint=jw(t.pointwiseConstraint)}build(e){if(e=aw(e),e.length<this.rank+2)throw new lx(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new lx(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new pw({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Ci((()=>{let t;if(e=iw(e),1===this.rank)throw new cx("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=cd(e,[0,2,3,1])),t=Sh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=$v(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=cd(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e["rank"],delete e["kernelInitializer"],delete e["kernelRegularizer"],delete e["kernelConstraint"],e["depthwiseInitializer"]=tw(this.depthwiseInitializer),e["pointwiseInitializer"]=tw(this.pointwiseInitializer),e["depthwiseRegularizer"]=lC(this.depthwiseRegularizer),e["pointwiseRegularizer"]=lC(this.pointwiseRegularizer),e["depthwiseConstraint"]=Gw(this.depthwiseConstraint),e["pointwiseConstraint"]=Gw(this.pointwiseConstraint),e}}AC.className="SeparableConv";class FC extends AC{constructor(e){super(2,e)}}FC.className="SeparableConv2D",so(FC);class DC extends NC{constructor(e){super(1,e),DC.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e["rank"],delete e["dataFormat"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Ex(e.kernelSize,"number",1,1))throw new lx(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}DC.className="Conv1D",so(DC);class OC extends yw{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Ci((()=>{if(e=iw(e),"channelsLast"===this.dataFormat){const t=bv(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return bv(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=bv(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return bv(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}OC.className="Cropping2D",so(OC);class MC extends yw{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gx(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,Hx(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Ci((()=>{let t=iw(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=cd(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Zp.resizeNearestNeighbor(t,[e,r]):Zp.resizeBilinear(t,[e,r]);return cd(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Zp.resizeNearestNeighbor(t,[e,r]):Zp.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function LC(e,t,n=[1,1],r="valid",s,i){return Ci((()=>{null==s&&(s=lv()),Gx(s);let a=wC(e,s);if(4!==e.rank)throw new lx(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new lx(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=Vl(a,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=cd(a,[0,3,1,2])),a}))}MC.className="UpSampling2D",so(MC);class zC extends $C{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=nw(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=jw(e.depthwiseConstraint),this.depthwiseRegularizer=hC(e.depthwiseRegularizer)}build(e){if(e=aw(e),e.length<4)throw new lx(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new lx(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ci((()=>{e=iw(e);let t=LC(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=$v(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=aw(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=xC(t,this.kernelSize[0],this.padding,this.strides[0]),i=xC(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,i]:[e[0],s,i,r]}getConfig(){const e=super.getConfig();return e["depthMultiplier"]=this.depthMultiplier,e["depthwiseInitializer"]=tw(this.depthwiseInitializer),e["depthwiseRegularizer"]=lC(this.depthwiseRegularizer),e["depthwiseConstraint"]=Gw(this.depthwiseRegularizer),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function PC(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new lx("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return t=s(t),n=s(n),{inputs:e,initialState:t,constants:n}}function BC(e,t,n,r=!1,s,i,a=!1,o=!1){return Ci((()=>{const u=t.shape.length;if(u<3)throw new lx(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(av(2,u));if(t=cd(t,l),null!=i)throw new cx("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&(s=Aa(Aa(s,"bool"),"float32"),s.rank===u-1&&(s=Ql(s,-1)),s=cd(s,l)),r&&(t=wh(t,0),null!=s&&(s=wh(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=td(t);let g,m;null!=s&&(g=td(s));for(let t=0;t<p;++t){const n=f[t],r=Ci((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=Ci((()=>{const e=g[t],n=po(ih(e),e),s=za(Ga(r[0],e),Ga(d[0],n)),i=d.map(((t,s)=>za(Ga(r[1][s],e),Ga(t,n))));return{output:s,newStates:i}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){const e=1;m=Kh(c,e)}return[h,m,d]}))}zC.className="DepthwiseConv2D",so(zC);class WC extends yw{constructor(e){let t;if(super(e),null==e.cell)throw new lx("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new XC({cells:e.cell}):e.cell,null==t.stateSize)throw new lx("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new pw({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return av(0,e).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){rw(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Ci((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){const t=null;if(null!=this.numConstants)throw new cx("Constants support is not implemented in RNN yet.");rw(e)&&(e=e[0]);const n=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new pw({shape:[n,null,...r]});const s=[e[0]].concat(e.slice(2));if(null!=t)throw new cx("Constants support is not implemented in RNN yet.");let i;if(this.cell.build(s),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!k(this.stateSpec.map((e=>e.shape[e.shape.length-1])),i))throw new lx(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map((e=>new pw({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Ci((()=>{if(!this.stateful)throw new ox("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new lx("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>nh([n,e]))):this.states_=[nh([n,this.cell.stateSize])];else if(null==e)Si(this.states_),null!=this.keptStates&&(Si(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>nh([n,e]))):this.states_[0]=nh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new lx(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Si(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!k(r.shape,i))throw new lx(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>$i(e.clone())))}))}apply(e,t){let n=null==t?null:t["initialState"],r=null==t?null:t["constants"];null==t&&(t={});const s=PC(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){t["initialState"]=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new pw({shape:e.shape}));a=a.concat(this.stateSpec)}null!=r&&(t["constants"]=r,i=i.concat(r),this.numConstants=r.length);const o=i[0]instanceof fw;if(o){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Ci((()=>{const n=null==t?null:t["mask"],r=null==t?null:t["training"];let s=null==t?null:t["initialState"];e=iw(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new lx(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=(e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]},u=BC(o,e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=u[0],c=u[1],h=u[2];this.stateful&&this.resetStates(h,r);const d=this.returnSequences?c:l;return this.returnState?[d].concat(h):d}))}getInitialState(e){return Ci((()=>{let t=nh(e.shape);return t=wc(t,[1,2]),t=hv(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?vv(t,[1,e]):t)):this.cell.stateSize>1?[vv(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t["numConstants"]=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===WC.className&&(t["cell"]={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=t["cell"],s=ik(r,n);return new e(Object.assign(t,{cell:s}))}}WC.className="RNN",so(WC);class UC extends yw{}class VC extends UC{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Rx(this.units,"units"),this.activation=sC(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=nw(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nw(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nw(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hC(e.kernelRegularizer),this.recurrentRegularizer=hC(e.recurrentRegularizer),this.biasRegularizer=hC(e.biasRegularizer),this.kernelConstraint=jw(e.kernelConstraint),this.recurrentConstraint=jw(e.recurrentConstraint),this.biasConstraint=jw(e.biasConstraint),this.dropout=sv([1,iv([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=sv([1,iv([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=aw(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ci((()=>{if(2!==e.length)throw new lx(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t["training"]&&t["training"];let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=YC({ones:()=>ih(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=YC({ones:()=>ih(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=kv(null!=i?Ga(e,i):e,this.kernel.read()),null!=this.bias&&(s=$v(s,this.bias.read())),null!=a&&(n=Ga(n,a));let o=za(s,kv(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nC(this.activation),useBias:this.useBias,kernelInitializer:tw(this.kernelInitializer),recurrentInitializer:tw(this.recurrentInitializer),biasInitializer:tw(this.biasInitializer),kernelRegularizer:lC(this.kernelRegularizer),recurrentRegularizer:lC(this.recurrentRegularizer),biasRegularizer:lC(this.biasRegularizer),activityRegularizer:lC(this.activityRegularizer),kernelConstraint:Gw(this.kernelConstraint),recurrentConstraint:Gw(this.recurrentConstraint),biasConstraint:Gw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}VC.className="SimpleRNNCell",so(VC);class GC extends WC{constructor(e){e.cell=new VC(e),super(e)}call(e,t){return Ci((()=>{null!=this.cell.dropoutMask&&(Si(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Si(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}GC.className="SimpleRNN",so(GC);class HC extends UC{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new lx("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Rx(this.units,"units"),this.activation=sC(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=sC(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=nw(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nw(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nw(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=hC(e.kernelRegularizer),this.recurrentRegularizer=hC(e.recurrentRegularizer),this.biasRegularizer=hC(e.biasRegularizer),this.kernelConstraint=jw(e.kernelConstraint),this.recurrentConstraint=jw(e.recurrentConstraint),this.biasConstraint=jw(e.biasConstraint),this.dropout=sv([1,iv([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=sv([1,iv([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=aw(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ci((()=>{if(2!==e.length)throw new lx(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t["training"]&&t["training"];let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=YC({ones:()=>ih(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=YC({ones:()=>ih(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,u;0<this.dropout&&this.dropout<1&&(e=Ga(e,s[0]));let l=kv(e,this.kernel.read());this.useBias&&(l=$v(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ga(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=Vh(c,[2*this.units,this.units],c.rank-1),p=kv(r,h),[f,g,m]=Vh(l,3,l.rank-1),[b,y]=Vh(p,2,p.rank-1);a=this.recurrentActivation.apply(za(f,b)),o=this.recurrentActivation.apply(za(g,y));const x=kv(Ga(o,r),d);u=this.activation.apply(za(m,x));const v=za(Ga(a,r),Ga(za(1,Jc(a)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nC(this.activation),recurrentActivation:nC(this.recurrentActivation),useBias:this.useBias,kernelInitializer:tw(this.kernelInitializer),recurrentInitializer:tw(this.recurrentInitializer),biasInitializer:tw(this.biasInitializer),kernelRegularizer:lC(this.kernelRegularizer),recurrentRegularizer:lC(this.recurrentRegularizer),biasRegularizer:lC(this.biasRegularizer),activityRegularizer:lC(this.activityRegularizer),kernelConstraint:Gw(this.kernelConstraint),recurrentConstraint:Gw(this.recurrentConstraint),biasConstraint:Gw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}HC.className="GRUCell",so(HC);class jC extends WC{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new HC(e),super(e)}call(e,t){return Ci((()=>{null!=this.cell.dropoutMask&&(Si(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Si(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t["implmentation"]&&(t["implementation"]=1),new e(t)}}jC.className="GRU",so(jC);class KC extends UC{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Rx(this.units,"units"),this.activation=sC(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=sC(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=nw(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nw(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nw(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=hC(e.kernelRegularizer),this.recurrentRegularizer=hC(e.recurrentRegularizer),this.biasRegularizer=hC(e.biasRegularizer),this.kernelConstraint=jw(e.kernelConstraint),this.recurrentConstraint=jw(e.recurrentConstraint),this.biasConstraint=jw(e.biasConstraint),this.dropout=sv([1,iv([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=sv([1,iv([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=aw(e);const n=e[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new(t=class extends Mv{apply(t,r){const s=e.apply([n]),i=(new zv).apply([n]),a=e.apply([2*n]);return xv(xv(s,i),a)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Ci((()=>{const n=null!=t["training"]&&t["training"];if(3!==e.length)throw new lx(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=YC({ones:()=>ih(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=YC({ones:()=>ih(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=Ga(e,i[0]));let h=kv(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ga(r,a[0])),h=za(h,kv(r,this.recurrentKernel.read())),this.useBias&&(h=$v(h,this.bias.read()));const[d,p,f,g]=Vh(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=za(Ga(u,s),Ga(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=Ga(c,this.activation.apply(l));return[m,m,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:nC(this.activation),recurrentActivation:nC(this.recurrentActivation),useBias:this.useBias,kernelInitializer:tw(this.kernelInitializer),recurrentInitializer:tw(this.recurrentInitializer),biasInitializer:tw(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:lC(this.kernelRegularizer),recurrentRegularizer:lC(this.recurrentRegularizer),biasRegularizer:lC(this.biasRegularizer),activityRegularizer:lC(this.activityRegularizer),kernelConstraint:Gw(this.kernelConstraint),recurrentConstraint:Gw(this.recurrentConstraint),biasConstraint:Gw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}KC.className="LSTMCell",so(KC);class qC extends WC{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new KC(e),super(e)}call(e,t){return Ci((()=>{null!=this.cell.dropoutMask&&(Si(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Si(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t["implmentation"]&&(t["implementation"]=1),new e(t)}}qC.className="LSTM",so(qC);class XC extends UC{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Ci((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),s.push(i.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;rw(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Yx(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t=e=>({className:e.getClassName(),config:e.getConfig()}),n=this.cells.map(t),r={cells:n};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,n={}){const r=[];for(const s of t["cells"])r.push(ik(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return hw(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}dw(t)}}function YC(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=e,a=()=>null!=i?i(t(),n):Ev(t(),n),o=()=>_v(a,t,r);if(!s||s<=1)return $i(o().clone());const u=Array(s).fill(void 0).map(o);return u.map((e=>$i(e.clone())))}XC.className="StackedRNNCells",so(XC);
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var JC=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class ZC extends WC{constructor(e){if(e.unroll)throw new cx("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new cx("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new pw({ndim:5})]}call(e,t){return Ci((()=>{if(null!=this.cell.dropoutMask&&(Si(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Si(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t["constants"])throw new lx("ConvRNN2D cell does not support constants");const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Ci((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],i=nh(s);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e,t=!1){Ci((()=>{if(!this.stateful)throw new ox("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],i=n[0];if(null==i)throw new lx("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>nh(s))):this.states_=[nh(s)];else if(null==e)Si(this.states_),null!=this.keptStates&&(Si(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>nh(s))):this.states_[0]=nh(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new lx(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Si(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!k(n.shape,r))throw new lx(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>$i(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=xC(u,r[0],s,i[0],a[0]),h=xC(l,r[1],s,i[1],a[1]),d=[...e.slice(0,2),...o?[n,c,h]:[c,h,n]];return d}}ZC.className="ConvRNN2D";class QC extends KC{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Rx(this.filters,"filters"),this.kernelSize=yC(n,2,"kernelSize"),this.kernelSize.forEach((e=>Rx(e,"kernelSize"))),this.strides=yC(r||1,2,"strides"),this.strides.forEach((e=>Rx(e,"strides"))),this.padding=s||"valid",jx(this.padding),this.dataFormat=i||"channelsLast",Gx(this.dataFormat),this.dilationRate=yC(a||1,2,"dilationRate"),this.dilationRate.forEach((e=>Rx(e,"dilationRate")))}build(e){var t;e=aw(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new lx(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=4,i=this.kernelSize.concat([r,this.filters*s]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new(t=class extends Mv{apply(e,t){const s=n.apply([r]),i=rh([r]),a=n.apply([2*r]);return yv([s,i,a])}},t.className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Ci((()=>{if(3!==e.length)throw new lx(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t["training"]||!1,r=e[0],s=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=YC({ones:()=>ih(r),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,u=(e,t,n)=>t&&t[n]?Ga(t[n],e):e;let l=u(r,o,0),c=u(r,o,1),h=u(r,o,2),d=u(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=YC({ones:()=>ih(s),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=u(s,p,0),g=u(s,p,1),m=u(s,p,2),b=u(s,p,3);const y=3,[x,v,w,k]=Vh(this.kernel.read(),a,y),[I,C,S,$]=this.useBias?Vh(this.bias.read(),a):[null,null,null,null];l=this.inputConv(l,x,I,this.padding),c=this.inputConv(c,v,C,this.padding),h=this.inputConv(h,w,S,this.padding),d=this.inputConv(d,k,$,this.padding);const[N,T,E,R]=Vh(this.recurrentKernel.read(),a,y);f=this.recurrentConv(f,N),g=this.recurrentConv(g,T),m=this.recurrentConv(m,E),b=this.recurrentConv(b,R);const _=this.recurrentActivation.apply(za(l,f)),A=this.recurrentActivation.apply(za(c,g)),F=za(Ga(A,i),Ga(_,this.activation.apply(za(h,m)))),D=Ga(this.recurrentActivation.apply(za(d,b)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=JC(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Nl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?$v(s,n,this.dataFormat):s}recurrentConv(e,t){const n=1;return Nl(e,t,n,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}QC.className="ConvLSTM2DCell",so(QC);class eS extends ZC{constructor(e){const t=new QC(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}eS.className="ConvLSTM2D",so(eS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class tS extends yw{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Ci((()=>{this.invokeCallHook(e,t);const n=iw(e);if(0<this.rate&&this.rate<1){const e=null!=t["training"]&&t["training"],r=this.getNoiseShape(n),s=_v((()=>Ev(n,this.rate,r,this.seed)),(()=>n),e);return s}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}tS.className="Dropout",so(tS);class nS extends tS{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}nS.className="SpatialDropout1D",so(nS);class rS extends yw{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Rx(this.units,"units"),this.activation=sC(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=nw(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=nw(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=jw(e.kernelConstraint),this.biasConstraint=jw(e.biasConstraint),this.kernelRegularizer=hC(e.kernelRegularizer),this.biasRegularizer=hC(e.biasRegularizer),this.activityRegularizer=hC(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=aw(e);const t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=aw(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Ci((()=>{this.invokeCallHook(e,t);const n=iw(e),r=Fx(this.activation.getClassName());let s;return null!=r?s=kv(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=kv(n,this.kernel.read()),null!=this.bias&&(s=$v(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:nC(this.activation),useBias:this.useBias,kernelInitializer:tw(this.kernelInitializer),biasInitializer:tw(this.biasInitializer),kernelRegularizer:lC(this.kernelRegularizer),biasRegularizer:lC(this.biasRegularizer),activityRegularizer:lC(this.activityRegularizer),kernelConstraint:Gw(this.kernelConstraint),biasConstraint:Gw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}rS.className="Dense",so(rS);class sS extends yw{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=aw(e);for(const t of e.slice(1))if(null==t)throw new lx(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],rv(e,1)]}call(e,t){return Ci((()=>{this.invokeCallHook(e,t);let n=iw(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=cd(n,e)}return fv(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e["dataFormat"]=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}sS.className="Flatten",so(sS);class iS extends yw{constructor(e){super(e),this.supportsMasking=!0,this.activation=sC(e.activation)}call(e,t){return Ci((()=>{this.invokeCallHook(e,t);const n=iw(e);return this.activation.apply(n)}))}getConfig(){const e={activation:nC(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}iS.className="Activation",so(iS);class aS extends yw{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Ci((()=>(e=iw(e),dv(e,this.n))))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}aS.className="RepeatVector",so(aS);class oS extends yw{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,i=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==i)throw new lx("Can only specifiy one unknown dimension.");i=o}else s*=e}const a=rv(e);if(null!==i){if(0===s||a%s!==0)throw new lx(n);r[i]=a/s}else if(a!==s)throw new lx(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Ci((()=>{this.invokeCallHook(e,t);const n=iw(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Zu(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}oS.className="Reshape",so(oS);class uS extends yw{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=av(1,e.dims.length+1);if(!k(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new pw({ndim:this.dims.length+1})]}computeOutputShape(e){e=aw(e);const t=e.slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return cd(iw(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}uS.className="Permute",so(uS);class lS extends yw{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=iw(e),r=-1;return Eu(Qc(n,this.maskValue),r)}call(e,t){return Ci((()=>{this.invokeCallHook(e,t);const n=iw(e),r=-1,s=!0,i=Eu(Qc(n,this.maskValue),r,s),a=Ga(n,Aa(i,n.dtype));return a}))}}lS.className="Masking",so(lS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class cS extends yw{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(bx(e.inputLength))}this.inputDim=e.inputDim,Rx(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Rx(this.outputDim,"outputDim"),this.embeddingsInitializer=nw(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=hC(e.embeddingsRegularizer),this.activityRegularizer=hC(e.activityRegularizer),this.embeddingsConstraint=jw(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Ci((()=>this.maskZero?(e=iw(e),Qc(e,Ya(e))):null))}computeOutputShape(e){if(e=aw(e),null==this.inputLength)return[...e,this.outputDim];const t=bx(this.inputLength);if(t.length!==e.length-1)throw new lx(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],i=e[r+1];if(null!=s&&null!=i&&s!==i)throw new lx(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Ci((()=>{this.invokeCallHook(e,t);let n=iw(e);"int32"!==n.dtype&&(n=cv(n,"int32"));const r=Iv(this.embeddings.read(),Zu(n,[n.size]));return Zu(r,aw(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:tw(this.embeddingsInitializer),embeddingsRegularizer:lC(this.embeddingsRegularizer),activityRegularizer:lC(this.activityRegularizer),embeddingsConstraint:Gw(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}cS.className="Embedding",so(cS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class hS extends yw{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new cx}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],i=t[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new lx("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[aw(e)]),e.length<2)throw new lx(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=$x(t),t.length>1)throw new lx(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===$x(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Ci((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=iv(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=hv(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const i of e){const e=i.rank;if(null==e){const e=i.shape,r=e[0],s=e.slice(1).concat([r]);let a=Zu(i,[r].concat(rv(e.slice(1))));a=cd(a,[1,0]),a=Zu(a,s),t.push(a),n=!0}else if(e>1){const r=av(1,e).concat([0]);t.push(cd(i,r)),n=!0}else t.push(i)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e.length,n=e[t-1],s=[n].concat(e.slice(0,e.length-1));r=Zu(cd(Zu(r,[-1,n]),[1,0]),s)}else if(s>1){const e=[s-1].concat(av(0,s-1));r=cd(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=$x(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Ci((()=>{if(null==t)return null;if(!Array.isArray(t))throw new lx("`mask` should be an Array");if(!Array.isArray(e))throw new lx("`inputs` should be an Array");if(t.length!==e.length)throw new lx(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:Ql(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=Oc(n,t[e]);return n}))}}class dS extends hS{constructor(e){super(e)}mergeFunction(e){return Ci((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=za(t,e[n]);return t}))}}dS.className="Add",so(dS);class pS extends hS{constructor(e){super(e)}mergeFunction(e){return Ci((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ga(t,e[n]);return t}))}}pS.className="Multiply",so(pS);class fS extends hS{constructor(e){super(e)}mergeFunction(e){return Ci((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=za(t,e[n]);return Ga(1/e.length,t)}))}}fS.className="Average",so(fS);class gS extends hS{constructor(e){super(e)}mergeFunction(e){return Ci((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=wo(t,e[n]);return t}))}}gS.className="Maximum",so(gS);class mS extends hS{constructor(e){super(e)}mergeFunction(e){return Ci((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Kc(t,e[n]);return t}))}}mS.className="Minimum",so(mS);class bS extends hS{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new lx("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(k(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new lx("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Ci((()=>yv(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new lx("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new lx("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new lx("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new lx(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Ci((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let i=0;i<e.length;++i)null==t[i]?r.push(Aa(ih(e[i]),"bool")):t[i].rank<e[i].rank?r.push(Ql(t[i],-1)):r.push(t[i]);const s=bl(r,this.axis);return Nu(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function yS(e,t){while(e<0)e+=t;return e}function xS(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new cx("batchDot is not implemented for tensors of 4D or higher rank yet");if(y(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),y(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new cx("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return Ci((()=>{let n,a;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Zu(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Zu(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)a=i[0]===i[1]?wc(Ga(e,t),i[0]):wc(Ga(cd(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;a=Lc(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);a=Hh(a,t)}return 1===a.shape.length&&(a=Ql(a,1)),a}))}bS.className="Concatenate",so(bS);class vS extends hS{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){y(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new cx("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new lx(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new lx(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>yS(t,e[n].shape.length))):[yS(this.axes,n.shape.length),yS(this.axes,r.shape.length)],this.normalize&&(n=ak(n,t[0]),r=ak(r,t[1])),xS(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[yS(this.axes,e.length),yS(this.axes,t.length)],n}computeOutputShape(e){y(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new cx("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}vS.className="Dot",so(vS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class wS extends yw{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Ci((()=>{this.invokeCallHook(e,t);const n=iw(e),r=()=>za(wv(n.shape,0,this.stddev),n),s=_v(r,(()=>n),t["training"]||!1);return s}))}}wS.className="GaussianNoise",so(wS);class kS extends yw{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ci((()=>{this.invokeCallHook(e,t);const n=iw(e);if(this.rate>0&&this.rate<1){const e=()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Ga(n,wv(n.shape,1,e))};return _v(e,(()=>n),t["training"]||!1)}return n}))}}kS.className="GaussianDropout",so(kS);class IS extends yw{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||iw(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ci((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=iw(e),r=1.6732632423543772,s=1.0507009873554805,i=-r*s;let a=hc(mh(n),this.rate);a=cv(a,"float32");const o=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-o*i*this.rate,l=za(Ga(t,a),Ga(za(a,-1),i));return za(Ga(l,o),u)};return _v(r,(()=>iw(e)),t["training"]||!1)}return e}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function CS(e,t,n,r,s,i=.001){let a;if(2===e.rank)a=ol(e,t,n,r,s,i);else if(3===e.rank)a=ll(e,t,n,r,s,i);else{if(4!==e.rank)throw new cx(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=hl(e,t,n,r,s,i)}return a}function SS(e,t,n,r,s=.001){return Ci((()=>{const i=Xc(e,r),a=i.mean,o=i.variance,u=CS(e,a,o,n,t,s);return[u,a,o]}))}function $S(e,t,n,r,s=.001){return Ci((()=>{const i=Xc(e,r),a=i.mean,o=i.variance,u=[];for(const t of av(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Zu(a,u),c=Zu(o,u),h=null==t?null:Zu(t,u),d=null==n?null:Zu(n,u),p=CS(e,l,c,d,h,s);return[p,a,o]}))}function NS(e,t,n,r,s=.001){return k(r.slice().sort(),av(0,e.rank-1))?SS(e,t,n,r,s):$S(e,t,n,r,s)}IS.className="AlphaDropout",so(IS);class TS extends yw{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=nw(e.betaInitializer||"zeros"),this.gammaInitializer=nw(e.gammaInitializer||"ones"),this.movingMeanInitializer=nw(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=nw(e.movingVarianceInitializer||"ones"),this.betaConstraint=jw(e.betaConstraint),this.gammaConstraint=jw(e.gammaConstraint),this.betaRegularizer=hC(e.betaRegularizer),this.gammaRegularizer=hC(e.gammaRegularizer)}build(e){e=aw(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new lx(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new pw({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Ci((()=>{const n=null!=t["training"]&&t["training"],r=iw(e),s=r.shape,i=s.length,a=av(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const u=px(1,i);u[o]=s[o];const l=a.slice();l.sort();const c=!k(l,av(0,i).slice(0,i-1)),h=()=>{if(c){const e=Zu(this.movingMean.read(),u),t=Zu(this.movingVariance.read(),u),n=this.center?Zu(this.beta.read(),u):null,s=this.scale?Zu(this.gamma.read(),u):null;return CS(r,e,t,n,s,this.epsilon)}return CS(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return h();const[d,p,f]=NS(r,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(e,t,n)=>{Ci((()=>{const r=1-n,s=e.read(),i=Ga(po(s,t),r);e.write(po(s,i))}))},m=()=>{g(this.movingMean,p,this.momentum),g(this.movingVariance,f,this.momentum)};return m(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:tw(this.betaInitializer),gammaInitializer:tw(this.gammaInitializer),movingMeanInitializer:tw(this.movingMeanInitializer),movingVarianceInitializer:tw(this.movingVarianceInitializer),betaRegularizer:lC(this.betaRegularizer),gammaRegularizer:lC(this.gammaRegularizer),betaConstraint:Gw(this.betaConstraint),gammaConstraint:Gw(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}TS.className="BatchNormalization",so(TS);class ES extends yw{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=nw(e.betaInitializer||"zeros"),this.gammaInitializer=nw(e.gammaInitializer||"ones"),this.betaRegularizer=hC(e.betaRegularizer),this.gammaRegularizer=hC(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=aw(e);const t=e.length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(const s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==$x(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=iw(e),r=n.shape,s=r.length;return Ci((()=>{const e=!0;let{mean:t,variance:i}=Xc(n,this.axis,e);const a=px(1,s);for(const n of this.axis)a[n]=r[n];const o=e=>null!=e&&e.shape.length!==s?Zu(e,a):e;let u=this.scale?o(this.gamma.read()):null,l=this.center?o(this.beta.read()):null;const c=[],h=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),h.push(1)):(c.push(1),h.push(r[n]));return t=tc(t,c),i=tc(i,c),null!=u&&(u=tc(u,h)),null!=l&&(l=tc(l,h)),CS(n,t,i,l,u,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:tw(this.betaInitializer),gammaInitializer:tw(this.gammaInitializer),betaRegularizer:lC(this.betaRegularizer),gammaRegularizer:lC(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}function RS(e,t,n){return Ci((()=>{if(4!==e.rank)throw new lx(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new lx("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=lv()),"channelsLast"!==n&&"channelsFirst"!==n)throw new lx(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],oh(e,r)}))}ES.className="LayerNormalization",so(ES);class _S extends yw{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?lv():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new lx(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new lx(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new lx(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new pw({ndim:4})]}computeOutputShape(e){let t,n;return e=aw(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Ci((()=>RS(iw(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function AS(e,t,n,r,s,i){return Ci((()=>{let a;Gx(s),Kx(i),jx(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s=lv()),null==i&&(i="max"),e=wC(e,s);const o="same"===r?"same":"valid";return a="max"===i?Pc(e,t,n,o):el(e,t,n,o),"channelsFirst"===s&&(a=cd(a,[0,3,1,2])),a}))}function FS(e,t,n,r,s,i){return Ci((()=>{let a;Gx(s),Kx(i),jx(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s=lv()),null==i&&(i="max"),e=kC(e,s);const o="same"===r?"same":"valid";return a="max"===i?Wc(e,t,n,o):nl(e,t,n,o),"channelsFirst"===s&&(a=cd(a,[0,4,1,2,3])),a}))}_S.className="ZeroPadding2D",so(_S);class DS extends yw{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new lx(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Rx(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new lx(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Rx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,jx(this.padding),this.inputSpec=[new pw({ndim:3})]}computeOutputShape(e){e=aw(e);const t=xC(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Ci((()=>{this.invokeCallHook(e,t),e=hv(iw(e),2);const n=this.poolingFunction(iw(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Hh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class OS extends DS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gx(s),jx(r),AS(e,t,n,r,s,"max")}}OS.className="MaxPooling1D",so(OS);class MS extends DS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gx(s),jx(r),AS(e,t,n,r,s,"avg")}}MS.className="AveragePooling1D",so(MS);class LS extends yw{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new lx(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Rx(this.poolSize,"poolSize"),Rx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gx(this.dataFormat),jx(this.padding),this.inputSpec=[new pw({ndim:4})]}computeOutputShape(e){e=aw(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=xC(t,this.poolSize[0],this.padding,this.strides[0]),n=xC(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Ci((()=>(this.invokeCallHook(e,t),this.poolingFunction(iw(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class zS extends LS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gx(s),jx(r),AS(e,t,n,r,s,"max")}}zS.className="MaxPooling2D",so(zS);class PS extends LS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gx(s),jx(r),AS(e,t,n,r,s,"avg")}}PS.className="AveragePooling2D",so(PS);class BS extends yw{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new lx(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Rx(this.poolSize,"poolSize"),Rx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gx(this.dataFormat),jx(this.padding),this.inputSpec=[new pw({ndim:5})]}computeOutputShape(e){e=aw(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=xC(t,this.poolSize[0],this.padding,this.strides[0]),n=xC(n,this.poolSize[1],this.padding,this.strides[1]),r=xC(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Ci((()=>(this.invokeCallHook(e,t),this.poolingFunction(iw(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class WS extends BS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gx(s),jx(r),FS(e,t,n,r,s,"max")}}WS.className="MaxPooling3D",so(WS);class US extends BS{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gx(s),jx(r),FS(e,t,n,r,s,"avg")}}US.className="AveragePooling3D",so(US);class VS extends yw{constructor(e){super(e),this.inputSpec=[new pw({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new cx}}class GS extends VS{constructor(e){super(e||{})}call(e,t){return Ci((()=>{const t=iw(e);return Vc(t,1)}))}}GS.className="GlobalAveragePooling1D",so(GS);class HS extends VS{constructor(e){super(e||{})}call(e,t){return Ci((()=>{const t=iw(e);return xc(t,1)}))}}HS.className="GlobalMaxPooling1D",so(HS);class jS extends yw{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gx(this.dataFormat),this.inputSpec=[new pw({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new cx}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class KS extends jS{call(e,t){return Ci((()=>{const t=iw(e);return"channelsLast"===this.dataFormat?Vc(t,[1,2]):Vc(t,[2,3])}))}}KS.className="GlobalAveragePooling2D",so(KS);class qS extends jS{call(e,t){return Ci((()=>{const t=iw(e);return"channelsLast"===this.dataFormat?xc(t,[1,2]):xc(t,[2,3])}))}}qS.className="GlobalMaxPooling2D",so(qS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class XS extends yw{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=t["layer"],s=ik(r,n);delete t["layer"];const i={layer:s};return Object.assign(i,t),new e(i)}}class YS extends XS{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=aw(e),e.length<3)throw new lx(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=aw(e);const t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Ci((()=>{e=iw(e);const n=(e,n)=>{const r=iw(this.layer.call(e,t));return[r,[]]},r=BC(n,e,[],!1,null,null,!1,!0),s=r[1];return s}))}}function JS(e){Tx(Ux,"BidirectionalMergeMode",e)}YS.className="TimeDistributed",so(YS);const ZS="concat";class QS extends XS{constructor(e){super(e);const t=e.layer.getConfig(),n={};n["className"]=e.layer.getClassName(),n["config"]=t,this.forwardLayer=ik(n),t["goBackwards"]=!0!==t["goBackwards"];const r={};if(r["className"]=e.layer.getClassName(),r["config"]=t,this.backwardLayer=ik(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?ZS:e.mergeMode,JS(this.mergeMode),e.weights)throw new cx("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):mx(n)}apply(e,t){let n=null==t?null:t["initialState"],r=null==t?null:t["constants"];null==t&&(t={});const s=PC(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const i=[],a=[];if(null!=n){const e=n.length;if(e%2>0)throw new lx("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t["initialState"]=n,i.push(...n);const r=n.map((e=>new pw({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),a.push(...r)}if(null!=r)throw new cx("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof fw;for(const u of i)if(u instanceof fw!==o)throw new lx("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Ci((()=>{const n=t["initialState"];let r,s,i,a;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=wh(s,1)),"concat"===this.mergeMode?a=yv([r,s]):"sum"===this.mergeMode?a=za(r,s):"ave"===this.mergeMode?a=Ga(.5,za(r,s)):"mul"===this.mergeMode?a=Ga(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Yx(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Yx(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states,t=e.map((e=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=ik(t["layer"]);if(delete t["layer"],null!=t["numConstants"])throw new cx("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r["layer"]=n,new e(r)}}QS.className="Bidirectional",so(QS);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class e$ extends yw{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ci((()=>(e=iw(e),"float32"!==e.dtype&&(e=cv(e,"float32")),za(Ga(e,this.scale),this.offset))))}}e$.className="Rescaling",so(e$);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const{resizeBilinear:t$,cropAndResize:n$}=Zp;class r$ extends yw{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,i,a,o){return Ci((()=>{let u,l=!1;const c=t/i,h=n/a,d=(r+t)/i,p=(s+n)/a,f=[c,h,d,p],g=[];3===e.rank?(l=!0,u=Kh([e])):u=e;for(let e=0;e<u.shape[0];e++)g.push(f);const m=bi(g,[g.length,4]),b=bh(0,g.length,1,"int32"),y=[r,s],x=n$(u,m,b,y,"nearest");return cv(l?iw(td(x)):x,o)}))}upsize(e,t,n,r){return Ci((()=>{const s=t$(e,[t,n]);return cv(s,r)}))}call(e,t){return Ci((()=>{const t=iw(e),n=t.dtype,r=t.shape,s=r[r.length-3],i=r[r.length-2];let a=0;s!==this.height&&(a=Math.floor((s-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),a>=0&&o>=0?this.centerCrop(t,a,o,this.height,this.width,s,i,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=aw(e);const t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function s$(e,t,n,r){let s=iw(e);if("int32"!==s.dtype&&(s=cv(s,"int32")),"int"===t)return s;const i=s.shape;if(0===s.rank&&(s=Ql(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=Ql(s,-1)),s.rank>2)throw new lx(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${s.rank}.`);const a=["multiHot","oneHot"].includes(t),o=s;let u;if(u=Wl(o,"undefined"!==typeof r&&"count"===t?r:[],n,a),"tfIdf"!==t)return u;if(r)return Ga(u,r);throw new lx("When outputMode is 'tfIdf', weights must be provided.")}r$.className="CenterCrop",so(r$);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class i$ extends yw{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=aw(e),null==e?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Ci((()=>{let n;if(e=iw(e),"int32"!==e.dtype&&(e=cv(e,"int32")),"undefined"!==typeof t["countWeights"]){if("count"!==this.outputMode)throw new lx(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t["countWeights"]}`);n=iw(t["countWeights"])}const r=xc(e),s=Hc(e),i=lc(this.numTokens,r).bufferSync().get(0),a=hc(s,0).bufferSync().get(0);if(!i||!a)throw new lx(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return s$(e,this.outputMode,this.numTokens,n)}))}}i$.className="CategoryEncoding",so(i$);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const a$=["bilinear","nearest"],o$=new Set(a$);class u$ extends yw{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!o$.has(e.interpolation))throw new lx(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=aw(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ci((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Zp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Zp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...o$]} are supported`)}))}}u$.className="Resizing",so(u$);
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class l${constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}l$.className="RandomSeed";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class c$ extends yw{constructor(e){super(e),this.randomGenerator=new l$(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}c$.className="BaseRandomLayer";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const h$=["bilinear","nearest"],d$=new Set(h$);class p$ extends c${constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new lx(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new lx(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new lx(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!d$.has(n))throw new lx(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=aw(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return Ci((()=>{const t=iw(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=mh([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return Zp.resizeBilinear(e,s);case"nearest":return Zp.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...d$]} are supported`)}}))}}p$.className="RandomWidth",so(p$);const f$=ie();
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var g$,m$;f$.registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e["DT_INVALID"]=0]="DT_INVALID",e[e["DT_FLOAT"]=1]="DT_FLOAT",e[e["DT_DOUBLE"]=2]="DT_DOUBLE",e[e["DT_INT32"]=3]="DT_INT32",e[e["DT_UINT8"]=4]="DT_UINT8",e[e["DT_INT16"]=5]="DT_INT16",e[e["DT_INT8"]=6]="DT_INT8",e[e["DT_STRING"]=7]="DT_STRING",e[e["DT_COMPLEX64"]=8]="DT_COMPLEX64",e[e["DT_INT64"]=9]="DT_INT64",e[e["DT_BOOL"]=10]="DT_BOOL",e[e["DT_QINT8"]=11]="DT_QINT8",e[e["DT_QUINT8"]=12]="DT_QUINT8",e[e["DT_QINT32"]=13]="DT_QINT32",e[e["DT_BFLOAT16"]=14]="DT_BFLOAT16",e[e["DT_QINT16"]=15]="DT_QINT16",e[e["DT_QUINT16"]=16]="DT_QUINT16",e[e["DT_UINT16"]=17]="DT_UINT16",e[e["DT_COMPLEX128"]=18]="DT_COMPLEX128",e[e["DT_HALF"]=19]="DT_HALF",e[e["DT_RESOURCE"]=20]="DT_RESOURCE",e[e["DT_VARIANT"]=21]="DT_VARIANT",e[e["DT_UINT32"]=22]="DT_UINT32",e[e["DT_UINT64"]=23]="DT_UINT64",e[e["DT_FLOAT_REF"]=101]="DT_FLOAT_REF",e[e["DT_DOUBLE_REF"]=102]="DT_DOUBLE_REF",e[e["DT_INT32_REF"]=103]="DT_INT32_REF",e[e["DT_UINT8_REF"]=104]="DT_UINT8_REF",e[e["DT_INT16_REF"]=105]="DT_INT16_REF",e[e["DT_INT8_REF"]=106]="DT_INT8_REF",e[e["DT_STRING_REF"]=107]="DT_STRING_REF",e[e["DT_COMPLEX64_REF"]=108]="DT_COMPLEX64_REF",e[e["DT_INT64_REF"]=109]="DT_INT64_REF",e[e["DT_BOOL_REF"]=110]="DT_BOOL_REF",e[e["DT_QINT8_REF"]=111]="DT_QINT8_REF",e[e["DT_QUINT8_REF"]=112]="DT_QUINT8_REF",e[e["DT_QINT32_REF"]=113]="DT_QINT32_REF",e[e["DT_BFLOAT16_REF"]=114]="DT_BFLOAT16_REF",e[e["DT_QINT16_REF"]=115]="DT_QINT16_REF",e[e["DT_QUINT16_REF"]=116]="DT_QUINT16_REF",e[e["DT_UINT16_REF"]=117]="DT_UINT16_REF",e[e["DT_COMPLEX128_REF"]=118]="DT_COMPLEX128_REF",e[e["DT_HALF_REF"]=119]="DT_HALF_REF",e[e["DT_RESOURCE_REF"]=120]="DT_RESOURCE_REF",e[e["DT_VARIANT_REF"]=121]="DT_VARIANT_REF",e[e["DT_UINT32_REF"]=122]="DT_UINT32_REF",e[e["DT_UINT64_REF"]=123]="DT_UINT64_REF"}(g$||(g$={})),function(e){let t;(function(e){e[e["LEGACY"]=0]="LEGACY",e[e["V1"]=1]="V1",e[e["V2"]=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(m$||(m$={}));Error;new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function b$(e,t){return y$(e,t)}function y$(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(k$(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const a=e[i],o=y$(a,t,n,r);s[i]=o}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function x$(e,t=w$){return v$(e,t)}function v$(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(k$(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=e.map((e=>e[i])),a=v$(r,t,n);s[i]=a}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function w$(e){return null===e?null:k$(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function k$(e){let t=!1;if(ie().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof _s)&&!(e instanceof Promise)&&!t)}function I$(e){return null==e||C$(e)||Array.isArray(e)||"object"===typeof e&&e instanceof _s||us(e)}function C$(e){return null===e||"object"!==typeof e&&"function"!==typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function S$(e){return b$(e,$$)}function $$(e){return e instanceof _s?{value:e.clone(),recurse:!1}:k$(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class N${constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){while(e<0)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class T$ extends N${constructor(){super(T$.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function E$(e){return new F$(e)}function R$(e){return new D$(e)}function _$(e,t){return new H$(e,t)}T$.INITIAL_CAPACITY=32;class A${async toArray(){const e=[];let t=await this.next();while(!t.done)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();while(!n.done)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();while(!e.done)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);while(!t.done&&n)t=await this.next(),n=e(t.value)}handleErrors(e){return new W$(this,e)}filter(e){return new P$(this,e)}map(e){return new B$(this,e)}mapAsync(e){return new U$(this,e)}serialMapAsync(e){return new U$(this,e).serial()}flatmap(e){return new G$(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new z$(this,e,t)}columnMajorBatch(e,t=!0,n=w$){const r=this.rowMajorBatch(e,t);return r.map((e=>x$(e,n)))}concatenate(e,t){return new H$(E$([this,e]),t)}take(e){return e<0||null==e?this:new L$(this,e)}skip(e){return e<0||null==e?this:new M$(this,e)}prefetch(e){return new K$(this,e)}shuffle(e,t){return new q$(this,e,t)}serial(){return new O$(this)}}class F$ extends A${constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:S$(e),done:!1}}}class D$ extends A${constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class O$ extends A${constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class M$ extends A${constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(this.count++<this.maxCount){const e=await this.upstream.next();if(e.done)return e;Si(e.value)}return this.upstream.next()}}class L$ extends A${constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class z$ extends A${constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];while(e.length<this.batchSize){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class P$ extends A${constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(1){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Si(e.value)}}}class B$ extends A${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=js(e.value),n=this.transform(e.value),r=js(n);for(const s of t)Hs(s,r)||s.dispose();return{value:n,done:!1}}}class W$ extends A${constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(1)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class U$ extends A${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=js(e.value),n=await this.transform(e.value),r=js(n);for(const s of t)Hs(s,r)||s.dispose();return{value:n,done:!1}}}class V$ extends A${constructor(){super(),this.outputQueue=new T$,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(0===this.outputQueue.length())if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class G$ extends V${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=js(e.value),n=this.transform(e.value),r=js(n);this.outputQueue.pushAll(n);for(const s of t)Hs(s,r)||s.dispose();return!0}}class H$ extends A${constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){const e="TODO: fill in upstream of chained summaries";return`${e} -> Chained`}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var j$;(function(e){e[e["FAIL"]=0]="FAIL",e[e["SHORTEST"]=1]="SHORTEST",e[e["LONGEST"]=2]="LONGEST"})(j$||(j$={}));class K$ extends A${constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new N$(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){while(!this.buffer.isFull()){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class q$ extends K${constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ch.alea(n||is().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){this.upstreamExhausted||this.refill();while(!this.buffer.isEmpty()){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class X${constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return y(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Y$((async()=>(await n.iterator()).columnMajorBatch(e,t,J$)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Y$((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Y$((async()=>(await t.iterator()).filter((t=>Ci((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Y$((async()=>(await t.iterator()).map((t=>Ci((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Y$((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Y$((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Y$((async()=>{const n=R$((async()=>({value:await t.iterator(),done:!1})));return _$(n.take(e))}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Y$((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=ch.alea(t||is().toString());return Y$((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Y$((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Y$(e,t=null){return new class extends X${constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function J$(e){if(null===e)return null;const t=e[0];if(I$(t)){const t=Z$(e);return{value:t,recurse:!1}}return{value:null,recurse:!0}}function Z$(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof _s?Kh(e):bi(e)}X$.MAX_BUFFER_SIZE=1e4;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Q$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&y("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const eN=fg;class tN extends h{nextDataId(){return tN.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new c(this,ki())}write(e,t,n){this.firstUse&&(this.firstUse=!1,ie().get("IS_NODE")&&$r("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&L(n[0])){const s=n.map((e=>as(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){const t=this.data.get(e);return t.refCount}return 0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Af(e,t)}return j(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>os(e)));return Ra(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ra(e.shape,e.dtype,t)}makeOutput(e,t,n){return ki().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=is();e();const n=is()-t;return{kernelMs:n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Q$([e],"where");const t=this.readSync(e.dataId);return eN(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}tN.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nN(e){return(t,n,r)=>{const s=_(n,t.length);for(let i=0;i<t.length;++i)s[i]=e(t[i],r);return s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rN(e,t,n){const r=nN(t);return sN(e,r,n)}function sN(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;Q$(a,e);const o=i,u=o.data.get(a.dataId).values;let l;if("string"===a.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=dg(u)}else l=u;const c=n||a.dtype,h=t(l,c,s);return o.makeTensorInfo(a.shape,c,h)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ni("cpu",(()=>new tN),1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const iN=rN(ht,(e=>e>=0?e:Math.exp(e)-1)),aN={kernelName:ht,backendName:"cpu",kernelFunc:iN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oN(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const uN={kernelName:Tt,backendName:"cpu",kernelFunc:oN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r;Q$([s],"leakyRelu");const a=w(s.shape),o=n.data.get(s.dataId).values,u=R("float32",a);for(let l=0;l<o.length;l++)u[l]=o[l]<0?i*o[l]:o[l];return n.makeTensorInfo(s.shape,"float32",u)}const cN={kernelName:Dt,backendName:"cpu",kernelFunc:lN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hN(e){return(t,n,r,s,i)=>{const a=xo(t,n),o=a.length,u=V(a),l=w(a),c=R(i,l),h=t.length,d=n.length,p=V(t),f=V(n),g=bo(t,a),m=bo(n,a);if(g.length+m.length===0)for(let b=0;b<c.length;++b)c[b]=e(r[b%r.length],s[b%s.length]);else for(let b=0;b<c.length;++b){const t=Z(b,o,u),n=t.slice(-h);g.forEach((e=>n[e]=0));const i=J(n,h,p),a=t.slice(-d);m.forEach((e=>a[e]=0));const l=J(a,d,f);c[b]=e(r[i],s[l])}return[c,a]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const dN=hN(((e,t)=>e<0?t*e:e));function pN(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Q$([r,s],"prelu");const i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[o,u]=dN(r.shape,s.shape,i,a,"float32");return n.makeTensorInfo(u,"float32",o)}const fN={kernelName:bn,backendName:"cpu",kernelFunc:pN},gN=rN(Sn,(e=>Math.max(0,e))),mN={kernelName:Sn,backendName:"cpu",kernelFunc:gN},bN=rN(_n,(e=>Math.min(Math.max(0,e),6))),yN={kernelName:_n,backendName:"cpu",kernelFunc:bN},xN=nN((e=>1/(1+Math.exp(-e)))),vN=rN(Gn,(e=>1/(1+Math.exp(-e)))),wN={kernelName:Gn,backendName:"cpu",kernelFunc:vN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kN(e,t,n,r,s){if("linear"===n)return oN({inputs:{x:t},backend:e});if("relu"===n)return gN({inputs:{x:t},backend:e});if("elu"===n)return iN({inputs:{x:t},backend:e});if("relu6"===n)return bN({inputs:{x:t},backend:e});if("prelu"===n)return pN({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return lN({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return vN({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IN(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),u=n.data.get(o.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}const CN={kernelName:Pe,backendName:"cpu",kernelFunc:IN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SN(e,t,n="float32"){if("complex64"===n){const n=SN(e,t,"float32"),r=SN(e,t,"float32");return IN({inputs:{real:n,imag:r},backend:e})}const r=q(w(t),n);return e.makeTensorInfo(t,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $N(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const NN={kernelName:In,backendName:"cpu",kernelFunc:$N};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TN(e,t,n,r){if("int32"===r){const n=Int32Array.from(e);return[t,"int32",n]}if("bool"===r){const r=ss([0],n),[s,i]=hN(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function EN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return oN({inputs:{x:s},backend:n});const e=SN(n,s.shape,s.dtype),t=EN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=IN({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=$N({inputs:{input:s},backend:n}),t=EN({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!D(s.dtype,i)){const e=oN({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const a=n.data.get(s.dataId).values,[o,u,l]=TN(a,s.shape,s.dtype,i);return n.makeTensorInfo(o,u,l)}const RN={kernelName:Me,backendName:"cpu",kernelFunc:EN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _N(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:a}=n,o=s;Q$([i,a],e);const u=o.data.get(i.dataId).values,l=o.data.get(a.dataId).values,c="string"===i.dtype?dg(u):u,h="string"===i.dtype?dg(l):l,d=r||i.dtype,[p,f]=t(i.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a:i,b:a}=e,o=s;if("complex64"===i.dtype||"complex64"===a.dtype){const e=EN({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=EN({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,y]=n(i.shape,a.shape,u,l,f,g),x=o.makeTensorInfo(y,"float32",m),v=o.makeTensorInfo(y,"float32",b),w=IN({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,s=r||i.dtype,[u,l]=t(i.shape,a.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function AN(e){return(t,n,r,s,i,a)=>{const o=xo(t,n),u=w(o),l=o.length,c=V(o),h=R("float32",u),d=R("float32",u),p=bo(t,o),f=bo(n,o),g=Af(r,s),m=Af(i,a),b=t.length,y=V(t),x=n.length,v=V(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%g.length,n=w%m.length,r=e(g[2*t],g[2*t+1],m[2*n],m[2*n+1]);h[w]=r.real,d[w]=r.imag}else for(let w=0;w<h.length;w++){const t=Z(w,l,c),n=t.slice(-b);p.forEach((e=>n[e]=0));const r=J(n,b,y),s=t.slice(-x);f.forEach((e=>s[e]=0));const i=J(s,x,v),a=e(g[2*r],g[2*r+1],m[2*i],m[2*i+1]);h[w]=a.real,d[w]=a.imag}return[h,d,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const FN=hN(((e,t)=>e+t)),DN=AN(((e,t,n,r)=>({real:e+n,imag:t+r}))),ON=_N(ge,FN,DN),MN={kernelName:ge,backendName:"cpu",kernelFunc:ON};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=w(s.shape),o=N(i,a),u=w(o);y(a===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const zN={kernelName:$n,backendName:"cpu",kernelFunc:LN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PN(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;Q$([s,i],"matMul");const u=s.shape.length,l=i.shape.length,c=a?s.shape[u-2]:s.shape[u-1],h=o?i.shape[l-1]:i.shape[l-2],d=a?s.shape[u-1]:s.shape[u-2],p=o?i.shape[l-2]:i.shape[l-1],f=s.shape.slice(0,-2),g=i.shape.slice(0,-2),m=w(f),b=w(g),x=xo(s.shape.slice(0,-2),i.shape.slice(0,-2)),v=x.concat([d,p]);y(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const k=a?[m,c,d]:[m,d,c],I=o?[b,p,h]:[b,h,p],C=LN({inputs:{x:s},backend:n,attrs:{shape:k}}),S=LN({inputs:{x:i},backend:n,attrs:{shape:I}}),$=a?C.shape[1]:C.shape[2],N=a?C.shape[2]:C.shape[1],T=o?S.shape[1]:S.shape[2],E=Math.max(m,b),R=n.data.get(C.dataId).values,_=n.data.get(S.dataId).values,A=V(C.shape),F=V(S.shape),[D,O,M]=a?[A[0],1,A[1]]:[A[0],A[1],1],[L,z,P]=o?[1,F[1],F[0]]:[F[1],1,F[0]],B=N*T,W=Ra([E,N,T],C.dtype),U=W.values,G=n.blockSize;for(let y=0;y<E;y++){const e=y%m,t=y%b;for(let n=0;n<N;n+=G){const r=Math.min(n+G,N);for(let s=0;s<T;s+=G){const i=Math.min(s+G,T);for(let a=0;a<$;a+=G){const o=Math.min(a+G,$);for(let u=n;u<r;u++)for(let n=s;n<i;n++){let r=0;for(let s=a;s<o;s++){const i=R[e*D+u*O+s*M],a=_[s*L+n*z+t*P];r+=i*a}U[y*B+(u*T+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(v,W.dtype,W.values)}const BN={kernelName:Re,backendName:"cpu",kernelFunc:PN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WN(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const g=[],m=PN({inputs:{a:s,b:i},attrs:{transposeA:u,transposeB:l},backend:n});d=m,a&&(p=ON({inputs:{a:d,b:a},backend:n}),g.push(d),d=p),c&&(f=kN(n,d,c,o,h),g.push(d),d=f);for(const b of g)n.disposeIntermediateTensorInfo(b);return d}const UN={kernelName:Ir,backendName:"cpu",kernelFunc:WN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VN(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const GN=e=>{const{x:t}=e.inputs,n=e.backend;Q$(t,"abs");let r=new Float32Array(w(t.shape));const s=n.data.get(t.dataId).values;return r=VN(s),n.makeOutput(r,t.shape,t.dtype)},HN={kernelName:de,backendName:"cpu",kernelFunc:GN},jN=rN(pe,(e=>Math.acos(e))),KN={kernelName:pe,backendName:"cpu",kernelFunc:jN},qN=rN(fe,(e=>Math.acosh(e))),XN={kernelName:fe,backendName:"cpu",kernelFunc:qN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YN(e){const{inputs:t,backend:n}=e,r=t;Q$(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),i=Ra(r[0].shape,r[0].dtype),a=i.values;for(let o=0;o<r.length;o++){const e=s[o];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}const JN={kernelName:me,backendName:"cpu",kernelFunc:YN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZN(e,t,n,r,s){const i=t.length,a=w(t),o=V(t),u=V(s),l=R(n,w(s));for(let c=0;c<a;++c){const t=Z(c,i,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];const s=J(n,i,u);l[s]=e[c]}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QN(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:i}=n;Q$(s,"transpose");const a=s.shape.length,o=new Array(a);for(let h=0;h<o.length;h++)o[h]=s.shape[i[h]];const u=r.data.get(s.dataId).values,l=ZN(u,s.shape,s.dtype,i,o),c=r.write(l,o,s.dtype);return{dataId:c,shape:o,dtype:s.dtype}}const eT={kernelName:gr,backendName:"cpu",kernelFunc:QN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;Q$(s,"all");const o=T(i,s.shape);let u=o;const l=Ec(u,s.shape.length);let c=s;null!=l&&(c=QN({inputs:{x:s},backend:n,attrs:{perm:l}}),u=_c(u.length,s.shape.length)),Tc("all",u,c.shape.length);const[h,d]=$c(c.shape,u),p=w(d),f=q(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const r=g[e+n];t=t&&r}f[b]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Nc(h,o),t=LN({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const nT={kernelName:be,backendName:"cpu",kernelFunc:tT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;Q$(s,"any");const o=T(i,s.shape);let u=o;const l=Ec(u,s.shape.length);let c=s;null!=l&&(c=QN({inputs:{x:s},backend:n,attrs:{perm:l}}),u=_c(u.length,s.shape.length)),Tc("any",u,c.shape.length);const[h,d]=$c(c.shape,u),p=w(d),f=q(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const r=g[e+n];t=t||r}f[b]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Nc(h,o),t=LN({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const sT={kernelName:ye,backendName:"cpu",kernelFunc:rT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;Q$(s,"argMax");let a=T(i,s.shape);const o=Ec(a,s.shape.length);let u=s;const l=[];null!=o&&(u=QN({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),a=_c(a.length,u.shape.length)),a=[a[0]],Tc("argMax",a,u.shape.length);const[c,h]=$c(u.shape,a),d=w(c),p=q(d,"int32"),f=w(h),g=n.data.get(u.dataId).values;for(let m=0;m<p.length;++m){const e=m*f;let t=g[e],n=0;for(let r=0;r<f;++r){const s=g[e+r];s>t&&(t=s,n=r)}p[m]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}const aT={kernelName:xe,backendName:"cpu",kernelFunc:iT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;Q$(s,"argMin");let a=T(i,s.shape);const o=Ec(a,s.shape.length);let u=s;const l=[];null!=o&&(u=QN({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),a=_c(a.length,u.shape.length)),a=[a[0]],Tc("argMin",a,u.shape.length);const[c,h]=$c(u.shape,a),d=w(c),p=q(d,"int32"),f=w(h),g=n.data.get(u.dataId).values;for(let m=0;m<p.length;++m){const e=m*f;let t=g[e],n=0;for(let r=0;r<f;++r){const s=g[e+r];s<t&&(t=s,n=r)}p[m]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}const uT={kernelName:ve,backendName:"cpu",kernelFunc:oT},lT=rN(we,(e=>Math.asin(e))),cT={kernelName:we,backendName:"cpu",kernelFunc:lT},hT=rN(ke,(e=>Math.asinh(e))),dT={kernelName:ke,backendName:"cpu",kernelFunc:hT},pT=rN(Ie,(e=>Math.atan(e))),fT={kernelName:Ie,backendName:"cpu",kernelFunc:pT},gT=hN(((e,t)=>Math.atan2(e,t))),mT=_N(Se,gT),bT={kernelName:Se,backendName:"cpu",kernelFunc:mT},yT=rN(Ce,(e=>Math.atanh(e))),xT={kernelName:Ce,backendName:"cpu",kernelFunc:yT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vT(e,t,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Ra(s.outShape,n),m=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let v=0;v<s.batchSize;++v){const t=v*b,n=v*r[0];for(let g=0;g<s.inChannels;++g)for(let b=0;b<s.outHeight;++b){const v=b*a-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=t+b*y;for(let t=0;t<s.outWidth;++t){const a=t*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let b=f,y=0,v=0;for(let t=w;t<k;t+=u){const s=n+t*r[1];for(let t=c;t<d;t+=l){const n=s+t*r[2],a=e[n+g];"max"===i&&a>b?b=a:"avg"===i&&(y+=a,v++)}if(isNaN(b))break}const C=I+t*x+g;m[C]="avg"===i?y/v:b}}}return g}function wT(e,t,n,r,s=!1,i=!1){const a=Ra(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=Ra(t,n,e);for(let m=0;m<r.batchSize;++m)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-p;let b=n;while(b<0)b+=l;const y=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;while(p<0)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=b;t<y;t+=l){const a=t-n;for(let n=p;n<x;n+=c){const o=n-h,u=g.get(m,t,n,e);u>v&&(v=u,w=s?i?((m*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:a*d+o)}}a.set(w,m,t,o,e)}}return a}function kT(e,t,n,r,s,i){const a=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,b=s.padInfo.left,y="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ra(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],C=s.outShape[4];for(let S=0;S<s.batchSize;++S){const t=S*w,n=S*r[0];for(let x=0;x<s.inChannels;++x)for(let w=0;w<s.outDepth;++w){const S=w*a-g;let $=S;while($<0)$+=l;const N=Math.min(s.inDepth,d+S),T=t+w*k;for(let t=0;t<s.outHeight;++t){const a=t*o-m;let d=a;while(d<0)d+=c;const g=Math.min(s.inHeight,p+a),w=T+t*I;for(let t=0;t<s.outWidth;++t){const a=t*u-b;let o=a;while(o<0)o+=h;const p=Math.min(s.inWidth,f+a),m=w+t*C;let k=y,I=0,S=0;for(let t=$;t<N;t+=l){const s=n+t*r[1];for(let t=d;t<g;t+=c){const n=s+t*r[2];for(let t=o;t<p;t+=h){const s=n+t*r[3],a=e[s+x];if("max"===i&&a>k?k=a:"avg"===i&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}const T=m+x;v[T]="avg"===i?I/Math.max(S,1):k}}}}return x}function IT(e,t){const n=Ra(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,i=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const y=b*r-d;let x=y;while(x<0)x+=a;const v=Math.min(t.inDepth,l+y);for(let r=0;r<t.outHeight;++r){const l=r*s-p;let d=l;while(d<0)d+=o;const w=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const p=s*i-f;let k=p;while(k<0)k+=u;const I=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=a){const n=t-y;for(let r=d;r<w;r+=o){const s=r-l;for(let i=k;i<I;i+=u){const a=i-p,o=e.get(g,t,r,i,m);o>=C&&(C=o,S=n*c*h+s*c+a)}}}n.set(S,g,b,r,s,m)}}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Q$(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:u}=r,l=1;y(Ku(a,l),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=Fu(s.shape,i,a,l,o,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))h=oN({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=V(s.shape),r=vT(e,s.shape,s.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}const ST={kernelName:$e,backendName:"cpu",kernelFunc:CT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $T(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:u,dataFormat:l}=r;Q$(s,"avgPool3d");const c=Du(s.shape,i,a,1,o,u,l),h=n.data.get(s.dataId).values,d=kT(h,s.shape,s.dtype,V(s.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const NT={kernelName:Te,backendName:"cpu",kernelFunc:$T};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TT(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:u,dimRoundingMode:l}=r;Q$([s,i],"avgPool3DGrad");const c=Du(i.shape,a,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,C=k-1-c.padInfo.left,S=w-1-c.padInfo.top,$=Ra(i.shape,"float32"),N=1/(f*g*m),T=n.bufferSync(s);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-I,i=n-S,a=r-C;let o=0;for(let t=0;t<v;t+=b){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=y){const r=(i+t)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){const s=(a+t)/p;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;const i=T.get(E,n,r,s,e);o+=i}}}$.set(o*N,E,t,n,r,e)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const ET={kernelName:Ee,backendName:"cpu",kernelFunc:TT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RT(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;Q$([s,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Fu(a.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,v=b-1-c.padInfo.top,w=Ra(a.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,C=Ra(s.shape,"float32",I);for(let S=0;S<c.batchSize;++S)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-v,s=n-x;let i=0;for(let t=0;t<b;t+=g){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<y;t+=m){const r=(s+t)/d;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;const a=C.get(S,n,r,e);i+=a}}w.set(i*k,S,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const _T={kernelName:Ne,backendName:"cpu",kernelFunc:RT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:i,offset:a,mean:o,variance:u}=t;y(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),y(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),y(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Q$([s,o,u,i,a],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,b=p.length,x=d.length,v=h.length;let w=0,k=0,I=0,C=0;for(let y=0;y<c.length;++y)g[y]=f[w++]+(c[y]-h[k++])*p[I++]/Math.sqrt(d[C++]+l),w>=m&&(w=0),k>=v&&(k=0),I>=b&&(I=0),C>=x&&(C=0);return n.makeTensorInfo(s.shape,s.dtype,g)}const FT={kernelName:It,backendName:"cpu",kernelFunc:AT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DT(e,t,n,r,s){const i=vu(r,t,n),a=w(n),o=V(r);if(i){const n=wu(t,o);return"string"===s?e.slice(n,n+a):e.subarray(n,n+a)}const u="string"===s?dg(e):e,l=Ra(r,s,u),c=Ra(n,s);for(let h=0;h<c.size;++h){const e=c.indexToLoc(h),n=e.map(((e,n)=>e+t[n]));c.set(l.get(...n),...e)}return"string"===s?pg(c.values):c.values}function OT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r;Q$(s,"slice");const[o,u]=ku(s,i,a);uu(s,o,u);const l=n.data.get(s.dataId).values,c=DT(l,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,c)}const MT={kernelName:Bn,backendName:"cpu",kernelFunc:OT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;Q$([s],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),u=gf(s.shape,i,o),l=mf(u.length,i.length),c=bf(s.shape,i,o),h=yf(a,i.length),d=xf(c,a,i.length),p=LN({inputs:{x:s},backend:n,attrs:{shape:u}}),f=QN({inputs:{x:p},backend:n,attrs:{perm:l}}),g=LN({inputs:{x:f},backend:n,attrs:{shape:c}}),m=OT({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const zT={kernelName:_e,backendName:"cpu",kernelFunc:LT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PT(e,t,n,r,s){const i=w(r),a=q(s,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(a[n]+=i>0?t[o]:1)}return a}function BT(e,t,n,r=!1){const s=e.shape[0],i=e.shape[1],a=Ra([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<i;s++){const i=e.get(o,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?a.set(1,o,i):t.size>0?a.set(a.get(o,i)+t.get(o,s),o,i):a.set(a.get(o,i)+1,o,i))}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,l=PT(o,u,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,l)}const UT={kernelName:Ae,backendName:"cpu",kernelFunc:WT},VT=hN(((e,t)=>e&t)),GT=_N(Fe,VT),HT={kernelName:Fe,backendName:"cpu",kernelFunc:GT};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jT(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=xo(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const KT={kernelName:Oe,backendName:"cpu",kernelFunc:jT},qT=nN((e=>Math.ceil(e))),XT=sN(Le,qT),YT={kernelName:Le,backendName:"cpu",kernelFunc:XT},JT=rN(ze,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),ZT={kernelName:ze,backendName:"cpu",kernelFunc:JT},QT=e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(w(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=n.data.get(i.dataId).values,u=n.data.get(a.dataId).values;for(let l=0;l<o.length;l++){const e=o[l],t=u[l];r[l]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")},eE={kernelName:Be,backendName:"cpu",kernelFunc:QT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tE(e,t,n,r){const s=_(n,w(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=w(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?dg(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=i[a++]}r+=e.shape[1]}))}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nE(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const rE={kernelName:Rt,backendName:"cpu",kernelFunc:nE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sE(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=T(s,t[0].shape)[0],a=t.map((e=>e.shape));sf(a,i);let o=af(t.map((e=>e.shape)),i);if(0===w(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>w(e.shape)>0));if(1===u.length)return oN({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>$N({inputs:{input:e},backend:n}))),t=u.map((e=>nE({inputs:{input:e},backend:n}))),r=sE({inputs:e,backend:n,attrs:{axis:i}}),s=sE({inputs:t,backend:n,attrs:{axis:i}}),a=IN({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const l=u.map((e=>{const t=w(e.shape.slice(i)),r=[-1,t];return LN({inputs:{x:e},backend:n,attrs:{shape:r}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=af(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],d=tE(c,o,t[0].dtype,h),p=af(u.map((e=>e.shape)),i),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const iE={kernelName:We,backendName:"cpu",kernelFunc:sE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;Q$([s,i],"conv2d");const h=Xu(u),d=Ou(s.shape,i.shape,a,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Cs(d.outShape,s.dtype),w=V(s.shape),k=V(i.shape),I=w[0],C=x?w[1]:w[2],S=x?w[2]:1,$=x?1:w[1],N=v.strides[0],T=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,R=x?1:v.strides[1],_=n.data.get(s.dataId).values,A=n.data.get(i.dataId).values,F=v.values;for(let D=0;D<d.batchSize;++D){const e=D*I,t=D*N;for(let n=0;n<d.outHeight;++n){const r=t+n*T,s=n*d.strideHeight-y;for(let t=0;t<p;++t){const n=s+t*g;if(n<0||n>=d.inHeight)continue;const i=t*k[0],a=e+n*C;for(let e=0;e<d.outWidth;++e){const t=r+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=d.inWidth)continue;const s=i+e*k[1],o=a+r*S;let u=s;for(let e=0;e<d.inChannels;++e){const n=_[o+e*$];for(let e=0;e<d.outChannels;++e)F[t+e*R]+=n*A[u+e];u+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const oE={kernelName:Ue,backendName:"cpu",kernelFunc:aE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;Q$([s,i],"conv2dBackpropFilter");const h=Xu(u),d=Ou(s.shape,c,a,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,y=new Cs(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=new Cs(s.shape,s.dtype,w),C=new Cs(i.shape,i.dtype,k);for(let S=0;S<g;++S){const e=Math.max(0,Math.ceil((v-S)/p)),t=Math.min(d.outHeight,(d.inHeight+v-S)/p);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((x-n)/f)),s=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let i=0;i<d.inChannels;++i)for(let a=0;a<d.outChannels;++a){let o=0;for(let u=0;u<d.batchSize;++u)for(let l=e;l<t;++l){const e=S+l*p-v;for(let t=r;t<s;++t){const r=n+t*f-x;o+=b?I.get(u,e,r,i)*C.get(u,l,t,a):I.get(u,i,e,r)*C.get(u,a,l,t)}}y.set(o,S,n,i,a)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const lE={kernelName:Ve,backendName:"cpu",kernelFunc:uE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cE(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;Q$([s,i],"conv2dBackpropInput");const h=V(i.shape),d=V(s.shape);let p=Xu(l);const f=Ou(a,i.shape,o,1,u,c,!1,p),g=new Cs(f.inShape,"float32"),m=g.values,b=n.data.get(s.dataId).values,y=n.data.get(i.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:S,inHeight:$,inWidth:N,outChannels:T,outHeight:E,outWidth:R,strideHeight:_,strideWidth:A}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,D=C-1-f.padInfo.left,O="channelsLast"===p,M=g.strides[0],L=O?g.strides[1]:g.strides[2],z=O?g.strides[2]:1,P=O?1:g.strides[1],B=d[0],W=O?d[1]:d[2],U=O?d[2]:1,G=O?1:d[1];for(let V=0;V<k;++V)for(let e=0;e<S;++e)for(let t=0;t<$;++t){const n=t-F,r=Math.max(0,Math.ceil(n/_)),s=Math.min(E,(I+n)/_);for(let i=0;i<N;++i){const a=i-D,o=Math.max(0,Math.ceil(a/A)),u=Math.min(R,(C+a)/A);let l=0;for(let t=r;t<s;++t){const r=t*_-n;for(let n=o;n<u;++n){const s=n*A-a,i=B*V+W*t+U*n,o=x*(I-1-r)+v*(C-1-s)+w*e;for(let e=0;e<T;++e){const t=b[i+G*e],n=y[o+e];l+=t*n}}}const c=M*V+L*t+z*i+P*e;m[c]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const hE={kernelName:Ge,backendName:"cpu",kernelFunc:cE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:u}=r;Q$([s,i],"conv3d");const l=Mu(s.shape,i.shape,a,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=l,b=m.front,y=m.left,x=m.top,v=new Cs(l.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=v.values,C=V(s.shape),S=V(i.shape);for(let $=0;$<l.batchSize;++$){const e=$*C[0],t=$*v.strides[0];for(let n=0;n<l.outDepth;++n){const r=t+n*v.strides[1],s=n*l.strideDepth-b;for(let t=0;t<c;++t){const n=s+t*p;if(n<0||n>=l.inDepth)continue;const i=t*S[0],a=e+n*C[1];for(let e=0;e<l.outHeight;++e){const t=r+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=i+e*S[1],o=a+r*C[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-y;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=l.inWidth)continue;const i=s+e*S[2],a=o+t*l.inChannels;let u=i;for(let e=0;e<l.inChannels;++e){const t=w[a+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const pE={kernelName:He,backendName:"cpu",kernelFunc:dE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:u}=r;Q$([s,i],"conv3dBackpropFilterV2");const l=V(s.shape),c=V(i.shape),h=Mu(s.shape,u,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,y=new Cs(h.filterShape,"float32"),x=y.values,[v,w,k,I]=y.strides,C=n.data.get(i.dataId).values,[S,$,N,T]=c,E=n.data.get(s.dataId).values,[R,_,A,F]=l,D=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let L=0;L<g;++L){const e=Math.max(0,Math.ceil((D-L)/d)),t=Math.min(h.outDepth,(h.inDepth+D-L)/d),n=L*v;for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((M-r)/p)),i=Math.min(h.outHeight,(h.inHeight+M-r)/p),a=r*w+n;for(let n=0;n<b;++n){const o=Math.max(0,Math.ceil((O-n)/f)),u=Math.min(h.outWidth,(h.inWidth+O-n)/f),l=n*k+a;for(let a=0;a<h.inChannels;++a){const c=a*I+l;for(let l=0;l<h.outChannels;++l){let g=0;for(let c=0;c<h.batchSize;++c){const h=c*R,m=c*S;for(let c=e;c<t;++c){const e=L+c*d-D,t=e*_+h,b=c*$+m;for(let c=s;c<i;++c){const e=r+c*p-M,s=e*A+t,i=c*N+b;for(let t=o;t<u;++t){const e=n+t*f-O,r=e*F+s,o=t*T+i;g+=E[r+a]*C[o+l]}}}}x[c+l]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const gE={kernelName:je,backendName:"cpu",kernelFunc:fE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mE(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:u}=r;Q$([s],"conv3dBackpropInputV2");const l=V(s.shape),c=V(i.shape),h=Mu(u,i.shape,o,1,a),d=new Cs(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,y=n.data.get(s.dataId).values,[x,v,w,k]=l,I=n.data.get(i.dataId).values,[C,S,$,N]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:_,inChannels:A,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:U}=h,G=E-1-h.padInfo.front,H=R-1-h.padInfo.top,j=_-1-h.padInfo.left;for(let V=0;V<T;++V)for(let e=0;e<A;++e)for(let t=0;t<F;++t){const n=t-G,r=Math.max(0,Math.ceil(n/B)),s=Math.min(L,(E+n)/B);for(let i=0;i<D;++i){const a=i-H,o=Math.max(0,Math.ceil(a/W)),u=Math.min(z,(R+a)/W);for(let l=0;l<O;++l){const c=l-j,h=Math.max(0,Math.ceil(c/U)),d=Math.min(P,(_+c)/U);let T=0;for(let t=r;t<s;++t){const r=t*B-n;for(let n=o;n<u;++n){const s=n*W-a;for(let i=h;i<d;++i){const a=i*U-c,o=x*V+v*t+w*n+k*i,u=C*(E-1-r)+S*(R-1-s)+$*(_-1-a)+N*e;for(let e=0;e<M;++e){const t=y[o+e],n=I[u+e];T+=t*n}}}}p[f*V+g*t+m*i+b*l+e]=T}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const bE={kernelName:Ke,backendName:"cpu",kernelFunc:mE},yE=rN(qe,(e=>Math.cos(e))),xE={kernelName:qe,backendName:"cpu",kernelFunc:yE},vE=rN(Xe,(e=>Math.cosh(e))),wE={kernelName:Xe,backendName:"cpu",kernelFunc:vE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kE(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=s.shape,f=i.shape[0],[g,m]=o,b=Ra([f,g,m,p],"float32"),y=n.data.get(i.dataId).values,x=n.data.get(a.dataId).values,v=n.data.get(s.dataId).values,w=V(s.shape),k=V(b.shape);for(let I=0;I<f;I++){const e=4*I,t=y[e],n=y[e+1],r=y[e+2],s=y[e+3],i=x[I];if(i>=c)continue;const a=g>1?(r-t)*(h-1)/(g-1):0,o=m>1?(s-n)*(d-1)/(m-1):0;for(let c=0;c<g;c++){const e=g>1?t*(h-1)+c*a:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<m;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=l}else if("bilinear"===u){const t=Math.floor(e),r=Math.ceil(e),a=e-t;for(let e=0;e<m;e++){const u=m>1?n*(d-1)+e*o:.5*(n+s)*(d-1);if(u<0||u>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+c*k[1]+I*k[0];b.values[n]=l}continue}const h=Math.floor(u),f=Math.ceil(u),g=u-h;for(let n=0;n<p;n++){let s=n+h*w[2]+t*w[1]+i*w[0];const o=v[s];s=n+f*w[2]+t*w[1]+i*w[0];const u=v[s];s=n+h*w[2]+r*w[1]+i*w[0];const l=v[s];s=n+f*w[2]+r*w[1]+i*w[0];const d=v[s],p=o+(u-o)*g,m=l+(d-l)*g;s=n+e*k[2]+c*k[1]+I*k[0],b.values[s]=p+(m-p)*a}}}else for(let t=0;t<m;++t){const r=m>1?n*(d-1)+t*o:.5*(n+s)*(d-1);if(r<0||r>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=l}continue}const a=Math.round(r),u=Math.round(e);for(let e=0;e<p;e++){const n=e+a*w[2]+u*w[1]+i*w[0],r=e+t*k[2]+c*k[1]+I*k[0];b.values[r]=v[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const IE={kernelName:Ze,backendName:"cpu",kernelFunc:kE};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;Q$(s,"cumprod");const u=Ec([i],s.shape.length);let l=s;null!=u&&(l=QN({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=_c(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Bs(l.dtype,"int32"),d=K(w(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=f)for(let e=0;e<f;e++){const t=g(b,e);if(0===e)d[t]=a?1:p[t];else{const n=g(b,e-1);d[t]=a?p[n]*d[n]:p[t]*d[n]}}const m=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=Rc(u),t=QN({inputs:{x:m},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(l),t}return m}const SE={kernelName:Ye,backendName:"cpu",kernelFunc:CE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $E(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;Q$(s,"cumsum");const u=Ec([i],s.shape.length);let l=s;null!=u&&(l=QN({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=_c(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Bs(l.dtype,"int32"),d=q(w(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=f)for(let e=0;e<f;e++){const t=g(b,e);if(0===e)d[t]=a?0:p[t];else{const n=g(b,e-1);d[t]=a?p[n]+d[n]:p[t]+d[n]}}const m=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=Rc(u),t=QN({inputs:{x:m},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(l),t}return m}const NE={kernelName:Je,backendName:"cpu",kernelFunc:$E};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=n.data.get(s.dataId).values,t=n.data.get(i.dataId).values,r=PT(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(i),r=BT(e,t,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const EE={kernelName:Qe,backendName:"cpu",kernelFunc:TE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r;y("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*i,d=l*i,p=c/(i*i),f=n.data.get(s.dataId).values,g=new Float32Array(o*h*d*p);let m=0;for(let b=0;b<o;++b)for(let e=0;e<h;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<d;++e){const r=Math.floor(e/i),s=e%i,a=(n*i+s)*p;for(let e=0;e<p;++e){const n=e+a,s=n+c*(r+l*(t+u*b));g[m++]=f[s]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,g)}const _E={kernelName:et,backendName:"cpu",kernelFunc:RE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:u,dimRoundingMode:l}=r;Q$([s,i],"depthwiseConv2DNative");const c=V(s.shape),h=V(i.shape);let d=u;null==d&&(d=[1,1]),y(Ku(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=Ou(s.shape,i.shape,a,d,o,l,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:b,padInfo:x}=p,v=x.left,w=x.top,k=p.outChannels/p.inChannels,I=new Cs(p.outShape,s.dtype),C=n.data.get(s.dataId).values,S=n.data.get(i.dataId).values,$=I.values;for(let y=0;y<p.batchSize;++y){const e=y*c[0],t=y*I.strides[0];for(let n=0;n<p.outHeight;++n){const r=t+n*I.strides[1],s=n*p.strideHeight-w;for(let t=0;t<f;++t){const n=s+t*m;if(n<0||n>=p.inHeight)continue;const i=t*h[0],a=e+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*I.strides[2],n=e*p.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=p.inWidth)continue;const s=i+e*h[1],o=a+r*p.inChannels;let u=t,l=s;for(let e=0;e<p.inChannels;++e){const t=C[o+e];for(let e=0;e<k;++e)$[u+e]+=t*S[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const FE={kernelName:tt,backendName:"cpu",kernelFunc:AE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;Q$([s,i],"depthwiseConv2dNativeBackpropFilter");const h=Ou(s.shape,c,a,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new Cs(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new Cs(s.shape,s.dtype,v),k=n.data.get(i.dataId).values,I=new Cs(i.shape,i.dtype,k);for(let C=0;C<f;++C){const e=Math.max(0,Math.ceil((y-C)/d)),t=Math.min(h.outHeight,(h.inHeight+y-C)/d);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((b-n)/p)),s=Math.min(h.outWidth,(h.inWidth+b-n)/p);for(let i=0;i<h.outChannels;++i){const a=Math.trunc(i/x),o=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let o=e;o<t;++o){const e=C+o*d-y;for(let t=r;t<s;++t){const r=n+t*p-b;u+=w.get(l,e,r,a)*I.get(l,o,t,i)}}m.set(u,C,n,a,o)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const OE={kernelName:nt,backendName:"cpu",kernelFunc:DE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ME(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;Q$([s,i],"depthwiseConv2DNativeBackpropInput");const h=V(s.shape),d=V(i.shape),p=Ou(c,i.shape,a,o,u,l,!0),f=new Cs(p.inShape,"float32"),g=f.values,[m,b,y]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(i.dataId).values,[C,S,$]=d,{batchSize:N,filterHeight:T,filterWidth:E,inChannels:R,inHeight:_,inWidth:A,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=p,z=T-1-p.padInfo.top,P=E-1-p.padInfo.left,B=F/R;for(let W=0;W<N;++W)for(let e=0;e<R;++e)for(let t=0;t<_;++t){const n=t-z,r=Math.max(0,Math.ceil(n/M)),s=Math.min(D,(T+n)/M);for(let i=0;i<A;++i){const a=i-P,o=Math.max(0,Math.ceil(a/L)),u=Math.min(O,(E+a)/L);let l=0;for(let t=r;t<s;++t){const r=t*M-n;for(let n=o;n<u;++n){const s=n*L-a,i=v*W+w*t+k*n,o=C*(T-1-r)+S*(E-1-s)+$*e;for(let t=0;t<B;++t){const n=e*B+t,r=x[i+n],s=I[o+t];l+=r*s}}}g[m*W+b*t+y*i+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const LE={kernelName:rt,backendName:"cpu",kernelFunc:ME};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zE(e){const{inputs:t,backend:n}=e,{x:r}=t,s=w(r.shape),i=n.data.get(r.dataId).values,a=Ra([s,s],r.dtype),o=a.values;for(let l=0;l<i.length;l++)o[l*s+l]=i[l];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,a.dtype,a.values)}const PE={kernelName:st,backendName:"cpu",kernelFunc:zE},BE={kernelName:it,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:i,pad:a,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:S,dilationWidth:$,outShape:N}=Au(r.shape,s.shape,i,a,"NHWC",o),T=w(N),E=N.length,R=_(r.dtype,T);for(let w=0;w<p;++w)for(let e=0;e<b;++e){const t=e*v-x.top;for(let n=0;n<y;++n){const i=n*k-x.left;for(let a=0;a<m;++a){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<C;++t){const u=i+t*$;if(u>=0&&u<g){const i=J([w,n,u,a],c,V(r.shape)),p=J([e,t,a],d,V(s.shape)),f=l[i]+h[p];f>o&&(o=f)}}}const u=J([w,e,n,a],E,V(N));R[u]=o}}}const A=u.write(ss(R,r.dtype),N,r.dtype);return{dataId:A,shape:N,dtype:r.dtype}}},WE={kernelName:ot,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:a,pad:o,dilations:u}=n,l=t,c=H(r.shape,l.data.get(r.dataId).values),h=H(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:$}=Au(r.shape,s.shape,a,o,"NHWC",u);y(i.rank===$.length,(()=>`Error in ${ot}, dy must have the same rank as output ${$.length}, but got ${i.rank}`));const N=H($,l.data.get(i.dataId).values),T=X(s.shape,s.dtype);for(let y=0;y<d;++y)for(let e=0;e<m;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const r=n*w-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,a=0,o=0;for(let e=0;e<k;++e){const n=t+e*C;if(n>=0&&n<p)for(let t=0;t<I;++t){const u=r+t*S;if(u>=0&&u<f){const r=c[y][n][u][s]+h[e][t][s];r>i&&(i=r,a=e,o=t)}}}T[a][o][s]+=N[y][e][n][s]}}}const E=l.write(ss(T,r.dtype),s.shape,s.dtype);return{dataId:E,shape:s.shape,dtype:s.dtype}}},UE={kernelName:at,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:a,pad:o,dilations:u}=n,l=t,c=H(r.shape,l.data.get(r.dataId).values),h=H(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:$}=Au(r.shape,s.shape,a,o,"NHWC",u);y(i.rank===$.length,(()=>`Error in ${at}, dy must have the same rank as output ${$.length}, but got ${i.rank}`));const N=H($,l.data.get(i.dataId).values),T=X(r.shape,r.dtype);for(let y=0;y<d;++y)for(let e=0;e<m;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const r=n*w-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,a=t<0?0:t,o=r<0?0:r;for(let e=0;e<k;++e){const n=t+e*C;if(n>=0&&n<p)for(let t=0;t<I;++t){const u=r+t*S;if(u>=0&&u<f){const r=c[y][n][u][s]+h[e][t][s];r>i&&(i=r,a=n,o=u)}}}T[y][a][o][s]+=N[y][e][n][s]}}}const E=l.write(ss(T,r.dtype),r.shape,r.dtype);return{dataId:E,shape:r.shape,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VE(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:i,options:a}=r,{contextOptions:o,imageOptions:u}=a||{},l=(null===u||void 0===u?void 0:u.alpha)||1,c=(null===o||void 0===o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=i.getContext(c,(null===o||void 0===o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],g=n.data.get(s.dataId).values,m="float32"===s.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let x=0;x<d*p;++x){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=g[x*f+n];if("float32"===s.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===s.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*m,e[1]=t*m,e[2]=t*m):e[n]=t*m}const t=4*x;b[t+0]=Math.round(e[0]),b[t+1]=Math.round(e[1]),b[t+2]=Math.round(e[2]),b[t+3]=Math.round(e[3])}i.width=p,i.height=d;const y=new ImageData(b,p,d);return h.putImageData(y,0,0),s}const GE={kernelName:ut,backendName:"cpu",kernelFunc:VE},HE=hN(((e,t)=>e*t)),jE=AN(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),KE=_N(an,HE,jE),qE={kernelName:an,backendName:"cpu",kernelFunc:KE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;let o;Q$(s,"sum"),o="bool"===s.dtype?EN({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):oN({inputs:{x:s},backend:n});const u=o.shape.length,l=T(i,o.shape),c=Ec(l,u);let h=l,d=o;null!=c&&(d=QN({inputs:{x:o},backend:n,attrs:{perm:c}}),h=_c(h.length,u)),Tc("sum",h,d.shape.length);const[p,f]=$c(d.shape,h),g=Bs(d.dtype,"int32");let m=SN(n,p,g);const b=w(f),y=n.data.get(m.dataId).values,x=n.data.get(d.dataId).values;for(let v=0;v<y.length;++v){const e=v*b;let t=0;for(let n=0;n<b;++n)t+=x[e+n];y[v]=t}if(a){const e=Nc(m.shape,l),t=m;m=LN({inputs:{x:m},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const YE={kernelName:Kn,backendName:"cpu",kernelFunc:XE};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JE(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:u}=Gf(s,i.length);jf(a.length,u,i);const{path:l,steps:c}=Kf(o,u),h=c.length;let d=null,p=a.length;const f=[];for(let g=0;g<h;++g){for(const e of c[g]){const{permutationIndices:t,expandDims:r}=Hf(p,u[e]);let s;qf(t)?s=i[e]:(s=QN({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);k(s.shape,a)||(s=LN({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=KE({inputs:{a:s,b:d},backend:n}),f.push(d))}g<h-1&&(l[g]>=0&&(d=XE({inputs:{x:d},backend:n,attrs:{axis:l[g]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}const ZE={kernelName:ct,backendName:"cpu",kernelFunc:JE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QE(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;Q$([r,s],"eluGrad");const i=new Float32Array(w(s.shape)),a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let u=0;u<a.length;++u){const e=a[u];i[u]=e>=0?o[u]:o[u]*(e+1)}return n.makeTensorInfo(s.shape,"float32",i)}const eR={kernelName:dt,backendName:"cpu",kernelFunc:QE},tR=hN(((e,t)=>e===t?1:0)),nR=_N(ft,tR,null,"bool"),rR={kernelName:ft,backendName:"cpu",kernelFunc:nR},sR=$f,iR=Nf,aR=Tf,oR=Ef,uR=Rf,lR=_f,cR=rN(pt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+sR*n);return t*(1-((((lR*r+uR)*r+oR)*r+aR)*r+iR)*r*Math.exp(-n*n))})),hR={kernelName:pt,backendName:"cpu",kernelFunc:cR},dR=nN((e=>Math.exp(e))),pR=sN(gt,dR,"float32"),fR={kernelName:gt,backendName:"cpu",kernelFunc:pR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gR(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let u=i;return i<0&&(y(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),u=a+i+1),o.splice(u,0,1),LN({inputs:{x:s},backend:n,attrs:{shape:o}})}const mR={kernelName:mt,backendName:"cpu",kernelFunc:gR},bR=nN((e=>Math.expm1(e))),yR=sN(bt,bR),xR={kernelName:bt,backendName:"cpu",kernelFunc:yR},vR=hN(((e,t)=>e/t)),wR=_N(lt,vR),kR={kernelName:lt,backendName:"cpu",kernelFunc:wR},IR=hN(((e,t)=>e-t)),CR=AN(((e,t,n,r)=>({real:e-n,imag:t-r}))),SR=_N(lr,IR,CR),$R={kernelName:lr,backendName:"cpu",kernelFunc:SR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NR(e,t,n){const r=e.shape,s=r[0],i=r[1],a=n.data.get(e.dataId),o=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[s,i],c=w(l),h=R("float32",c),d=R("float32",c);for(let m=0;m<s;m++){const e=OT({inputs:{x:o},backend:n,attrs:{begin:[m,0],size:[1,i]}}),r=OT({inputs:{x:u},backend:n,attrs:{begin:[m,0],size:[1,i]}}),s=IN({inputs:{real:e,imag:r},backend:n}),{real:a,imag:l}=TR(s,t,n),c=Af(a,l);for(let t=0;t<i;t++){const e=Mf(c,t);h[m*i+t]=e.real,d[m*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),g=IN({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function TR(e,t,n){const r=w(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(ER(r)){const s=RR(i,a,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),i=n.makeTensorInfo([],"float32",ns(r,"float32")),a=oN({inputs:{x:i},backend:n}),u=kR.kernelFunc({inputs:{a:e,b:i},backend:n}),l=kR.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}{const e=Af(i,a),n=_R(e,r,t);return Ff(n)}}function ER(e){return 0===(e&e-1)}function RR(e,t,n,r,s){if(1===n)return{real:e,imag:t};const i=Af(e,t),a=n/2,o=Df(i),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),d=s.makeTensorInfo(c,"float32",l),p=IN({inputs:{real:h,imag:d},backend:s}),f=Of(i),g=f.real,m=f.imag,b=[g.length],y=s.makeTensorInfo(b,"float32",g),x=s.makeTensorInfo(b,"float32",m),v=IN({inputs:{real:y,imag:x},backend:s}),w=RR(u,l,a,r,s),k=w.real,I=w.imag,C=[k.length],S=s.makeTensorInfo(C,"float32",k),$=s.makeTensorInfo(C,"float32",I),N=IN({inputs:{real:S,imag:$},backend:s}),T=RR(g,m,a,r,s),E=T.real,R=T.imag,_=[E.length],A=s.makeTensorInfo(_,"float32",E),F=s.makeTensorInfo(_,"float32",R),D=IN({inputs:{real:A,imag:F},backend:s}),O=zf(n,r),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),z=s.makeTensorInfo(M,"float32",O.imag),P=IN({inputs:{real:L,imag:z},backend:s}),B=KE({inputs:{a:P,b:D},backend:s}),W=ON({inputs:{a:N,b:B},backend:s}),U=SR({inputs:{a:N,b:B},backend:s}),V=$N({inputs:{input:W},backend:s}),G=$N({inputs:{input:U},backend:s}),H=nE({inputs:{input:W},backend:s}),j=nE({inputs:{input:U},backend:s}),K=sE({inputs:[V,G],backend:s,attrs:{axis:0}}),q=sE({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(K.dataId).values,Y=s.data.get(q.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),{real:X,imag:Y}}function _R(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,a=0;for(let r=0;r<t;r++){const o=Pf(s*r,t,n),u=Mf(e,r);i+=u.real*o.real-u.imag*o.imag,a+=u.real*o.imag+u.imag*o.real}n&&(i/=t,a/=t),Lf(r,i,a,s)}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AR(e){const{inputs:t,backend:n}=e,{input:r}=t,s=w(r.shape),i=r.shape[r.shape.length-1],a=s/i,o=LN({inputs:{x:r},backend:n,attrs:{shape:[a,i]}}),u=NR(o,!1,n),l=LN({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}const FR={kernelName:yt,backendName:"cpu",kernelFunc:AR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DR(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:i}=n,a=i||B(s),o=_(a,w(r));return MR(o,s,a),t.makeTensorInfo(r,a,o)}const OR={kernelName:xt,backendName:"cpu",kernelFunc:DR};function MR(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const LR={kernelName:vt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,i=R(r.dtype,w(r.shape)),[a,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let d=0;d<a;d++){const e=d*u*o*l;for(let t=0;t<o;t++){const n=t*(u*l);for(let t=0;t<u;t++){const r=t*l;for(let s=0;s<l;s++){const a=Math.round(u-t-1),o=e+n+r+s;let h=c[o];if(a>=0&&a<u){const t=a*l,r=e+n+t+s;h=c[r]}i[o]=h}}}}const h=s.write(i,r.shape,r.dtype);return{dataId:h,shape:r.shape,dtype:r.dtype}}},zR=nN((e=>Math.floor(e))),PR=sN(wt,zR),BR={kernelName:wt,backendName:"cpu",kernelFunc:PR},WR=hN(((e,t)=>Math.floor(e/t))),UR=_N(kt,WR,null,"int32"),VR={kernelName:kt,backendName:"cpu",kernelFunc:UR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=aE({inputs:{x:s,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const e=LN({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});g=ON({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=ON({inputs:{a:g,b:a},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=LN({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=kN(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=kN(n,g,p,o,f);n.disposeIntermediateTensorInfo(e)}return g}const HR={kernelName:Cr,backendName:"cpu",kernelFunc:GR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=AE({inputs:{x:s,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;g=ON({inputs:{a:g,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=kN(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}const KR={kernelName:Sr,backendName:"cpu",kernelFunc:jR};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qR(e,t,n,r,s,i,a,o,u){const l=Ra([r,i],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let t=0;t<s;t++){const i=e[c*s+t];r+=i*a[t],n.push(i)}if(r<0||r>=u/i)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<i;e++)l.values[c*i+e]=t.get(...t.indexToLoc(r*i+e))}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XR(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=w(r.shape),a=s.shape,o=a[a.length-1],[u,l,c,h]=vf(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=n.data.get(s.dataId).values,p=n.bufferSync(r),f=qR(d,p,r.dtype,l,o,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,f.values)}const YR={kernelName:St,backendName:"cpu",kernelFunc:XR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JR(e,t,n){const r=Ra(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s),i=n.slice(),a=i[0],o=i[2],u=t.locToIndex([a,o]);i[2]=t.values[u];const l=e.locToIndex(i);0<=l&&l<e.values.length&&(r.values[s]=e.values[l])}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r;Q$([s,i],"gatherV2");const u=T(a,s.shape)[0],l=n.data.get(i.dataId).values,c=s.shape[u];for(let w=0;w<l.length;++w){const e=l[w];y(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=w(i.shape),p=hg(s,i,u,h),f=LN({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=LN({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],b=n.bufferSync(g),x=n.bufferSync(f),v=JR(x,b,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}const QR={kernelName:Ct,backendName:"cpu",kernelFunc:ZR},e_=hN(((e,t)=>e>t?1:0)),t_=_N($t,e_,null,"bool"),n_={kernelName:$t,backendName:"cpu",kernelFunc:t_},r_=hN(((e,t)=>e>=t?1:0)),s_=_N(Nt,r_,null,"bool"),i_={kernelName:Nt,backendName:"cpu",kernelFunc:s_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function a_(e){const{inputs:t,backend:n}=e,{input:r}=t,s=w(r.shape),i=r.shape[r.shape.length-1],a=s/i,o=LN({inputs:{x:r},backend:n,attrs:{shape:[a,i]}}),u=NR(o,!0,n),l=LN({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}const o_={kernelName:Et,backendName:"cpu",kernelFunc:a_},u_=rN(_t,(e=>Number.isFinite(e)?1:0),"bool"),l_={kernelName:_t,backendName:"cpu",kernelFunc:u_},c_=rN(At,(e=>Math.abs(e)===1/0?1:0),"bool"),h_={kernelName:At,backendName:"cpu",kernelFunc:c_},d_=rN(Ft,(e=>Number.isNaN(e)?1:0),"bool"),p_={kernelName:Ft,backendName:"cpu",kernelFunc:d_},f_=hN(((e,t)=>e<t?1:0)),g_=_N(Ot,f_,null,"bool"),m_={kernelName:Ot,backendName:"cpu",kernelFunc:g_},b_=hN(((e,t)=>e<=t?1:0)),y_=_N(Mt,b_,null,"bool"),x_={kernelName:Mt,backendName:"cpu",kernelFunc:y_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function v_(e,t,n){const r=(t-e)/(n-1),s=q(n,"float32");s[0]=e;for(let i=1;i<s.length;i++)s[i]=s[i-1]+r;return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function w_(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=v_(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}const k_={kernelName:Lt,backendName:"cpu",kernelFunc:w_},I_=nN((e=>Math.log(e))),C_=sN(zt,I_),S_={kernelName:zt,backendName:"cpu",kernelFunc:C_},$_=rN(Pt,(e=>Math.log1p(e))),N_={kernelName:Pt,backendName:"cpu",kernelFunc:$_},T_=hN(((e,t)=>e&&t)),E_=_N(Bt,T_,null,"bool"),R_={kernelName:Bt,backendName:"cpu",kernelFunc:E_},__=rN(Wt,(e=>e?0:1),"bool"),A_={kernelName:Wt,backendName:"cpu",kernelFunc:__},F_=hN(((e,t)=>e||t)),D_=_N(Ut,F_,null,"bool"),O_={kernelName:Ut,backendName:"cpu",kernelFunc:D_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function M_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:u}=r;Q$(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,d=w(s.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let g=0;g<d;g++){const e=f(g),t=h[g]*Math.pow(a+o*e,-u);p[g]=t}return n.makeTensorInfo(s.shape,s.dtype,p)}const L_={kernelName:Gt,backendName:"cpu",kernelFunc:M_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function z_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;Q$(a,"LRNGrad");const h=w(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,g=n.data.get(i.dataId).values,m=new Float32Array(h),b=h;for(let y=0;y<b;y++){const e=y%d,t=y-e+Math.max(0,e-o),n=y-e+Math.min(d,e+o+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=l*r+u;for(let s=t;s<n;s++){let e=-2*l*c*f[s]*g[y]/r;y===s&&(e+=Math.pow(r,-c)),e*=p[y],m[s]+=e}}return n.makeTensorInfo(a.shape,s.dtype,m)}const P_={kernelName:Ht,backendName:"cpu",kernelFunc:z_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function B_(e,t,n,r){const s=R(r,w(n));for(let i=0;i<s.length;++i){const n=i*t;let r=e[n];for(let s=0;s<t;++s){const t=e[n+s];(Number.isNaN(t)||t>r)&&(r=t)}s[i]=r}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function W_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=n;let u=s.shape;const l=u.length,c=T(i,u);let h=c;const d=Ec(h,l);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=ZN(p,u,s.dtype,d,e),h=_c(h.length,l),u=e}Q$(s,"max"),Tc("max",h,l);const[f,g]=$c(u,h),m=w(g),b=B_(p,m,f,s.dtype),y=o.write(b,f,s.dtype);let x=f;if(a){const e=Nc(f,c);x=e}return{dataId:y,shape:x,dtype:s.dtype}}const U_={kernelName:jt,backendName:"cpu",kernelFunc:W_},V_=hN(((e,t)=>Math.max(e,t))),G_=_N(Kt,V_),H_={kernelName:Kt,backendName:"cpu",kernelFunc:G_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function j_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Q$(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:u}=r,l=1;y(Ku(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=Fu(s.shape,i,a,l,o,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))h=oN({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=V(s.shape),r=vT(e,s.shape,s.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}const K_={kernelName:qt,backendName:"cpu",kernelFunc:j_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function q_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:u,dataFormat:l}=r;Q$(s,"maxPool3d");const c=Du(s.shape,i,a,1,o,u,l),h=n.data.get(s.dataId).values,d=kT(h,s.shape,s.dtype,V(s.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const X_={kernelName:Yt,backendName:"cpu",kernelFunc:q_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Y_(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:u,dimRoundingMode:l}=r;Q$([s,i],"maxPool3DGrad");const c=Du(i.shape,a,o,1,u,l),h=n.bufferSync(i),d=IT(h,c),p=c.strideDepth,f=c.strideHeight,g=c.strideWidth,m=c.dilationDepth,b=c.dilationHeight,y=c.dilationWidth,x=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=x-1-c.padInfo.front,I=w-1-c.padInfo.left,C=v-1-c.padInfo.top,S=Ra(i.shape,"float32"),$=n.bufferSync(s);for(let N=0;N<c.batchSize;++N)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-k,i=n-C,a=r-I;let o=0;for(let t=0;t<x;t+=m){const n=(s+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=b){const s=(i+r)/f;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=y){const u=(a+i)/g;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const l=x*v*w-1-d.get(N,n,s,u,e),h=t*v*w+r*w+i,p=l===h?1:0;if(0===p)continue;const f=$.get(N,n,s,u,e);o+=f*p}}}S.set(o,N,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const J_={kernelName:Jt,backendName:"cpu",kernelFunc:Y_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Z_(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;Q$([i,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Fu(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=Ra(d.outShape,o.dtype,wT(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Ra(o.shape,"float32"),C=n.data.get(s.dataId).values,S=Ra(s.shape,"float32",C);for(let $=0;$<d.batchSize;++$)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-k,s=n-w;let i=0;for(let t=0;t<x;t+=b){const n=(r+t)/g;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<v;r+=y){const a=(s+r)/m;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;const o=x*v-1-f.get($,n,a,e),u=t*v+r,l=o===u?1:0;if(0===l)continue;const c=S.get($,n,a,e);i+=c*l}}I.set(i,$,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Q_={kernelName:Xt,backendName:"cpu",kernelFunc:Z_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eA(e,t,n,r,s){const i=V(t),a=vT(e,t,n,i,s,"max"),o=wT(e,t,n,s,!0,r);return[a.values,o.values]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const tA={kernelName:Zt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=t,u=n;Q$(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Fu(r.shape,s,i,[1,1],a),[h,d]=eA(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=T(i,s.shape),u=$c(s.shape,o),l=u[1],c=w(l),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=EN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=wR({inputs:{a:p,b:d},backend:n});h.push(f);const g=XE({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:a}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}const rA={kernelName:Qt,backendName:"cpu",kernelFunc:nA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;Q$(s,"min");const o=T(i,s.shape);let u=o;const l=Ec(u,s.shape.length);let c=s;null!=l&&(c=QN({inputs:{x:s},backend:n,attrs:{perm:l}}),u=_c(u.length,s.shape.length)),Tc("min",u,c.shape.length);const[h,d]=$c(c.shape,u),p=w(d),f=q(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const r=g[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[b]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Nc(h,o),t=LN({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const iA={kernelName:en,backendName:"cpu",kernelFunc:sA},aA=hN(((e,t)=>Math.min(e,t))),oA=_N(tn,aA),uA={kernelName:tn,backendName:"cpu",kernelFunc:oA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,mode:a}=r;Q$(s,"mirrorPad");const o=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=i.map((e=>e[0])),l=i.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=V(s.shape),f=w(o),g=o.length,m=V(o),b=R(s.dtype,f);for(let x=0;x<f;x++){let e=Z(x,g,m);for(let n=0;n<g;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-c:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+c);e=e.map(((e,t)=>e-u[t]));const t=J(e,d,p);b[x]=h[t]}const y=n.write(b,o,s.dtype);return{dataId:y,shape:o,dtype:s.dtype}}const cA={kernelName:nn,backendName:"cpu",kernelFunc:lA},hA=hN(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),dA=_N(rn,hA),pA={kernelName:rn,backendName:"cpu",kernelFunc:dA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=s.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const u=T([o],s.shape),l=W_({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Nc(l.shape,u),h=LN({inputs:{x:l},backend:n,attrs:{shape:c}}),d=SR({inputs:{a:s,b:h},backend:n}),p=pR({inputs:{x:d},backend:n}),f=XE({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),g=LN({inputs:{x:f},backend:n,attrs:{shape:c}}),m=wR({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const gA={kernelName:Yn,backendName:"cpu",kernelFunc:fA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r;Q$(s,"multinomial");const u=o?s:fA({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,i],p=q(w(d),"int32");for(let f=0;f<l;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+h[e+s];const n=ch.alea(a.toString()),r=f*i;for(let s=0;s<i;++s){const e=n();p[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[r+s]=n;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}const bA={kernelName:sn,backendName:"cpu",kernelFunc:mA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yA(e,t,n){const r=ns(-1,n);return HE([],t,r,e,n)}function xA(e){const{inputs:t,backend:n}=e,{x:r}=t;Q$(r,"neg");const s=n.data.get(r.dataId).values,[i,a]=yA(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}const vA={kernelName:on,backendName:"cpu",kernelFunc:xA},wA=ip;function kA(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u}=r;Q$(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=wA(l,c,a,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const IA={kernelName:ln,backendName:"cpu",kernelFunc:kA},CA=ap;function SA(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;Q$(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=CA(c,h,a,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const $A={kernelName:cn,backendName:"cpu",kernelFunc:SA},NA=op;function TA(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;Q$(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=u,g=l,{selectedIndices:m,selectedScores:b}=NA(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const EA={kernelName:hn,backendName:"cpu",kernelFunc:TA},RA=hN(((e,t)=>e!==t?1:0)),_A=_N(un,RA,null,"bool"),AA={kernelName:un,backendName:"cpu",kernelFunc:_A};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FA(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:u}=r;Q$(s,"oneHot");const l=w(s.shape),c=new Float32Array(l*a);c.fill(u);const h=n.data.get(s.dataId).values;for(let d=0;d<l;++d)h[d]>=0&&h[d]<a&&(c[d*a+h[d]]=o);return n.makeTensorInfo([...s.shape,a],i,c)}const DA={kernelName:pn,backendName:"cpu",kernelFunc:FA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=$N({inputs:{input:r},backend:n}),t=OA({inputs:{x:e},backend:n}),s=nE({inputs:{input:r},backend:n}),i=OA({inputs:{x:s},backend:n}),a=IN({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return DR({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const MA={kernelName:xr,backendName:"cpu",kernelFunc:OA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=$N({inputs:{input:r},backend:n}),t=LA({inputs:{x:e},backend:n}),s=nE({inputs:{input:r},backend:n}),i=OA({inputs:{x:s},backend:n}),a=IN({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return DR({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const zA={kernelName:dn,backendName:"cpu",kernelFunc:LA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return gR({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{x(i,e.shape,"All tensors passed to stack must have matching shapes"),y(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=t.map((e=>{const t=gR({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),l=sE({inputs:u,backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const BA={kernelName:fn,backendName:"cpu",kernelFunc:PA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;Q$(s,"pad");const o=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=i.map((e=>e[0])),l=n.data.get(s.dataId).values,c=w(s.shape),h=s.shape.length,d=V(s.shape),p=w(o),f=o.length,g=V(o),m=R(s.dtype,p);0!==a&&m.fill(a);for(let y=0;y<c;y++){const e=Z(y,h,d),t=e.map(((e,t)=>e+u[t])),n=J(t,f,g);m[n]=l[y]}const b=n.write(m,o,s.dtype);return{dataId:b,shape:o,dtype:s.dtype}}const UA={kernelName:gn,backendName:"cpu",kernelFunc:WA},VA=hN(((e,t)=>Math.pow(e,t))),GA=_N(mn,VA),HA={kernelName:mn,backendName:"cpu",kernelFunc:GA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jA(e,t,n,r){const[s,i]=$c(e,r),a=Bs(t,"int32"),o=q(w(s),a),u=w(i);for(let l=0;l<o.length;++l){const e=l*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];o[l]=t}return{outVals:o,outShape:s,outDtype:a}}function KA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;Q$(s,"prod");const o=s.shape.length,u=T(i,s.shape),l=Ec(u,o);let c=u,h=s;const d=[];null!=l&&(h=QN({inputs:{x:s},backend:n,attrs:{perm:l}}),d.push(h),c=_c(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=jA(h.shape,h.dtype,p,c);let b=g;return a&&(b=Nc(g,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}const qA={kernelName:yn,backendName:"cpu",kernelFunc:KA};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XA(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=Z(r,t.length,V(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}function YA(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}function JA(e,t,n,r){const s=[];let i=0;const a=t.length-1+n.length,o=new Array(a).fill(null).map((()=>[0]));YA(n,r);let u=1;for(let l=0;l<t.length-1;++l){u*=t[l];const e=t[l+1];for(let t=1;t<u+1;++t)o[l].push(t*e)}for(let l=0;l<e.length;++l){let r=e[l],a=e[l]+1;for(let e=0;e<n.length;++e){const s=n[e],i=e+t.length-1;if(i>=0){const e=o[i],t=e[e.length-1]-s[r];for(let n=r;n<a;++n)o[i].push(s[n+1]+t)}r=s[r],a=s[a]}a!==r&&(s.push([r,a]),i+=a-r)}return{outSplits:o,valueSlices:s,numValues:i}}function ZA(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,s=_("int32",r);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}function QA(e,t){const n=e.slice(0,t);while(n.length<t)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function eF(e,t,n,r,s,i){const a=QA(t,2)[1],o=QA(i,2)[1];let u=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<r;++n)s[u*o+n]=e[t*a+n];++u}}function tF(e,t,n,r,s){const i=t.slice();i[0]=s;const a=_(n,w(i)),o=e.length,u=0===o?0:o/t[0];return eF(e,t,r,u,a,i),[a,i]}function nF(e,t,n,r,s,i,a,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");const u=t[0][0]-1;if(XA(i,a,u),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:c,valueSlices:h,numValues:d}=JA(i,a,e,l),p=ZA(c),f=tF(n,r,s,h,d);return[p,f[0],f[1]]}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rF(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=r,u=s.map((e=>n.data.get(e.dataId).values)),l=s.map((e=>e.shape)),c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,[d,p,f]=nF(u,l,c,i.shape,i.dtype,h,a.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}const sF={kernelName:xn,backendName:"cpu",kernelFunc:rF},iF=2147483647;function aF(e,t,n,r,s,i,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,u=0===s.length,l=0===a.length,c=[];o||c.push(t[0]),u||c.push(s[0]),l||c.push(a[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=_("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=o?e[0]:e[m],n=u?r[0]:r[m],s=l?i[0]:i[m];if(0===s)throw new Error("Requires delta != 0");let a;if(s>0&&n<t||s<0&&n>t)a=0;else if(a=Math.ceil(Math.abs((n-t)/s)),a>iF)throw new Error(`Requires ((limit - start) / delta) <= ${iF}`);d[m+1]=d[m]+a}const p=d[h],f=_(n,p);let g=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=o?e[0]:e[m];const r=l?i[0]:i[m];for(let e=0;e<t;++e)f[g++]=n,n+=r}return[d,f]}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oF(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:i}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[l,c]=aF(a,r.shape,r.dtype,o,s.shape,u,i.shape),h=n.makeTensorInfo([l.length],"int32",l),d=n.makeTensorInfo([c.length],r.dtype,c);return[h,d]}const uF={kernelName:vn,backendName:"cpu",kernelFunc:oF};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var lF=of;class cF{constructor(e,t,n,r,s,i,a,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=lf(l),this.raggedRank=cf(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===lF.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===lF.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case lF.VALUE_ROWIDS:return cF.getMaxWidthValueRowID(t);case lF.ROW_SPLITS:return cF.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${lF[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let i=1;i<t;++i){const t=e[i];t!==r&&(r=t,s=Math.max(i-n,s),n=i)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return dF(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;hf(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=uf(this.raggedRank,r,t),i=s;i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let i=0;for(let a=0;a<r;++a,i+=t)s.push(i);for(let a=r;a<e;++a)s.push(-1);return y(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,i=[];for(let a=0;a<s-1;++a){const s=e[a+1]-e[a];let o=Math.min(r,s),u=t[a];-1===u&&(o=0);for(let e=0;e<o;++e)i.push(u),u+=n;for(let e=0;e<s-o;++e)i.push(-1)}if(s>0&&i.length!==e[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,i=[];if(0===s)return[];let a=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];i.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===o)u>=0&&(++a,a<r?u+=n:u=-1);else{if(a=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case lF.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case lF.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${lF[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case lF.FIRST_DIM_SIZE:return e[0];case lF.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case lF.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${lF[t]}`)}}compute(){const e=this.rowPartitionValues[0];if(e.length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let o=r.length-2;o>=0;--o)r[o]=r[o+1]*n[o+1];const s=dF(n,!1),i=_(this.valuesDType,w(s)),a=r[0]*n[0];if(a>0){let e=this.calculateFirstParentOutputIndex(t,r[0],n[0]);for(let t=1;t<=this.raggedRank;++t){const s=this.calculateOutputIndex(t-1,e,r[t],n[t]);e=s}this.setOutput(this.raggedRank,e,i,s)}return[s,i]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,i=n;let a=r.slice();a=a.slice(e+1);const o=w(a),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;Ci((()=>{const t=Zu(l,e),n=pl(t,a);l=n.dataSync()}))}let c=0,h=0,d=0;for(let p=0;p<=u;++p){let e=p<u?t[p]:-1;if(e!==d){if(h<d){const e=s.subarray(c*o),t=i.subarray(h*o),n=(d-h)*o;hF(t,e,n)}if(p>=u){const t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)i.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else while(e>d){const e=i.slice(d*o);hF(e,l,o),++d}e<0?(c=p+1,h=d):(c=p,h=d,d=h+1)}else++d}}}function hF(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function dF(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function pF(e,t,n,r,s,i,a,o,u,l){return new cF(e,t,n,r,s,i,a,o,u,l).compute()}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fF(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,g]=pF(l,s.shape,c,i.shape,i.dtype,h,a.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,g)}const gF={kernelName:wn,backendName:"cpu",kernelFunc:fF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mF(e,t,n,r){const s=e===t,i=e<t&&n<0,a=t<e&&n>1;if(s||i||a)return q(0,r);const o=Math.abs(Math.ceil((t-e)/n)),u=q(o,r);t<e&&1===n&&(n=-1),u[0]=e;for(let l=1;l<u.length;l++)u[l]=u[l-1]+n;return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bF(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:i,step:a}=n,o=mF(r,s,a,i);return t.makeTensorInfo([o.length],i,o)}const yF={kernelName:kn,backendName:"cpu",kernelFunc:bF},xF=rN(Cn,(e=>1/e)),vF={kernelName:Cn,backendName:"cpu",kernelFunc:xF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wF(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;Q$(s,"resizeBilinear");const u=V(s.shape),[l,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(w([h,l,c,f])),b=[i&&l>1?d-1:d,i&&c>1?p-1:p],y=[i&&l>1?l-1:l,i&&c>1?c-1:c];let x=0;const v=b[0]/y[0],k=b[1]/y[1];for(let w=0;w<h;w++)for(let e=0;e<l;e++){let t;t=a?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),i=w*u[0]+n*u[1],o=w*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=a?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),s=t-n,l=Math.min(p-1,Math.ceil(t)),c=i+n*u[2],h=o+n*u[2],d=i+l*u[2],b=o+l*u[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],i=g[d+e],a=g[b+e],o=t+(i-t)*s,u=n+(a-n)*s,l=o+(u-o)*r;m[x++]=l}}}return n.makeTensorInfo([h,l,c,f],"float32",m)}const kF={kernelName:En,backendName:"cpu",kernelFunc:wF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IF(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;Q$([i,s],"resizeBilinearGrad");const o=V(s.shape),[u,l,c,h]=s.shape,[,d,p]=i.shape,f=new Float32Array(u*l*c*h),g=[a&&d>1?l-1:l,a&&p>1?c-1:c],m=[a&&d>1?d-1:d,a&&p>1?p-1:p],b=g[0]/m[0],y=g[1]/m[1],x=n.data.get(i.dataId).values;let v=0;for(let w=0;w<u;w++){const e=w*o[0];for(let t=0;t<d;t++){const n=t*b,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),i=e+r*o[1],a=e+s*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,p=i+n*o[2],g=i+r*o[2],m=a+n*o[2],b=a+r*o[2],w=d*l,k=d*s,I=u*l,C=u*s;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*C}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}const CF={kernelName:Rn,backendName:"cpu",kernelFunc:IF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SF(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;Q$(s,"resizeNearestNeighbor");const u=V(s.shape),[l,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*l*c*f),b=[i&&l>1?d-1:d,i&&c>1?p-1:p],y=[i&&l>1?l-1:l,i&&c>1?c-1:c],x=b[0]/y[0],v=b[1]/y[1];let w=0;for(let k=0;k<h;k++){const e=k*u[0];for(let t=0;t<l;t++){const n=a?x*(t+.5):x*t;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=e+r*u[1];for(let e=0;e<c;e++){const t=a?v*(e+.5):v*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=g[r+e];m[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,m)}const $F={kernelName:Nn,backendName:"cpu",kernelFunc:SF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NF(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;Q$([i,s],"resizeNearestNeighborGrad");const o=V(s.shape),u=V(i.shape),[l,c,h,d]=s.shape,[,p,f]=i.shape,g=new Float32Array(l*c*h*d),m=n.data.get(i.dataId).values,b=[a&&p>1?c-1:c,a&&f>1?h-1:h],y=[a&&p>1?p-1:p,a&&f>1?f-1:f],x=b[0]/y[0],v=b[1]/y[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,C=2*Math.ceil(k)+2;for(let S=0;S<l;S++){const e=S*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*w),s=Math.floor(r-I/2);for(let i=0;i<h;i++){const r=n+i*o[2],l=Math.floor(i*k),b=Math.floor(l-C/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<I;r++){const l=r+s;if(l<0||l>=p)continue;const d=e+l*u[1],g=l*x,y=Math.min(c-1,a?Math.round(g):Math.floor(g));if(t===y)for(let e=0;e<C;e++){const t=e+b;if(t<0||t>=f)continue;const r=d+t*u[2],s=t*v,l=Math.min(h-1,a?Math.round(s):Math.floor(s));i===l&&(o+=m[r+n])}}g[r+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}const TF={kernelName:Tn,backendName:"cpu",kernelFunc:NF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r;Q$(s,"reverse");const a=s.shape.length,o=T(i,s.shape);if(0===a)return oN({inputs:{x:s},backend:n});const u=new Cs(s.shape,s.dtype),l=n.bufferSync(s);for(let c=0;c<u.size;c++){const e=u.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=s.shape[e]-1-t[e])),u.set(l.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}const RF={kernelName:An,backendName:"cpu",kernelFunc:EF},_F={kernelName:kr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:a}=t,o=n,u=R(r.dtype,w(r.shape)),[l,c,h,d]=r.shape,[p,f]=ff(a,c,h),g=255,m=Math.sin(s),b=Math.cos(s),y=o.data.get(r.dataId).values;for(let v=0;v<l;v++){const e=v*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let a=0;a<d;a++){const o=[l,t,r,a],x=o[2],v=o[1];let w=(x-p)*b-(v-f)*m,k=(x-p)*m+(v-f)*b;w=Math.round(w+p),k=Math.round(k+f);let I=i;if("number"!==typeof i&&(I=3===a?g:i[a]),w>=0&&w<h&&k>=0&&k<c){const t=k*(h*d),n=w*d,r=e+t+n+a;I=y[r]}const C=e+n+s+a;u[C]=I}}}}const x=o.write(u,r.shape,r.dtype);return{dataId:x,shape:r.shape,dtype:r.dtype}}},AF=rN(Fn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),FF={kernelName:Fn,backendName:"cpu",kernelFunc:AF},DF=nN((e=>1/Math.sqrt(e))),OF=sN(Dn,DF),MF={kernelName:Dn,backendName:"cpu",kernelFunc:OF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LF(e,t,n,r,s,i,a,o,u,l){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return Ra(n,t.dtype);const p=u instanceof Cs?u:Ra(c,t.dtype);"string"===typeof u||"number"===typeof u?p.values.fill(u):"boolean"===typeof u&&p.values.fill(+u);for(let f=0;f<i;f++){const e=[];let i=0;for(let t=0;t<a;t++){const n=h[f*a+t];e.push(n),i+=n*o[t]}if(i<0||i>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)l?p.values[i*s+n]+=d[f*s+n]:p.values[i*s+n]=0===t.rank?d[0]:d[f*s+n]}return p}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zF(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=If(i,s,a),d=!0,p=n.bufferSync(s),f=n.bufferSync(i),g=LF(p,f,a,h,l,u,o,c,0,d);return n.makeTensorInfo(a,g.dtype,g.values)}const PF={kernelName:On,backendName:"cpu",kernelFunc:zF};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BF(e,t){let n=0,r=e.length,s=0;while(n<r)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function WF(e,t){let n=0,r=e.length,s=0;while(n<r)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}function UF(e,t,n,r,s,i){const a=_("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*s;for(let e=0;e<s;++e)a[u+e]="left"===i?BF(n,t[e+u]):WF(n,t[e+u])}return a}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VF(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,l=UF(o,u,s.shape[0],s.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",l)}const GF={kernelName:Ln,backendName:"cpu",kernelFunc:VF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HF(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t;Q$([r,s,i],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,c=Bs(s.dtype,i.dtype),h=q(w(s.shape),c);let d=0;const p=0===a||a>1||1===s.shape.length?1:w(s.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<p;e++)1===o[f]?h[d++]=u[f]:h[d++]=l[f];return n.makeTensorInfo(s.shape,c,h)}const jF={kernelName:zn,backendName:"cpu",kernelFunc:HF},KF=Cf,qF=Sf,XF=rN(Pn,(e=>e>=0?qF*e:KF*(Math.exp(e)-1))),YF={kernelName:Pn,backendName:"cpu",kernelFunc:XF},JF=rN(Vn,(e=>e<0?-1:e>0?1:0)),ZF={kernelName:Vn,backendName:"cpu",kernelFunc:JF},QF=rN(Wn,(e=>Math.sin(e))),eD={kernelName:Wn,backendName:"cpu",kernelFunc:QF},tD=rN(Un,(e=>Math.sinh(e))),nD={kernelName:Un,backendName:"cpu",kernelFunc:tD},rD=1.1920928955078125e-7,sD=Math.log(rD)+2,iD=rN(Hn,(e=>{const t=e>-sD,n=e<sD,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),aD={kernelName:Hn,backendName:"cpu",kernelFunc:iD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;Q$([s],"spaceToBatchND");const o=w(i),u=[[0,0]];u.push(...a);for(let w=1+i.length;w<s.shape.length;++w)u.push([0,0]);const l=UA.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=gf(l.shape,i,o,!1),h=mf(c.length,i.length,!1),d=bf(l.shape,i,o,!1),p={x:l},f={shape:c},g=LN({inputs:p,backend:n,attrs:f}),m={x:g},b={perm:h},y=QN({inputs:m,backend:n,attrs:b}),x={x:y},v={shape:d},k=LN({inputs:x,backend:n,attrs:v});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),k}const uD={kernelName:qn,backendName:"cpu",kernelFunc:oD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lD(e,t,n,r,s,i,a){const o=t[0],u=i[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(Jf(o));const e=_(n,0),t=_(s,0);return[e,[0,h],t,l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let m=0;m<o;++m){const t=e[m*h];if(t<0)throw new Error(Zf(m,t));if(t>=u)throw new Error(Qf(m,t,u));++f[t],d=d&&t>=p,p=t}let g=!0;for(let m=0;m<u;++m){const e=0===f[m];l[m]=e,g=g&&!e,f[m]=Math.max(f[m],1),m>0&&(f[m]+=f[m-1])}if(g&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],i=_(n,t*h),d=_(s,t),p=new Array(u).fill(0);for(let n=0;n<o;++n){const t=e[n*h],s=p[t],a=(0===t?0:f[t-1])+s;p[t]++;for(let r=0;r<h;++r)i[a*h+r]=e[n*h+r];d[a]=r[n],c[n]=a}for(let e=0;e<u;++e){const t=p[e];if(0===t){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=a}}return[i,[t,h],d,l,c]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cD(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,g]=lD(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const hD={kernelName:Jn,backendName:"cpu",kernelFunc:cD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dD(e,t,n,r,s){const i=w(r),a=t[0],o=s.length,u=[];let l=1,c=-1;for(let m=0;m<o;++m){const e=s[m];if(-1===e){if(-1!==c)throw new Error(eg(c,m));c=m,u.push(1)}else{if(e<0)throw new Error(tg(m,e));l*=e,u.push(e)}}if(-1!==c){if(l<=0)throw new Error(ng());const e=Math.trunc(i/l);if(l*e!==i)throw new Error(rg(r,u));u[c]=e}const h=w(u);if(h!==i)throw new Error(sg(r,u));const d=r.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const g=_(n,a*o);for(let m=0;m<a;++m){let t=0;for(let n=0;n<d;++n)t+=e[m*d+n]*p[n];for(let e=0;e<o;++e)g[m*o+e]=Math.trunc(t/f[e]),t%=f[e]}return[g,[a,o],u]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pD(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(i.dataId).values),[l,c,h]=dD(o,r.shape,r.dtype,a,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const fD={kernelName:Zn,backendName:"cpu",kernelFunc:pD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gD(e,t,n,r,s,i=!1,a=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?s[o-1]+1:0,h=c;if(h<0)throw new Error(ig());const d=t.slice();d[0]=h;const p=d.reduce(((e,t)=>e*t),1),f=_(n,p);if(0===o)return h>0&&f.fill(a),[f,d];if(h<=0)throw new Error(ig());let g=0,m=1,b=0,y=s[g];while(1){let t=0;if(m<o){if(t=s[m],y===t){++m;continue}if(y>=t)throw new Error(ag())}if(y<0||y>=h)throw new Error(og(y,h));y>b&&f.fill(a,b*l,y*l);for(let n=g;n<m;++n){const t=r[n];if(t<0||t>=u[0])throw new Error(ug(n,r[n],u[0]));for(let n=0;n<l;n++)f[y*l+n]+=e[t*l+n]}if(i)for(let e=0;e<l;e++)f[y*l+e]/=m-g;if(g=m,++m,b=y+1,y=t,m>o)break}return b<h&&f.fill(a,b*l,h*l),[f,d]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mD(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[l,c]=gD(a,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}const bD={kernelName:Qn,backendName:"cpu",kernelFunc:mD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yD(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[l,c]=gD(a,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}const xD={kernelName:er,backendName:"cpu",kernelFunc:yD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vD(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=If(i,s,o),p=!1,f=n.bufferSync(s);let g;switch(i.dtype){case"bool":{const e=n.bufferSync(i),t=Boolean(n.data.get(a.dataId).values[0]);g=LF(f,e,o,d,c,l,u,h,t,p);break}case"float32":{const e=n.bufferSync(i),t=n.data.get(a.dataId).values[0];g=LF(f,e,o,d,c,l,u,h,t,p);break}case"int32":{const e=n.bufferSync(i),t=n.data.get(a.dataId).values[0];g=LF(f,e,o,d,c,l,u,h,t,p);break}case"string":{const e=n.bufferSync(i),t=os(n.data.get(a.dataId).values[0]);g=LF(f,e,o,d,c,l,u,h,t,p);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}const wD={kernelName:tr,backendName:"cpu",kernelFunc:vD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=T(a,s.shape)[0],u=Yf(s,i,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=OT({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}const ID={kernelName:Xn,backendName:"cpu",kernelFunc:kD},CD=nN((e=>Math.sqrt(e))),SD=rN(jn,(e=>Math.sqrt(e))),$D={kernelName:jn,backendName:"cpu",kernelFunc:SD},ND={kernelName:rr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Q$(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let o=0;o<s.length;++o){const e=s[o];i[o]=e*e}const a=r.write(i,n.shape,n.dtype);return{dataId:a,shape:n.shape,dtype:n.dtype}}},TD=hN(((e,t)=>{const n=e-t;return n*n})),ED=_N(nr,TD),RD={kernelName:nr,backendName:"cpu",kernelFunc:ED},_D=nN(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),AD=sN(sr,_D),FD={kernelName:sr,backendName:"cpu",kernelFunc:AD},DD=rN(vr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),OD={kernelName:vr,backendName:"cpu",kernelFunc:DD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MD(e,t,n,r){const s=Ra(e,t.dtype);for(let i=0;i<s.size;i++){const e=s.indexToLoc(i),a=new Array(e.length);for(let t=0;t<a.length;t++)a[t]=e[t]*n[t]+r[t];s.set(t.get(...a),...e)}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;Q$(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:x,end:v,strides:w}=Iu(s.shape,i,a,o,u,l,c,h,d);let k;if(g)k=LN({inputs:{x:s},backend:n,attrs:{shape:f}});else if(m||b){y(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=cu(x,v,w),t=OT({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});k=LN({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(s),t=MD(p,e,w,x);k=n.makeTensorInfo(f,t.dtype,t.values)}return k}const zD={kernelName:ir,backendName:"cpu",kernelFunc:LD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class PD{constructor(e,t,n,r,s,i){this.separator=as(e),this.nGramWidths=t,this.leftPad=as(n),this.rightPad=as(r),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,i){for(let a=0;a<s;++a){const o=this.getPadWidth(i),u=Math.max(0,o-a),l=Math.max(0,o-(s-(a+1))),c=i-(u+l),h=t+(u>0?0:a-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length;const p=u+l+c-1;d+=p*this.separator.length,n[r+a]=new Uint8Array(d);const f=n[r+a];let g=0;const m=e=>e.forEach((e=>f[g++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,i=_("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=s;++t)i[t]=0;return[e,i]}i[0]=0;for(let o=1;o<=s;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),i[o]=i[o-1]+n}const a=new Array(i[s]);for(let o=0;o<s;++o){const n=t[o];let r=i[o];if(this.nGramWidths.forEach((s=>{const i=t[o+1]-t[o],u=this.getNumNGrams(i,s);this.createNGrams(e,n,a,r,u,s),r+=u})),this.preserveShort&&r===i[o]){const s=t[o+1]-t[o];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(e,n,a,r,u,i)}}return[a,i]}}function BD(e,t,n,r,s,i,a,o){return new PD(n,r,s,i,a,o).compute(e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WD(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=BD(d,p,s,i,a,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}const UD={kernelName:ar,backendName:"cpu",kernelFunc:WD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VD(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let i=e.indexOf(s);while(-1!==i){const t=e.subarray(0,i);n&&0===t.length||r.push(t),e=e.subarray(i+1),i=e.indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(s,i);n&&0===t.length||r.push(t),s=i+1}}function GD(e,t,n){const r=e.length,s=[];let i=0,a=0;const o=new Array(r);for(let d=0;d<r;++d){const r=s.length;VD(e[d],t,n,s);const u=s.length-r;o[d]=u,i+=u,a=Math.max(a,u)}const u=_("int32",2*i),l=new Array(i),c=[r,a];let h=0;for(let d=0;d<r;++d)for(let e=0;e<o[d];++e)u[2*h]=d,u[2*h+1]=e,l[h]=s[h],++h;return[u,l,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HD(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,u=n.data.get(a.dataId).values[0],[l,c,h]=GD(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const jD={kernelName:or,backendName:"cpu",kernelFunc:HD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KD(e,t){const n=_("int32",e.length);for(let r=0;r<e.length;++r)n[r]=ts(e[r]).modulo(t).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qD(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.data.get(i.dataId).values,o=KD(a,s);return n.makeTensorInfo(i.shape,"int32",o)}const XD={kernelName:ur,backendName:"cpu",kernelFunc:qD},YD=rN(cr,(e=>Math.tan(e))),JD={kernelName:cr,backendName:"cpu",kernelFunc:YD},ZD=rN(hr,(e=>Math.tanh(e))),QD={kernelName:hr,backendName:"cpu",kernelFunc:ZD};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eO(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:i}=t,{sliceRank:a,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=If(i,s,r.shape),h=!1,d=n.bufferSync(s),p=n.bufferSync(i),f=n.bufferSync(r),g=LF(d,p,r.shape,c,u,o,a,l,f,h);return n.makeTensorInfo(r.shape,g.dtype,g.values)}const tO={kernelName:Mn,backendName:"cpu",kernelFunc:eO};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nO(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=Ra(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const i=e.locToIndex(n);r.values[s]=e.values[i]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;Q$(s,"tile");const a=nO(n.bufferSync(s),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const sO={kernelName:dr,backendName:"cpu",kernelFunc:rO},iO=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function aO(e,t,n=0,r=e.length-1){while(r>n){if(r-n>600){const s=r-n+1,i=t-n+1,a=Math.log(s),o=.5*Math.exp(2*a/3),u=.5*Math.sqrt(a*o*(s-o)/s)*Math.sign(i-s/2),l=Math.max(n,Math.floor(t-i*o/s+u)),c=Math.min(r,Math.floor(t+(s-i)*o/s+u));aO(e,t,l,c)}const s=e[t];let i=n,a=r;m(e,n,t),iO(e[r],s)>0&&m(e,n,r);while(i<a){m(e,i,a),i++,a--;while(iO(e[i],s)<0)i+=1;while(iO(e[a],s)>0)a-=1}0===iO(e[n],s)?m(e,n,a):(a+=1,m(e,a,r)),a<=t&&(n=a+1),t<=a&&(r=a-1)}}function oO(e,t,n,r,s){const i=t[t.length-1],[a,o]=[e.length/i,i],u=R(n,a*r),l=R("int32",a*r);for(let h=0;h<a;h++){const t=h*o,n=e.subarray(t,t+o);let i=new Array(n.length);n.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(aO(i,r),i=i.slice(0,r)),s&&i.sort(iO);const a=h*r,c=u.subarray(a,a+r),d=l.subarray(a,a+r);for(let e=0;e<r;e++)c[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[Ra(c,n,u),Ra(c,"int32",l)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r;Q$(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=oO(o,s.shape,s.dtype,i,a);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}const lO={kernelName:pr,backendName:"cpu",kernelFunc:uO};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cO(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=s.shape,[f,g]=null!=l?l:[h,d],m=[c,f,g,p],b=V(s.shape),y=b[0],x=b[1],v=b[2],k=V(m),I=k[0],C=k[1],S=k[2],$=R(s.dtype,w(m));$.fill(u);const N=r.data.get(s.dataId).values,T=r.data.get(i.dataId).values;for(let w=0;w<c;++w){const e=1===i.shape[0]?T:T.subarray(8*w,8*w+8);for(let t=0;t<f;++t)for(let n=0;n<g;++n)for(let r=0;r<p;++r){let s;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const l=(e[0]*n+e[1]*t+e[2])/i,c=(e[3]*n+e[4]*t+e[5])/i,p=dO(l,d,o),f=dO(c,h,o);switch(a){case"nearest":s=yO(N,h,d,y,x,v,w,f,p,r,u);break;case"bilinear":s=xO(N,h,d,y,x,v,w,f,p,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const g=w*I+t*C+n*S+r;$[g]=s}return r.makeTensorInfo(m,s.dtype,$)}const E=r.write($,m,s.dtype);return{dataId:E,shape:s.shape,dtype:s.dtype}}const hO={kernelName:fr,backendName:"cpu",kernelFunc:cO};function dO(e,t,n){switch(n){case"reflect":return pO(e,t);case"wrap":return fO(e,t);case"nearest":return mO(e,t);case"constant":default:return gO(e,t)}}function pO(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return f(0,n,t-1)}function fO(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return f(0,n,t-1)}function gO(e,t){return e}function mO(e,t){return f(0,e,t-1)}function bO(e,t,n,r,s,i,a,o,u,l,c){const h=a*r+o*s+u*i+l;return 0<=o&&o<t&&0<=u&&u<n?e[h]:c}function yO(e,t,n,r,s,i,a,o,u,l,c){const h=Math.round(o),d=Math.round(u);return bO(e,t,n,r,s,i,a,h,d,l,c)}function xO(e,t,n,r,s,i,a,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1,g=(f-u)*bO(e,t,n,r,s,i,a,h,d,l,c)+(u-d)*bO(e,t,n,r,s,i,a,h,f,l,c),m=(f-u)*bO(e,t,n,r,s,i,a,p,d,l,c)+(u-d)*bO(e,t,n,r,s,i,a,p,f,l,c);return(p-o)*g+(o-h)*m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vO(e,t,n,r){const s=T(t,n)[0],i=[1,n[0],1];for(let f=0;f<s;f++)i[0]*=n[f];i[1]=n[s];for(let f=s+1;f<n.length;f++)i[2]*=n[f];const a=new Map,o=new Int32Array(n[s]),u=new Cs(i,r,e),l=[],c=1===i[0]&&1===i[2];for(let f=0;f<n[s];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(u.get(t,f,n));t=e.join(",")}const n=a.get(t);if(null!=n)o[f]=n;else{const e=a.size;a.set(t,e),o[f]=e,l.push(f)}}const h=i.slice();h[1]=a.size;const d=new Cs(h,r);l.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wO(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;Q$(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:u,indices:l}=vO(a,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}const kO={kernelName:mr,backendName:"cpu",kernelFunc:wO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IO(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],u=new Array(a-1);let l=0;for(let p=0;p<a;p++)p!==i&&(u[l++]=s.shape[p]);const c=new Array(a).fill(0),h=s.shape.slice();h[i]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[i]=p;const e=OT({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[p]=LN({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return d}const CO={kernelName:br,backendName:"cpu",kernelFunc:IO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r;Q$(s,"unsortedSegmentSum");const o=s.shape.length,u=i.shape.length,l=[],c=[],h=o-u;let d=i;for(let f=0;f<h;++f){const e=gR({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=e,c.push(e)}for(let f=0;f<a;++f){const e=ns(f,"int32"),t=n.makeTensorInfo([],"int32",e),r=nR({inputs:{a:t,b:d},backend:n}),i=EN({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=KE({inputs:{a:i,b:s},backend:n}),o=XE({inputs:{x:a},backend:n,attrs:{axis:0,keepDims:!1}});l.push(o),c.push(t),c.push(r),c.push(i),c.push(a),c.push(o)}const p=PA({inputs:l,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const $O={kernelName:yr,backendName:"cpu",kernelFunc:SO},NO=[UN,HN,KN,XN,MN,JN,nT,sT,aT,uT,cT,dT,fT,bT,xT,ST,NT,ET,_T,BN,FT,zT,UT,HT,KT,RN,YT,ZT,CN,eE,iE,oE,lE,hE,pE,gE,bE,xE,wE,IE,SE,NE,EE,_E,FE,OE,LE,PE,BE,WE,UE,GE,ZE,aN,eR,rR,hR,fR,mR,xR,FR,OR,LR,BR,VR,HR,KR,YR,QR,n_,i_,uN,o_,rE,l_,h_,p_,cN,m_,x_,k_,S_,N_,R_,A_,O_,L_,P_,U_,H_,K_,X_,J_,Q_,tA,rA,iA,uA,cA,pA,bA,qE,vA,IA,$A,EA,AA,DA,zA,BA,UA,HA,fN,qA,sF,uF,gF,yF,NN,kR,vF,mN,yN,zN,kF,CF,$F,TF,RF,_F,FF,MF,PF,GF,jF,YF,wN,ZF,eD,nD,MT,gA,aD,uD,hD,fD,bD,xD,wD,ID,$D,ND,RD,FD,OD,zD,UD,jD,XD,$R,YE,JD,QD,tO,sO,lO,hO,eT,kO,CO,$O,MA];for(const fY of NO)Fr(fY);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const TO={},EO={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function RO(e,t){TO[e]=t}function _O(e,t){if(!(e in TO)||null!=t){const n=FO(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;TO[e]=n}const n=TO[e];return null==n||n.isContextLost()?(delete TO[e],_O(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),TO[e])}function AO(e){if(ie().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}function FO(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?AO(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete TO[e]}),!1),ie().getBool("SOFTWARE_WEBGL_ENABLED")&&(EO.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",EO)||n.getContext("experimental-webgl",EO):n.getContext("webgl2",EO)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var DO,OO,MO;function LO(e,t){return[t,e]}function zO(e,t){return e*t}function PO(e){const t=w(e),n=Math.ceil(t/4);return C(n)}function BO(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function WO(e,t){const[n,r]=BO(e,t);return n*r*4}function UO(e,t){const n=e;let r,s,i,a,o,u,l,c,h,d;return 2===ie().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,i=e.RGBA,a=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VO(e,t){const n=t();return ie().getBool("DEBUG")&&GO(e),n}function GO(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+qO(e,t))}(function(e){e[e["DENSE"]=0]="DENSE",e[e["SHARED_BATCH"]=1]="SHARED_BATCH"})(DO||(DO={})),function(e){e[e["RENDER"]=0]="RENDER",e[e["UPLOAD"]=1]="UPLOAD",e[e["PIXELS"]=2]="PIXELS",e[e["DOWNLOAD"]=3]="DOWNLOAD"}(OO||(OO={})),function(e){e[e["UNPACKED_FLOAT16"]=0]="UNPACKED_FLOAT16",e[e["UNPACKED_FLOAT32"]=1]="UNPACKED_FLOAT32",e[e["PACKED_4X1_UNSIGNED_BYTE"]=2]="PACKED_4X1_UNSIGNED_BYTE",e[e["PACKED_2X2_FLOAT32"]=3]="PACKED_2X2_FLOAT32",e[e["PACKED_2X2_FLOAT16"]=4]="PACKED_2X2_FLOAT16"}(MO||(MO={}));const HO=5.96e-8,jO=65504;function KO(e){return!!(ie().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||HO<Math.abs(e)&&Math.abs(e)<jO)}function qO(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function XO(e,t){return bM(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function YO(e,t){const n=bM(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(VO(e,(()=>e.shaderSource(n,t))),VO(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function JO(e,t){const n=bM(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(VO(e,(()=>e.shaderSource(n,t))),VO(e,(()=>e.compileShader(n))),ie().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw QO(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const ZO=/ERROR: [0-9]+:([0-9]+):/g;function QO(e,t){const n=ZO.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),i=s.length.toString().length+2,a=s.map(((e,t)=>S((t+1).toString(),i)+e));let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const u=a.slice(0,r-1),l=a.slice(r-1,r),c=a.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${S(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function eM(e){return bM(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function tM(e,t){if(VO(e,(()=>e.linkProgram(t))),!ie().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function nM(e,t){if(VO(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function rM(e,t){const n=bM(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return VO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),VO(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function sM(e,t){const n=bM(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return VO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),VO(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function iM(e){return bM(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function aM(e,t){const n=ie().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const r=`[${e}x${t}]`,s=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function oM(e){return bM(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function uM(e,t,n,r,s,i,a){const o=e.getAttribLocation(t,n);return-1!==o&&(VO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),VO(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,i,a))),VO(e,(()=>e.enableVertexAttribArray(o))),!0)}function lM(e,t,n){yM(e,n),VO(e,(()=>e.activeTexture(e.TEXTURE0+n))),VO(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function cM(e,t,n){return bM(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function hM(e,t,n){return e.getUniformLocation(t,n)}function dM(e,t,n,r){VO(e,(()=>lM(e,t,r))),VO(e,(()=>e.uniform1i(n,r)))}function pM(e,t,n){VO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),VO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function fM(e,t){VO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),VO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function gM(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+mM(e,t))}function mM(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function bM(e,t,n){const r=VO(e,(()=>t()));if(null==r)throw new Error(n);return r}function yM(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){const e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function xM(e,t=2){return w(e.slice(0,e.length-t))}function vM(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function wM(e){let t=[1,1,1];const n=0===e.length||1===e.length&&1===e[0];return n||(t=[xM(e),...vM(e)]),t}function kM(e,t=!1){let n=ie().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=ie().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&ie().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,e=e.map(((t,n)=>n>=e.length-2?g(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=E(e);e=t.newShape}let s=w(e),i=null;e.length<=1&&s<=n?i=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const a=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||a)if(t){const t=xM(e);let n=2,r=2;e.length&&([n,r]=vM(e)),s=t*(n/2)*(r/2),i=C(s).map((e=>2*e))}else i=C(s);return i}function IM(e){return e%2===0}function CM(e,t){if(e=e.slice(-2),t=t.slice(-2),k(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(IM(n)&&IM(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&IM(e[0])&&IM(t[0])}let SM,$M;function NM(e){if(null==SM){const t=_O(e);SM=t.getParameter(t.MAX_TEXTURE_SIZE)}return SM}function TM(e){if(null==$M){const t=_O(e);$M=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$M)}function EM(e){if(0===e)return 0;let t;const n=_O(e);return t=RM(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:RM(n,"EXT_disjoint_timer_query")?1:0,t}function RM(e,t){const n=e.getExtension(t);return null!=n}function _M(e){try{const t=_O(e);if(null!=t)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function AM(e){if(0===e)return!1;const t=_O(e);if(1===e){if(!RM(t,"OES_texture_float"))return!1}else if(!RM(t,"EXT_color_buffer_float"))return!1;const n=DM(t);return n}function FM(e){if(0===e)return!1;const t=_O(e);if(1!==e){if(RM(t,"EXT_color_buffer_float"))return DM(t);const e="EXT_color_buffer_half_float";if(RM(t,e)){const n=t.getExtension(e);return OM(t,n)}return!1}if(!RM(t,"OES_texture_float"))return!1;if(!RM(t,"WEBGL_color_buffer_float"))return!1;const n=DM(t);return n}function DM(e){const t=UO(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,s,0,t.textureFormatFloat,t.textureTypeFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(i),a}function OM(e,t){const n=UO(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),o}function MM(e){if(2!==e)return!1;const t=_O(e),n=null!=t.fenceSync;return n}function LM(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&y("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const zM=ie();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PM(){let e,t,n,r,s,i,a,o,u,l;return 2===ie().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o=ie().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BM(e,t,n="index"){const r=V(t);return r.map(((t,s)=>{const i=`int ${e[s]} = ${n} / ${t}`,a=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`;return`${i}; ${a};`})).join("")}function WM(e,t,n="index"){const r=V(t);return r.map(((t,s)=>{const i=`int ${e[s]} = ${n} / outShapeStrides[${s}]`,a=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`})).join("")}function UM(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let i=n-3;i>=0;--i)s[i]=`(${s[i+1]} * ${r[i+1]})`;return s}function VM(e,t,n="index"){const r=e.map(((e,t)=>t)),s=UM(r,t);return s.map(((t,r)=>{const i=`int ${e[r]} = ${n} / ${s[r]}`,a=r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`;return`${i}; ${a};`})).join("")}function GM(e){const t=V(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function HM(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}zM.registerFlag("HAS_WEBGL",(()=>zM.getNumber("WEBGL_VERSION")>0)),zM.registerFlag("WEBGL_VERSION",(()=>_M(2)?2:_M(1)?1:0)),zM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),zM.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===zM.get("WEBGL_VERSION"))),zM.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),zM.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),zM.registerFlag("WEBGL_PACK",(()=>zM.getBool("HAS_WEBGL"))),zM.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_PACK_CLIP",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_PACK_REDUCE",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_LAZILY_UNPACK",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_CONV_IM2COL",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>zM.getBool("WEBGL_PACK"))),zM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>NM(zM.getNumber("WEBGL_VERSION")))),zM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>TM(zM.getNumber("WEBGL_VERSION")))),zM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=zM.getNumber("WEBGL_VERSION");return 0===e?0:EM(e)})),zM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>zM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!si())),zM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>AM(zM.getNumber("WEBGL_VERSION")))),zM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!zM.getBool("WEBGL_FORCE_F16_TEXTURES")&&zM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),zM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>FM(zM.getNumber("WEBGL_VERSION")))),zM.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>MM(zM.getNumber("WEBGL_VERSION")))),zM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>{const e=zM.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return e?4:0})),zM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),zM.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>si()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),zM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),zM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),zM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),zM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),zM.registerFlag("WEBGL_EXP_CONV",(()=>!1)),zM.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>zM.getBool("IS_TEST"))),zM.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),zM.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),zM.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),zM.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const jM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:KM}=a;function qM(e,t,n){const r=[];if(e.forEach((e=>{const t=w(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ML(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),i=e.map((e=>JM(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=t.texShape,o=PM(),u=eL(o);let l,c,h=rL(o);t.isPacked?(l=ZM(t.logicalShape,a,n.enableShapeUniforms),c=nL(o)):(l=QM(t.logicalShape,a,n.enableShapeUniforms),c=tL(o)),n.packedInputs&&(h+=oL);const d=[h,u,c,s,l,i,n.userCode].join("\n");return d}function XM(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return wL(e,t);case 1:return IL(e,t);case 2:return SL(e,t);case 3:return NL(e,t);case 4:return EL(e,t);case 5:return RL(e);case 6:return _L(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function YM(e,t){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return vL(e);case 1:return kL(e,t);case 2:return CL(e,t);case 3:return $L(e,t);default:return TL(e,t)}}function JM(e,t,n=!1,r){let s="";s+=n?YM(e,r):XM(e,r);const i=e.shapeInfo.logicalShape,a=t.logicalShape;return i.length<=a.length&&(s+=n?FL(e,t):DL(e,t)),s}function ZM(e,t,n){switch(e.length){case 0:return uL();case 1:return lL(e,t,n);case 2:return bL(e,t,n);case 3:return hL(e,t,n);default:return pL(e,t,n)}}function QM(e,t,n){switch(e.length){case 0:return uL();case 1:return cL(e,t,n);case 2:return yL(e,t,n);case 3:return dL(e,t,n);case 4:return fL(e,t,n);case 5:return gL(e,t);case 6:return mL(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function eL(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function tL(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function nL(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function rL(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${sL}\n    ${iL}\n    ${aL}\n  `;return t}const sL="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",iL="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",aL="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",oL="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function uL(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function lL(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}function cL(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function hL(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),i=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function dL(e,t,n){if(n){const t=WM(["r","c","d"],e);return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${t}\n    return ivec3(r, c, d);\n  }\n`}const r=BM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}function pL(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),i=s*Math.ceil(e[e.length-2]/2);let a=i,o="",u="b, r, c";for(let l=2;l<e.length-1;l++)a*=e[e.length-l-1],o=`\n      int b${l} = index / ${a};\n      index -= b${l} * ${a};\n    `+o,u=`b${l}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}function fL(e,t,n){if(n){const t=WM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${t}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=BM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}function gL(e,t){const n=BM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function mL(e,t){const n=BM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function bL(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(k(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function yL(e,t,n){return k(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function xL(e){return`offset${e}`}function vL(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=PM();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}function wL(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,i]=e.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=xL(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}function kL(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=PM();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}function IL(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${AL(e)}\n      }\n    `;const s=e.shapeInfo.texShape,i=s[0],a=s[1];if(1===a&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=xL(n);return 1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function CL(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=i[0],o=i[1],u=PM();if(null!=i&&k(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}function SL(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&k(n,i)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0],n=i[1];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=E(n),u=a;if(u.length<n.length){const n=LL(e,u),r=["row","col"];return`\n      ${XM(n,t)}\n      float ${s}(int row, int col) {\n        return ${s}(${zL(r,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${AL(e)}\n      }\n    `;const l=i[0],c=i[1],h=xL(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function $L(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=n.slice(1),i=[1,2],a=LL(e,r),o=["b","row","col"];return`\n        ${YM(a,t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${zL(o,i)});\n        }\n      `}const o=PM();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=a[0],l=a[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}function NL(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:u}=E(n),l=o;if(l.length<n.length){const n=LL(e,l),r=["row","col","depth"];return`\n        ${XM(n,t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${zL(r,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${AL(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=xL(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function TL(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=PM();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,a=i.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(i[a-1]/2);let d=h*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<a-1;g++)p=`int b${g}, `+p,d*=i[a-g-1],f=`b${g} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}function EL(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:u,keptDims:l}=E(n);if(u.length<n.length){const n=LL(e,u),r=["row","col","depth","depth2"];return`\n      ${XM(n,t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${zL(r,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${AL(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,m=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=xL(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}function RL(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,a=t[2]*i,o=t[1]*a,{newShape:u,keptDims:l}=E(t);if(u.length<t.length){const t=LL(e,u),n=["row","col","depth","depth2","depth3"];return`\n      ${XM(t)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${zL(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${AL(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=xL(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function _L(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=E(t);if(s.length<t.length){const t=LL(e,s),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${XM(t)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${zL(n,i)});\n      }\n    `}const a=t[5],o=t[4]*a,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${AL(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=xL(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function AL(e){const t=e.name,n=w(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function FL(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,a=t.logicalShape.length,o=KM(e.shapeInfo.logicalShape,t.logicalShape),u=OL(a),l=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=w(e.shapeInfo.logicalShape),g=1===f,m=w(t.logicalShape),b=1===m;if(1!==i||g||b){if(g&&!b)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}function DL(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.texShape,a=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&k(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=OL(u),c=KM(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}function OL(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ML(e,t,n){const{newShape:r,keptDims:s}=E(t),i=t.length,a=e&&3===i&&1===t[0],o=a?t.slice(1):r,u=!e&&i>1&&!k(t,n)&&r.length<i||a,l=u?o:t;return{useSqueezeShape:u,uniformShape:l,keptDims:s}}function LL(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function zL(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PL(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=qM(s,a,t),u=JO(e.gl,o),l=e.createProgram(u);return ie().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:a},BL(e,t,l)))}function BL(e,t,n){const r=[],s=[];let i,a,o,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===ie().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const h of t.variableNames){const s={name:h,uniform:e.getUniformLocation(n,h,c),offset:e.getUniformLocation(n,`offset${h}`,c)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,`${h}Shape`,c),s.texShape=e.getUniformLocation(n,`${h}TexShape`,c)),r.push(s)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),a=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const h of t.customUniforms)s.push(e.getUniformLocation(n,h.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:l,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:a}}function WL(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],i=s.shape;if(!k(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const a=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!k(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function UL(e,t,n,r,s){t.program.enableShapeUniforms||(WL(t.inShapeInfos,n),WL([t.outShapeInfo],[r]));const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):e.setOutputMatrixTexture(i.texture,a[0],a[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===ie().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){const r=n[u],{uniform:s,offset:i,shape:a,texShape:o}=t.variablesLocations[u];if(a){const{uniformShape:n}=ML(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(a,new Int32Array(n));break;case 2:e.gl.uniform2iv(a,new Int32Array(n));break;case 3:e.gl.uniform3iv(a,new Int32Array(n));break;case 4:e.gl.uniform4iv(a,new Int32Array(n));break;default:break}}if(o&&e.gl.uniform2i(o,r.texData.texShape[0],r.texData.texShape[1]),null!=s)if(r.isUniform)if(w(r.shape)<2)e.gl.uniform1f(s,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=r.texData.slice&&null!=i&&e.gl.uniform1i(i,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,s,u)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){const n=V(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n));break;default:break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let u=0;u<t.program.customUniforms.length;++u){const n=t.program.customUniforms[u],r=t.customUniformLocations[u],i=s[u];if("float"===n.type)e.gl.uniform1fv(r,i);else if("vec2"===n.type)e.gl.uniform2fv(r,i);else if("vec3"===n.type)e.gl.uniform3fv(r,i);else if("vec4"===n.type)e.gl.uniform4fv(r,i);else if("int"===n.type)e.gl.uniform1iv(r,i);else if("ivec2"===n.type)e.gl.uniform2iv(r,i);else if("ivec3"===n.type)e.gl.uniform3iv(r,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,i)}}e.executeProgram()}function VL(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:u}=ML(e.packedInputs,t.shape,i);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=V(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&k(t.shape,i),f=1===w(t.shape),g=bo(t.shape,n.shape),m=!e.packedInputs&&d===n.shape.length&&k(i,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${m}_${a?u:""}_${o.length}_${f}_${g}_${p}_${l}_${c}_${h}_${b}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+s+`${ie().getNumber("WEBGL_VERSION")}`,i}function GL(e){return ie().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class HL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=DO.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=PM();this.outputShape=e,this.enableShapeUniforms=GL(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?WM(["r","c","d"],e):BM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=DO.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=PM();this.outputShape=e,this.enableShapeUniforms=GL(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?WM(["r","c","d"],e):BM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class KL{constructor(e){this.variableNames=["A"],this.outTexUsage=OO.DOWNLOAD;const t=PM();this.outputShape=e,this.userCode=`\n      ${jM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=OO.DOWNLOAD;const t=PM();this.outputShape=e,this.userCode=`\n      ${jM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const XL={R:0,G:1,B:2,A:3};class YL{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=PM();this.outputShape=e,this.enableShapeUniforms=GL(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let i="";for(let a=0;a<n.length;a++){const e=n[a];i+=`\n          if(offset == ${a}) {\n            result = values[${XL[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?HM():GM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${i}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class JL{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=PM();this.outputShape=e,this.enableShapeUniforms=GL(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let t=0;t<=1;t++){const s=2*i+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?HM():GM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZL(e){const t=PM(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return YO(e,n)}function QL(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return rM(e,t)}function ez(e){const t=new Uint16Array([0,1,2,2,1,3]);return sM(e,t)}function tz(e,t,n,r,s,i){aM(t,n);const a=iM(e),o=e.TEXTURE_2D;return VO(e,(()=>e.bindTexture(o,a))),VO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),VO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),VO(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),VO(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===ie().getNumber("WEBGL_VERSION")?VO(e,(()=>e.texImage2D(o,0,r,t,n,0,s,i,null))):VO(e,(()=>e.texStorage2D(o,1,r,t,n))),VO(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:a,texShape:[n,t]}}function nz(e){return e.internalFormatFloat}function rz(e,t,n,r){const[s,i]=LO(t,n);return tz(e,s,i,nz(r),r.textureFormatFloat,e.FLOAT)}function sz(e){return e.internalFormatHalfFloat}function iz(e,t,n,r){const[s,i]=LO(t,n);return tz(e,s,i,sz(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function az(e){return e.downloadTextureFormat}function oz(e,t,n,r){const[s,i]=LO(t,n);return tz(e,s,i,az(r),e.RGBA,e.UNSIGNED_BYTE)}function uz(e){return e.internalFormatPackedFloat}function lz(e,t,n,r){const[s,i]=BO(t,n);return tz(e,s,i,uz(r),e.RGBA,e.FLOAT)}function cz(e){return e.internalFormatPackedHalfFloat}function hz(e,t,n,r){const[s,i]=BO(t,n);return tz(e,s,i,cz(r),e.RGBA,r.textureTypeHalfFloat)}function dz(e,t,n){const r=0,s=12,i=20;VO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));const a=uM(e,t,"clipSpacePos",n,3,i,r);return a&&uM(e,t,"uv",n,2,i,s)}function pz(e,t,n,r,s,i){let a,o,u;VO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(a=new Float32Array(n*r*4),o=e.FLOAT,u=i.internalFormatPackedFloat),a.set(s),2===ie().getNumber("WEBGL_VERSION")?VO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,a))):VO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,a))),VO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function fz(e,t,n){VO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===ie().getNumber("WEBGL_VERSION")?VO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):VO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===ie().getNumber("WEBGL_VERSION")?VO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):VO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),VO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function gz(e,t,n,r){const s=e.createBuffer();VO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const i=4,a=4,o=i*a*t*n;return VO(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ))),VO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),VO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}function mz(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function bz(e,t,n,r){const[s,i]=LO(t,n),a=4,o=new Uint8Array(zO(t*n,a));return VO(e,(()=>e.readPixels(0,0,s,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}function yz(e,t,n,r,s,i,a,o){const u=e,l=new Float32Array(WO(i,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function xz(e,t,n){const r=new Float32Array(t*n*4);return VO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vz{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=ie().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,RO(t,e)):this.gl=_O(t),e=this.gl,2===ie().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>VO(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>VO(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>VO(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>VO(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>VO(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>VO(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>VO(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>VO(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ie().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=XO(this.gl,e),RM(this.gl,t))this.textureHalfFloatExtension=XO(this.gl,t);else if(ie().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),RM(this.gl,r))this.colorBufferHalfFloatExtension=XO(this.gl,r);else if(ie().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",RM(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!RM(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=QL(this.gl),this.indexBuffer=ez(this.gl),this.framebuffer=oM(this.gl),this.textureConfig=UO(this.gl,this.textureHalfFloatExtension)}get debug(){return ie().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;VO(e,(()=>e.finish())),VO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),VO(e,(()=>e.deleteFramebuffer(this.framebuffer))),VO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),VO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),VO(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),rz(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),iz(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),oz(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),fz(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),pz(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),hz(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),lz(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(fM(this.gl,this.framebuffer),this.outputTexture=null),VO(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>bz(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,i){return yz(this.gl,e,t,n,r,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return mz(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=gz(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ie().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>xz(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=ZL(t));const n=eM(t);VO(t,(()=>t.attachShader(n,this.vertexShader))),VO(t,(()=>t.attachShader(n,e))),tM(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&nM(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;VO(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),dz(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(VO(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&nM(this.gl,this.program),VO(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?cM(this.gl,e,t):hM(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),VO(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),dM(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=BO(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&nM(this.gl,this.program),gM(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}VO(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),VO(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=XO(this.gl,2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await $((()=>this.disposed||this.isQueryAvailable(e,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl,n=t.getQueryParameter(e,t.QUERY_RESULT);return n/1e6}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT);return n/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=wz(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ie().platform&&(n=ie().platform.setTimeoutCustom.bind(ie().platform)),$((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),pM(this.gl,e,this.framebuffer),this.debug&&gM(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(pM(this.gl,this.outputTexture,this.framebuffer),this.debug&&gM(this.gl)):fM(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;pM(r,e,this.framebuffer),this.debug&&gM(r),this.outputTexture=e,VO(r,(()=>r.viewport(0,0,t,n))),VO(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),VO(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function wz(e){let t=0;for(;t<e.length;++t){const n=e[t]();if(!n)break}return t-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const{addImpl:kz,bincountImpl:Iz,bincountReduceImpl:Cz,bitwiseAndImpl:Sz,castImpl:$z,ceilImpl:Nz,concatImpl:Tz,equalImpl:Ez,expImpl:Rz,expm1Impl:_z,floorImpl:Az,gatherNdImpl:Fz,gatherV2Impl:Dz,greaterImpl:Oz,greaterEqualImpl:Mz,lessImpl:Lz,lessEqualImpl:zz,linSpaceImpl:Pz,logImpl:Bz,maxImpl:Wz,maximumImpl:Uz,minimumImpl:Vz,multiplyImpl:Gz,negImpl:Hz,notEqualImpl:jz,prodImpl:Kz,raggedGatherImpl:qz,raggedRangeImpl:Xz,raggedTensorToTensorImpl:Yz,rangeImpl:Jz,rsqrtImpl:Zz,scatterImpl:Qz,sigmoidImpl:eP,simpleAbsImpl:tP,sliceImpl:nP,sparseFillEmptyRowsImpl:rP,sparseReshapeImpl:sP,sparseSegmentReductionImpl:iP,sqrtImpl:aP,staticRegexReplaceImpl:oP,stridedSliceImpl:uP,stringNGramsImpl:lP,stringSplitImpl:cP,stringToHashBucketFastImpl:hP,subImpl:dP,tileImpl:pP,topKImpl:fP,transposeImpl:gP,uniqueImpl:mP}=o;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bP(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function yP(e,t){return 1===t?[e]:bP(e,t)}function xP(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vP{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=GL(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=yP("rc",this.rank),t=OL(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=GL(this.outputShape.length);let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${kP(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?HM():GM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function kP(e,t){const n=t?VM(["r","c","d"],"inputShape"):BM(["r","c","d"],e);return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IP{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=TP(t,n),s=EP(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=SP(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let a;return r===MO.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===MO.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===MO.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===MO.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===MO.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=TP(n,r),i=EP(t,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=SP(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=ie().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[i],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function CP(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function SP(e,t,n,r,s){const i=$P(t,r);let a;if(s){const[t,n]=BO(e[0],e[1]);a=t*n}else{const[t,n]=LO(e[0],e[1]);a=t*n}const o=CP(n,i);return a*o}function $P(e,t){switch(e){case MO.PACKED_2X2_FLOAT32:return uz(t);case MO.PACKED_2X2_FLOAT16:return cz(t);case MO.UNPACKED_FLOAT32:return nz(t);case MO.UNPACKED_FLOAT16:return sz(t);case MO.PACKED_4X1_UNSIGNED_BYTE:return az(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function NP(e){return ie().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?MO.PACKED_2X2_FLOAT32:MO.UNPACKED_FLOAT32:e?MO.PACKED_2X2_FLOAT16:MO.UNPACKED_FLOAT16}function TP(e,t){if(e===OO.UPLOAD)return MO.PACKED_2X2_FLOAT32;if(e===OO.RENDER||null==e)return NP(t);if(e===OO.DOWNLOAD||e===OO.PIXELS)return MO.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function EP(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class RP{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=GL(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const _P="if (isnan(x)) return x;",AP="return x;",FP="return abs(x);";const DP="return (x >= 0.0) ? x : (exp(x) - 1.0);",OP=_P+"\n  return (x < 0.0) ? 0.0 : x;\n",MP=_P+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",LP="return x;",zP="return 1.0 / (1.0 + exp(-1.0 * x));",PP="return x;",BP="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",WP="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",UP="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",VP="return 1.0 / (1.0 + exp(-1.0 * x));";class GP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=GL(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class HP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=GL(this.outputShape.length);const t=e.length,n=yP("rc",t),r=OL(t),s=xP(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const jP=fg,KP=1e-7,qP=1e-4,XP={};function YP(e){return e in XP||(XP[e]={}),XP[e]}const JP=ie().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),ZP=600;function QP(){return null==ie().global.screen?1024:ie().global.screen.height*ie().global.screen.width*window.devicePixelRatio*ZP/1024/1024}class eB extends h{nextDataId(){return eB.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ie().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof vz)t=e;else{const n=_O(ie().getNumber("WEBGL_VERSION"),e);t=new vz(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=_O(ie().getNumber("WEBGL_VERSION"));t=new vz(e),this.binaryCache=YP(ie().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new IP(this.gpgpu),this.numMBBeforeWarning=QP(),this.texData=new c(this,ki())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,i){const a=this.makeTensorInfo(t,n),o=this.texData.get(a.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const u=wM(t),l=new YL(u,!1,i),c=this.runWebGLProgram(l,[a],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(a),c.dataId}write(e,t,n){if((ie().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ie().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:OO.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){const t=this.texData.get(e);return t.refCount}return 0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,r,s){if(ie().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:OO.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:a,isPacked:o}=t;if(null!=i){let t;t=o?new GP(a,LP):new RP(a,LP);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=is()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);c=Af(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=is()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:a,isPacked:o}=t;if(null!=s){let t;t=o?new GP(r,LP):new RP(r,LP);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(ie().getBool("DEBUG")&&!ie().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ie().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==i&&ie().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...PO(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),t=e[0],n=e[1];l=Af(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=w(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;VO(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ki().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:i,dtype:a,isPacked:o,texture:u}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new GP(s,LP):new RP(s,LP);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:a}],a),i=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),i}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=ki().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>os(e)));return Ra(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ra(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!KO(n)){if(ie().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=w(t);if(ie().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...PO(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=ie().getBool("WEBGL_PACK")&&!0===r,a=i?wM(t):t,o=i?new qL(a):new KL(a),u=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ls(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=ls(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);a["kernelMs"]=b(e),a["getExtraProfileInfo"]=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else a["kernelMs"]={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:is(),endMs:null}}endTimer(e){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=is(),e)}async getQueryTime(e){if(ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,i)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=JP){return ie().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&w(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){$r("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return jP(e.shape,t)}packedUnaryOp(e,t,n){const r=new GP(e.shape,t),s=this.compileAndRun(r,[e],n);return ki().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=tP(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ie().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,FP,e.dtype);const t=new RP(e.shape,FP),n=this.compileAndRun(t,[e]);return ki().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&L(n[0])){const s=n.map((e=>as(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return ki().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new HP(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new vP(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){const n=[xM(e.shape),...vM(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[xM(t),...vM(t)],i=new wP(s,n),a=!0,o=[n],u=this.runWebGLProgram(i,[r],e.dtype,o,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:i}=n;if(null!=t){const e=w(s),n=t[0]*t[1]*4;y(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const a=wM(s);let o;o=r?new jL(a):new HL(a);const u=!0,l=[null!=t?t:PO(a)],c=this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:e}],i,l,u,t);return{dtype:i,shape:s,dataId:c.dataId}}runWebGLProgram(e,t,n,r,s=!1,i){const a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===DO.DENSE){const t=null!=i?i:PO(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===w(a.shape))return o.values=R(a.dtype,0),a;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&w(t.shape)<=ie().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!CM(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=VL(e,l,c),d=this.getAndSaveBinary(h,(()=>PL(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ie().get("ENGINE_COMPILE_ONLY")||UL(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const g=ie().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=is();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ie().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;const i=this.runWebGLProgram(e,t,n,r,s);return i}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!ie().getBool("IS_TEST")){const e=Object.keys(this.binaryCache);e.forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ci((()=>{if(!ie().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ie().getBool("DEBUG");ie().set("DEBUG",!1);const t=this.abs(Qa(1e-8)).dataSync()[0];if(ie().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?KP:qP}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=t;if(null!=i)return;const u=null!=this.activeTimers;let l;u&&(l=is());let c=t.texShape;if(null==c&&(c=kM(n,o),t.texShape=c),null!=s){const e=wM(n);let i,a=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([a,h]=BO(c[0],c[1])),i=o?new JL(e,d):new YL(e,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,r),g=this.texData.get(f.dataId);g.usage=d?OO.PIXELS:OO.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,s);const m=[[h,a]],b=!0,y=this.runWebGLProgram(i,[f],r,m,b),x=this.texData.get(y.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,ie().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=is()-l)}else{const e=this.acquireTexture(c,a,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=tB(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*O(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await rf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw QO(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:o}=BL(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:i,channels:a}=e,o=ki().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=o.writeTexture(r,t,n,s,i,a);return ki().makeTensorFromDataId(u,t,n,o)}}function tB(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}eB.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ii()&&Ni("webgl",(()=>new eB),2);const nB="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class rB{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=xo(t,n),this.enableShapeUniforms=GL(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const sB="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class iB{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=xo(t,n);const s=this.outputShape.length;this.enableShapeUniforms=GL(s);let i="";if(r)if(0===s||1===w(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=OL(s);if(i=`\n          ${e} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=yP("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aB(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const oB={kernelName:Tt,backendName:"webgl",kernelFunc:aB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uB(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(i.dataId),o=aB({inputs:{x:r},backend:n}),u=aB({inputs:{x:s},backend:n});return a.complexTensorInfos={real:o,imag:u},i}const lB={kernelName:Pe,backendName:"webgl",kernelFunc:uB},cB="return (a < 0.) ? b * a : a;",hB="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function dB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r,a=n.makeTensorInfo([],"float32",ns(i,"float32")),o=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iB(hB,s.shape,a.shape):new rB(cB,s.shape,a.shape),u=n.runWebGLProgram(o,[s,a],"float32");return n.disposeIntermediateTensorInfo(a),u}const pB={kernelName:Dt,backendName:"webgl",kernelFunc:dB},fB="return (a < 0.) ? b * a : a;",gB="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function mB(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,i=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iB(gB,r.shape,s.shape):new rB(fB,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}const bB={kernelName:bn,backendName:"webgl",kernelFunc:mB},yB="if (isnan(x)) return x;";function xB({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:a}=s,o=i,u=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const e=o.texData.get(a.dataId),t=n(e.values,u);return o.makeTensorInfo(a.shape,u,t)}const l=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;let c;return c=l?new GP(a.shape,t):new RP(a.shape,e),o.runWebGLProgram(c,[a],u)}}function vB({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:u,b:l}=a,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:l.shape},a=new rB(e,u.shape,l.shape);return c.runWebGLProgram(a,[s,i],Bs(n.dtype,r.dtype))})),i=uB({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),i}const h=i||Bs(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?dg(e):e,r="string"===u.dtype?dg(t):t,[i,a]=s(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(a,h),d=c.texData.get(o.dataId);return d.values=i,o}const d=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;let p;return p=d?new iB(t,u.shape,l.shape,n):new rB(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function wB(e,t=!1){if("linear"===e)return t?PP:AP;if("relu"===e)return t?WP:OP;if("elu"===e)return t?BP:DP;if("relu6"===e)return t?UP:MP;if("prelu"===e)return t?gB:fB;if("leakyrelu"===e)return t?hB:cB;if("sigmoid"===e)return t?VP:zP;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kB{constructor(e,t,n,r=!1,s=!1,i=!1,a=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=GL(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";a&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,m="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const IB={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class CB{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=xo(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const SB="return a * b;";function $B(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=Bs(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),i=new CB(IB.REAL,r.shape,s.shape),a=new CB(IB.IMAG,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(i,o,"float32"),l=n.runWebGLProgram(a,o,"float32"),c=uB({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,o]=Gz(r.shape,s.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i),l=n.texData.get(u.dataId);return l.values=a,u}let a;return a=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iB(SB,r.shape,s.shape):new rB(SB,r.shape,s.shape),n.runWebGLProgram(a,[r,s],i)}const NB={kernelName:an,backendName:"webgl",kernelFunc:$B};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TB(e,t,n){const r=[xM(e.shape),...vM(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},i=[xM(t),...vM(t)],a=new wP(i,r),o=!0,u=[r],l=n.runWebGLProgram(a,[s],e.dtype,u,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=n,o=w(s.shape),u=N(i,o),l=w(u);y(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(s.dataId);return!c.isPacked||CM(s.shape,u)||null!==c.texture&&CM(c.shape,u)?(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):TB(s,u,a)}const RB={kernelName:$n,backendName:"webgl",kernelFunc:EB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _B{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];const a=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${I(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AB{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FB(e){const t=[];while(0===t.length||1!==t[t.length-1].outSize){const n=t.length?t[t.length-1].outSize:e[1],r=pf(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function DB(e,t,n,r){const s=FB(e.shape);let i=e;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:u,outSize:l}=s[a];let c,h;c="mean"===n?0===a?new _B({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new _B({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new AB({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=i,i=r.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return i}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class OB{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;const r=OL(this.rank),s=MB(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}function MB(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class LB{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=OL(this.rank),s=bP("rc",this.rank),i=new Array(this.rank);for(let l=0;l<t.length;l++)i[t[l]]=s[l];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zB(e,t,n){const r=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new LB(e.shape,t):new OB(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PB(e,t,n,r){const s=t,i=e.shape.length,a=T(s,e.shape);let o=a;const u=Ec(o,i),l=null!=u;let c=e;l&&(c=zB(e,u,r),o=_c(o.length,i)),Tc("sum",o,i);const[h,d]=$c(c.shape,o);let p=h;n&&(p=Nc(h,a));const f=w(d),g=w(e.shape),m=g/f,b=EB({inputs:{x:c},attrs:{shape:[m,f]},backend:r}),y=Ws(e.dtype),x=DB(b,y,"sum",r),v=EB({inputs:{x:x},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),l&&r.disposeIntermediateTensorInfo(c),v}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;return PB(s,i,a,n)}const WB={kernelName:Kn,backendName:"webgl",kernelFunc:BB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:i}=r,a=n,o=s.shape.length,u=new Array(o);for(let c=0;c<u.length;c++)u[c]=s.shape[i[c]];let l;if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId),t=e.values,n=gP(t,s.shape,s.dtype,i,u);l=a.makeTensorInfo(u,s.dtype);const r=a.texData.get(l.dataId);r.values=n}else l=zB(s,i,a);return l}const VB={kernelName:gr,backendName:"webgl",kernelFunc:UB},GB=1e3;function HB({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),m=t.shape.slice(0,-2),b=w(g),x=w(m),v=xo(e.shape.slice(0,-2),t.shape.slice(0,-2)),k=v.concat([p,f]);y(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const I=n?[b,h,p]:[b,p,h],C=r?[x,f,d]:[x,d,f],S=EB({inputs:{x:e},backend:s,attrs:{shape:I}}),$=EB({inputs:{x:t},backend:s,attrs:{shape:C}}),N=[S,$],T=Math.max(b,x),E=n?S.shape[1]:S.shape[2],R=null!=i,_=null!=a,A="leakyrelu"===u,F=null!=u?wB(u,!0):null,D=R||_||A||null!=F;let O;if((1===p||1===f)&&E>GB&&!1===D){let e=S,t=$;n&&(e=UB({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=UB({inputs:{x:$},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const i=1!==f,a=1===f;let o=e;i&&(o=EB({inputs:{x:e},backend:s,attrs:{shape:[T,E,1]}}),N.push(o));const u=1===f?2:1;let l=t;a&&(l=EB({inputs:{x:t},backend:s,attrs:{shape:[T,1,E]}}),N.push(l));const c=$B({inputs:{a:o,b:l},backend:s});O=BB({inputs:{x:c},backend:s,attrs:{axis:u,keepDims:!0}}),N.push(c)}else{const u=Bs(e.dtype,t.dtype),l=new kB(I,C,[T,p,f],n,r,R,F,_,A),c=[S,$];if(null!=i&&c.push(i),_&&c.push(a),A){const e=s.makeTensorInfo([],"float32",ns(o,"float32"));c.push(e),N.push(e)}O=s.runWebGLProgram(l,c,u)}const M=EB({inputs:{x:O},backend:s,attrs:{shape:k}});N.push(O);for(const y of N)s.disposeIntermediateTensorInfo(y);return M}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jB(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return HB({a:s,b:i,transposeA:u,transposeB:l,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}const KB={kernelName:Ir,backendName:"webgl",kernelFunc:jB},qB="return abs(x);";function XB(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=tP(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new GP(r.shape,qB):new RP(r.shape,qB),n.runWebGLProgram(s,[r],r.dtype)}const YB={kernelName:de,backendName:"webgl",kernelFunc:XB},JB=_P+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",ZB=xB({opSnippet:JB}),QB={kernelName:pe,backendName:"webgl",kernelFunc:ZB},eW=_P+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",tW=xB({opSnippet:eW}),nW={kernelName:fe,backendName:"webgl",kernelFunc:tW},rW="return a + b;",sW=vB({opSnippet:rW,packedOpSnippet:rW,supportsComplex:!0,cpuKernelImpl:kz}),iW={kernelName:ge,backendName:"webgl",kernelFunc:sW};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aW{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oW{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uW(e){const{inputs:t,backend:n}=e,r=t;if(1===r.length)return aB({inputs:{x:r[0]},backend:n});if(r.length>ie().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),t=uW({inputs:r.slice(0,e),backend:n}),s=uW({inputs:r.slice(e),backend:n});return uW({inputs:[t,s],backend:n})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>Bs(e,t))),i=r.map((e=>e.shape)),a=ie().getBool("WEBGL_PACK"),o=a?new oW(r[0].shape,i):new aW(r[0].shape,i);return n.runWebGLProgram(o,r,s)}const lW={kernelName:me,backendName:"webgl",kernelFunc:uW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,u=T(i,s.shape);let l=u;const c=Ec(l,o);let h=s;null!=c&&(h=UB({inputs:{x:s},backend:n,attrs:{perm:c}}),l=_c(l.length,o)),Tc("all",l,o);const[d,p]=$c(h.shape,l),f=w(p),g=EB({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=DB(g,g.dtype,"all",n);let b;if(a){const e=Nc(d,u);b=EB({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=EB({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const hW={kernelName:be,backendName:"webgl",kernelFunc:cW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,u=T(i,s.shape);let l=u;const c=Ec(l,o);let h=s;null!=c&&(h=UB({inputs:{x:s},backend:n,attrs:{perm:c}}),l=_c(l.length,o)),Tc("any",l,o);const[d,p]=$c(h.shape,l),f=w(p),g=EB({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=DB(g,g.dtype,"any",n);let b;if(a){const e=Nc(d,u);b=EB({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=EB({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const pW={kernelName:ye,backendName:"webgl",kernelFunc:dW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fW{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gW{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,y(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,u=OL(o),l=yP("coords",o);let c,h;if(1===i){h=o+1;const e=OL(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),g=yP("sourceLocR",h-1).concat("inIdx.r"),m=yP("sourceLocG",h-1).concat("inIdx.g"),b=yP("sourceLocB",h-1).concat("inIdx.b"),x=yP("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mW(e,t,n,r=null){let s=t.shape[0],i=t.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const a=pf(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},u=new fW(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=mW(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function bW(e,t,n,r=null){const s=null!=r?r.shape:t.shape,i=s[s.length-1],a=pf(i),o=new gW(s,a,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){const r=bW(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function yW(e,t,n,r){const s=[n];if(Tc("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!ie().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId),a=null!==i&&i.isPacked;let o=t;a&&(o=e.unpackTensor(t),n.push(o));const[u,l]=$c(o.shape,s),c=w(l),h=EB({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(h);const d=mW(e,h,r);n.push(d);const p=EB({inputs:{x:d},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return bW(e,t,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=T(i,s.shape);const o=Ec(a,s.shape.length);let u=s;const l=[];null!=o&&(u=UB({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),a=_c(a.length,u.shape.length)),Tc("argMax",[a[0]],u.shape.length);const c=yW(n,u,a[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const vW={kernelName:xe,backendName:"webgl",kernelFunc:xW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=T(i,s.shape);const o=Ec(a,s.shape.length);let u=s;const l=[];null!=o&&(u=UB({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),a=_c(a.length,u.shape.length)),Tc("argMin",[a[0]],u.shape.length);const c=yW(n,u,a[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const kW={kernelName:ve,backendName:"webgl",kernelFunc:wW},IW=_P+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",CW=xB({opSnippet:IW}),SW={kernelName:we,backendName:"webgl",kernelFunc:CW},$W=_P+"return log(x + sqrt(x * x + 1.0));",NW=xB({opSnippet:$W}),TW={kernelName:ke,backendName:"webgl",kernelFunc:NW},EW=_P+"\n  return atan(x);\n",RW=xB({opSnippet:EW}),_W={kernelName:Ie,backendName:"webgl",kernelFunc:RW},AW=nB+"\n  return atan(a, b);\n",FW="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+sB+"\n  return result;\n",DW=vB({opSnippet:AW,packedOpSnippet:FW}),OW={kernelName:Se,backendName:"webgl",kernelFunc:DW},MW=_P+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",LW=xB({opSnippet:MW}),zW={kernelName:Ce,backendName:"webgl",kernelFunc:LW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class PW{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const y="max";let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const v=4*Math.floor(i/4),w=i%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${y}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class BW{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${u});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const v="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const k=4*Math.floor(i/4),I=i%4,C=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${v}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${u});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${C}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${C}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;LM(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:u}=r,l=1;y(Ku(a,l),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=Fu(s.shape,i,a,l,o,u);if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))return aB({inputs:{x:s},backend:n});const h=new PW(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}const UW={kernelName:$e,backendName:"webgl",kernelFunc:WW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=[1,1,1],h=Du(s.shape,i,a,c,o,u,l),d=new BW(h,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}const GW={kernelName:Te,backendName:"webgl",kernelFunc:VW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class HW{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jW{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KW(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=[1,1,1],d=Du(a.shape,o,u,h,l,c),p=new jW(d);return n.runWebGLProgram(p,[s],a.dtype)}const qW={kernelName:Ee,backendName:"webgl",kernelFunc:KW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XW(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;LM([s,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Fu(a.shape,o,u,1,l),h=new HW(c);return n.runWebGLProgram(h,[s],a.dtype)}const YW={kernelName:Ne,backendName:"webgl",kernelFunc:XW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JW(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;return HB({a:s,b:i,transposeA:a,transposeB:o,backend:n})}const ZW={kernelName:Re,backendName:"webgl",kernelFunc:JW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class QW{constructor(e,t,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],xo(e,t),xo(e,n);let a="0.0";null!=r&&(xo(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(xo(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class eU{constructor(e,t,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],xo(e,t),xo(e,n);let a="vec4(0.0)";null!=r&&(xo(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(xo(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const tU=({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=e;y(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),y(null==a||s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),y(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,i];let c=null;null!=a&&(c=a.shape,l.push(a));let h=null;null!=o&&(h=o.shape,l.push(o));const d=ie().getBool("WEBGL_PACK_NORMALIZATION")?new eU(r.shape,s.shape,i.shape,c,h,u):new QW(r.shape,s.shape,i.shape,c,h,u),p=t.runWebGLProgram(d,l,l[0].dtype);return p},nU={kernelName:It,backendName:"webgl",kernelFunc:tU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class rU{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=OL(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=iU(this.rank);let r;const s=e.map(((e,t)=>`sourceLoc.${sU[t]} = start[${t}] + coords.${sU[t]};`));r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${s.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const sU=["x","y","z","w","u","v"];function iU(e){if(1===e)return"sourceLoc";if(e<=6)return sU.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aU{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=OL(this.rank),n=yP("coords",this.rank),r=yP("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oU(e,t,n,r){const s=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=e.dtype;let o=wu(t,V(e.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),i}function uU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r,[o,u]=ku(s,i,a);if(uu(s,o,u),0===w(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=nP(e.values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=vu(s.shape,o,u);if(l||!c){const e=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aU(u):new rU(u),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),oU(s,o,u,n)}const lU={kernelName:Bn,backendName:"webgl",kernelFunc:uU},cU=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;y(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=gf(s.shape,i,o),l=mf(u.length,i.length),c=bf(s.shape,i,o),h=yf(a,i.length),d=xf(c,a,i.length),p=[],f=EB({inputs:{x:s},backend:n,attrs:{shape:u}}),g=UB({inputs:{x:f},backend:n,attrs:{perm:l}}),m=EB({inputs:{x:g},backend:n,attrs:{shape:c}}),b=uU({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b},hU={kernelName:_e,backendName:"webgl",kernelFunc:cU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=n.readSync(s.dataId),u=n.readSync(i.dataId),l=Iz(o,u,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,l)}const pU={kernelName:Ae,backendName:"webgl",kernelFunc:dU},fU="\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",gU="\n  return float(int(a.r) & int(b.r));\n";function mU(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=ie().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===a){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[i,a]=Sz(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(a,r.dtype),u=n.texData.get(o.dataId);return u.values=i,o}let o;return o=i?new iB(fU,r.shape,s.shape,!1):new rB(gU,r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}const bU={kernelName:Fe,backendName:"webgl",kernelFunc:mU};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yU(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.readSync(r.dataId),a=n.readSync(s.dataId),o=xo(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const xU={kernelName:Oe,backendName:"webgl",kernelFunc:yU},vU="return float(a != b);",wU=vB({opSnippet:vU,cpuKernelImpl:jz,dtype:"bool"}),kU={kernelName:un,backendName:"webgl",kernelFunc:wU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IU(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return aB({inputs:{x:s.complexTensorInfos.real},backend:n})}const CU={kernelName:In,backendName:"webgl",kernelFunc:IU},SU="return float(int(x));";function $U(e,t){const n=new RP(e.shape,SU),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return aB({inputs:{x:s},backend:n});const e=nh(s.shape),t=NU({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=uB({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=IU({inputs:{input:s},backend:n}),t=NU({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!D(s.dtype,i)){const e=aB({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId).values,[t,r,a]=$z(e,s.shape,s.dtype,i);return n.makeTensorInfo(t,r,a)}if("int32"===i)return $U(s,n);if("bool"===i){const e=n.makeTensorInfo([],"bool",R("bool",1)),t={a:s,b:e},r=wU({inputs:t,backend:n});return n.disposeIntermediateTensorInfo(e),r}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const TU={kernelName:Me,backendName:"webgl",kernelFunc:NU},EU="return ceil(x);",RU=xB({opSnippet:EU,packedOpSnippet:EU,cpuKernelImpl:Nz}),_U={kernelName:Le,backendName:"webgl",kernelFunc:RU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AU{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class FU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:i,clipValueMax:a}=r;let o;o=ie().getBool("WEBGL_PACK_CLIP")?new FU(s.shape):new AU(s.shape);const u=[[i],[a]];return n.runWebGLProgram(o,[s],s.dtype,u)}const OU={kernelName:ze,backendName:"webgl",kernelFunc:DU};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class MU{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LU(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function zU(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),i=new MU(r.shape),a=[LU(r,s.complexTensorInfos.real),LU(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}const PU={kernelName:Be,backendName:"webgl",kernelFunc:zU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class BU{constructor(e){this.outputShape=[],this.outputShape=af(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const e=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class WU{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=af(e,t);const n=this.outputShape,r=n.length,s=OL(r),i=yP("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const u=a[t],l=a.slice(-2),c=a.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];h+=`\n        if (${u} < ${o[f]}  && ${u} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${UU(a,u,e)}),\n            vec2(${UU(l,u,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${UU(a,u,p)}),\n          vec2(${UU(l,u,p)}));`,this.userCode=`\n      float getValue(${a.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function UU(e,t,n){const r=e.indexOf(t),s=e.map(((e,t)=>t===r?`${e} - ${n}`:e));return s.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VU(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return aB({inputs:{x:s.complexTensorInfos.imag},backend:n})}const GU={kernelName:Rt,backendName:"webgl",kernelFunc:VU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HU(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>IU({inputs:{input:e},backend:n}))),s=e.map((e=>VU({inputs:{input:e},backend:n}))),i=HU(r,t,n),a=HU(s,t,n),o=uB({inputs:{real:i,imag:a},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=w(e.shape.slice(t)),s=[-1,r];return EB({inputs:{x:e},backend:n,attrs:{shape:s}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),a=af(s.map((e=>e.shape)),1),o=1===s[0].shape[0],u=Tz(i,a,r,o),l=af(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=e.filter((e=>w(e.shape)>0)),a=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=a?new RP(e[0].shape,LP):new GP(e[0].shape,LP);return n.runWebGLProgram(t,e,r)}const o=ie().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const e=[];for(let s=0;s<i.length;s+=o){const r=i.slice(s,s+o);e.push(HU(r,t,n))}const r=HU(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(a){const e=new WU(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,r)}const{tensors2D:u,outShape:l}=jU(i,t,n),c=new BU(u.map((e=>e.shape))),h=n.runWebGLProgram(c,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=EB({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function jU(e,t,n){const r=af(e.map((e=>e.shape)),t),s=e.map((e=>EB({inputs:{x:e},attrs:{shape:[-1,w(e.shape.slice(t))]},backend:n})));return{tensors2D:s,outShape:r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KU(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=T(s,t[0].shape)[0],a=t.map((e=>e.shape));sf(a,i);const o=af(t.map((e=>e.shape)),i);if(0===w(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>w(e.shape)>0));return 1===u.length?aB({inputs:{x:u[0]},backend:n}):HU(u,i,n)}const qU={kernelName:We,backendName:"webgl",kernelFunc:KU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class XU{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,y=g?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class YU{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class JU{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=GL(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<l;g++)h+=`\n           vec4 xTexelC${2*g};\n           int xTexelC${2*g}Ready;\n           vec4 xTexelC${2*g+1};\n           int xTexelC${2*g+1}Ready;\n           vec4 xC${g};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let g=0;g<l;g++)h+=`\n           xTexelC${2*g} = vec4(0.0);\n           xTexelC${2*g}Ready = 0;\n           xTexelC${2*g+1} = vec4(0.0);\n           xTexelC${2*g+1}Ready = 0;\n           xC${g} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const t=2*m;if(h+=`\n           xC = xCCorner + ${t*o};\n           `,1===a){if(t<l&&(i%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<l)){const e=i%2===0?g(o):o;o%2===0&&i%2===1||o%2!==0&&i%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<l&&(i%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<l&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<l&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<l&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZU{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=GL(this.outputShape.length);const{dataFormat:n}=t,r=PM(),s="channelsLast"===n,i=s?1:2,a=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)u+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${l};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QU(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function eV({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1,g=!1;let m;const b=[];if(null!=i){const e=QU(i.shape,p);null!=e&&(i=EB({inputs:{x:i},backend:r,attrs:{shape:e}}),b.push(i))}if(null!=s){const e=QU(s.shape,p);null!=e&&(s=EB({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=(1===h||1===d)&&c>GB,v=!x&&l.isPacked&&p&&null!=l.texture&&u[2]%2!==0&&k(l.shape.slice(-3),u.slice(-3));if(v){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,y(CM(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const p=EB({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(p);const x=HB({a:h,b:p,backend:r,transposeA:f,transposeB:g,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),v=r.texData.get(x.dataId);y(v.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,v.shape=n.outShape,m=aB({inputs:{x:x},backend:r}),m.shape=n.outShape,b.push(x)}else{const u=n.outHeight*n.outWidth,l=EB({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=EB({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=HB({a:p?l:c,b:p?c:l,transposeA:!p,transposeB:g,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a});m=EB({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),b.push(l),b.push(c),b.push(h)}for(const y of b)r.disposeIntermediateTensorInfo(y);return m}function tV({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=u*l*c,m=d*h,b=[n.batchSize,g,m],y=!0,x=!1,v=[];if(null!=i){const e=QU(i.shape,f);null!=e&&(i=EB({inputs:{x:i},backend:r,attrs:{shape:e}}),v.push(i))}if(null!=s){const e=QU(s.shape,f);null!=e&&(s=EB({inputs:{x:s},backend:r,attrs:{shape:e}}),v.push(s))}const k=EB({inputs:{x:t},backend:r,attrs:{shape:[1,g,w(t.shape)/g]}});v.push(k);const I=new ZU(b,n),C=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(I,[e],"float32",C),$=EB({inputs:{x:S},backend:r,attrs:{shape:b}});v.push(S),v.push($);const N=null!=s,T=null!=i,E="leakyrelu"===o,R=o?wB(o,!0):null,_=new kB(f?$.shape:k.shape,f?k.shape:$.shape,f?[n.batchSize,m,n.outChannels]:[n.batchSize,n.outChannels,m],y,x,N,R,T,E),A=f?[$,k]:[k,$];if(s&&A.push(s),T&&A.push(i),E){const e=r.makeTensorInfo([],"float32",ns(a,"float32"));A.push(e),v.push(e)}const F=r.runWebGLProgram(_,A,"float32"),D=EB({inputs:{x:F},backend:r,attrs:{shape:n.outShape}});v.push(F);for(const w of v)r.disposeIntermediateTensorInfo(w);return D}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Xu(u),d=Ou(s.shape,i.shape,a,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&ie().getBool("WEBGL_EXP_CONV")){const e=new JU(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,i],"float32",t)}else if(ie().getBool("WEBGL_CONV_IM2COL"))p=tV({x:s,filter:i,convInfo:d,backend:n});else{const e=new XU(d);p=n.runWebGLProgram(e,[s,i],"float32")}else p=eV({x:s,filter:i,convInfo:d,backend:n});const f=EB({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}const rV={kernelName:Ue,backendName:"webgl",kernelFunc:nV};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sV{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iV{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aV{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oV{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Xu(u),d=Ou(s.shape,c,a,1,o,l,!1,h),p=new sV(d);return n.runWebGLProgram(p,[s,i],"float32")}const lV={kernelName:Ve,backendName:"webgl",kernelFunc:uV};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cV{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=GL(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hV(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Xu(l),d=Ou(a,i.shape,o,1,u,c,!1,h);if(ie().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new cV(d);return n.runWebGLProgram(t,[s,i],"float32",e)}{const e=new iV(d);return n.runWebGLProgram(e,[s,i],"float32")}}const dV={kernelName:Ge,backendName:"webgl",kernelFunc:hV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:u}=r,l=Mu(s.shape,i.shape,a,u,o),c=new YU(l);return n.runWebGLProgram(c,[s,i],"float32")}const fV={kernelName:He,backendName:"webgl",kernelFunc:pV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:u}=r,l=Mu(s.shape,u,a,1,o),c=new aV(l);return n.runWebGLProgram(c,[s,i],"float32")}const mV={kernelName:je,backendName:"webgl",kernelFunc:gV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bV(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:u}=r,l=Mu(u,i.shape,o,1,a),c=new oV(l);return n.runWebGLProgram(c,[s,i],"float32")}const yV={kernelName:Ke,backendName:"webgl",kernelFunc:bV},xV=yB+"\n  return cos(x);\n",vV=`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${sB}\n  return result;\n`,wV=xB({opSnippet:xV,packedOpSnippet:vV}),kV={kernelName:qe,backendName:"webgl",kernelFunc:wV},IV="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",CV=xB({opSnippet:IV}),SV={kernelName:Xe,backendName:"webgl",kernelFunc:CV};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $V{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const NV=e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new $V(s.shape,i.shape,o,u,l);return n.runWebGLProgram(c,[s,i,a],"float32")},TV={kernelName:Ze,backendName:"webgl",kernelFunc:NV};var EV;(function(e){e["Prod"]="*",e["Sum"]="+"})(EV||(EV={}));class RV{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,i=this.op===EV.Prod?"1.0":"0.0",a=n?i:`getX(${_V(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${OL(s)} coords = getOutputCoords();\n        int end = ${AV(s,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${AV(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${_V(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function _V(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function AV(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FV(e,t,n,r,s,i){const a=t.shape.length,o=Ec([r],a);let u=t;null!=o&&(u=UB({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=_c(1,a)[0];if(l!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=aB({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const t=new RV(e,u.shape,!1,i),r=[[d]],s=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const t=new RV(e,u.shape,s,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=Rc(o),t=UB({inputs:{x:h},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),t}return h}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return FV(EV.Prod,s,n,i,a,o)}const OV={kernelName:Ye,backendName:"webgl",kernelFunc:DV};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return FV(EV.Sum,s,n,i,a,o)}const LV={kernelName:Je,backendName:"webgl",kernelFunc:MV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(i.dataId),r=Iz(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(i),r=Cz(e,t,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const PV={kernelName:Qe,backendName:"webgl",kernelFunc:zV};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class BV{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r,o=s.shape[0],u="NHWC"===a?s.shape[1]:s.shape[2],l="NHWC"===a?s.shape[2]:s.shape[3],c="NHWC"===a?s.shape[3]:s.shape[1],h=u*i,d=l*i,p=c/(i*i),f="NHWC"===a?[o,h,d,p]:[o,p,h,d],g=new BV(f,i,a);return n.runWebGLProgram(g,[s],s.dtype)}const UV={kernelName:et,backendName:"webgl",kernelFunc:WV};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class VV{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=GL(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class GV{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=GL(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let g=0;g<c;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let b=0;b<(h+1)/2;b++){const e=2*b;if(d+=`\n          xC = xCCorner + ${e*u};\n          `,1===o){if(e<c&&(a%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===u&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=a%2===0?g(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(a%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),y(Ku(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=Ou(s.shape,i.shape,a,c,o,l,!0);let d;d=ie().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new GV(h):new VV(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,i],"float32",p)}const jV={kernelName:tt,backendName:"webgl",kernelFunc:HV};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class KV{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qV{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Ou(s.shape,c,a,o,u,l,!0),d=new KV(h);return n.runWebGLProgram(d,[s,i],"float32")}const YV={kernelName:nt,backendName:"webgl",kernelFunc:XV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JV(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Ou(c,i.shape,a,o,u,l,!0),d=new qV(h);return n.runWebGLProgram(d,[s,i],"float32")}const ZV={kernelName:rt,backendName:"webgl",kernelFunc:JV};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class QV{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eG(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],i=w(r.shape),a=EB({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new QV(i),u=n.runWebGLProgram(o,[a],a.dtype),l=EB({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}const tG={kernelName:st,backendName:"webgl",kernelFunc:eG};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class nG{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:u}=r,l=Au(s.shape,i.shape,a,o,"NHWC",u);let c;const h=new nG(l);c=n.runWebGLProgram(h,[s,i],"float32");const d=EB({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}const sG={kernelName:it,backendName:"webgl",kernelFunc:rG};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iG(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:u}=Gf(s,i.length);jf(a.length,u,i);const{path:l,steps:c}=Kf(o,u),h=c.length;let d=null,p=a.length;const f=[];for(let g=0;g<h;++g){for(const e of c[g]){const{permutationIndices:t,expandDims:r}=Hf(p,u[e]);let s;qf(t)?s=i[e]:(s=UB({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);k(s.shape,a)||(s=EB({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=$B({inputs:{a:s,b:d},backend:n}),f.push(d))}g<h-1&&(l[g]>=0&&(d=BB({inputs:{x:d},backend:n,attrs:{axis:l[g]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}const aG={kernelName:ct,backendName:"webgl",kernelFunc:iG},oG="return (x >= 0.0) ? x : (exp(x) - 1.0);",uG="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",lG=xB({opSnippet:oG,packedOpSnippet:uG}),cG={kernelName:ht,backendName:"webgl",kernelFunc:lG},hG="return (b >= 0.0) ? a : a * (b + 1.0);",dG="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",pG=e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,i=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new iB(dG,r.shape,s.shape):new rB(hG,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)},fG={kernelName:dt,backendName:"webgl",kernelFunc:pG},gG="\n  return vec4(equal(a, b));\n",mG="return float(a == b);",bG=vB({opSnippet:mG,packedOpSnippet:gG,dtype:"bool",cpuKernelImpl:Ez}),yG={kernelName:ft,backendName:"webgl",kernelFunc:bG},xG=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${$f};\n  float a1 = ${Nf};\n  float a2 = ${Tf};\n  float a3 = ${Ef};\n  float a4 = ${Rf};\n  float a5 = ${_f};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,vG=xB({opSnippet:xG}),wG={kernelName:pt,backendName:"webgl",kernelFunc:vG},kG=yB+"\n  return exp(x);\n",IG="\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",CG=xB({opSnippet:kG,packedOpSnippet:IG,cpuKernelImpl:Rz,dtype:"float32"}),SG={kernelName:gt,backendName:"webgl",kernelFunc:CG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $G(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:i}=t,a=i.shape.length,o=i.shape.slice();let u=s;return s<0&&(y(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),u=a+s+1),o.splice(u,0,1),EB({inputs:{x:i},backend:r,attrs:{shape:o}})}const NG={kernelName:mt,backendName:"webgl",kernelFunc:$G},TG="return exp(x) - 1.0;",EG=xB({opSnippet:TG,packedOpSnippet:TG,cpuKernelImpl:_z}),RG={kernelName:bt,backendName:"webgl",kernelFunc:EG};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _G{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AG(e,t,n){const r=n.texData.get(e.dataId),s=w(e.shape),i=e.shape[e.shape.length-1],a=s/i,o=EB({inputs:{x:e},backend:n,attrs:{shape:[a,i]}}),u=o.shape,l=new _G("real",u,t),c=new _G("imag",u,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=uB({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const g=EB({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),g}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FG(e){const{inputs:t,backend:n}=e,{input:r}=t;return AG(r,!1,n)}const DG={kernelName:yt,backendName:"webgl",kernelFunc:FG};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class OG{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MG(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||B(s),"string"===i){const e=_(i,w(r));return e.fill(s),t.makeTensorInfo(r,i,e)}{const e=new OG(r,s),n=[[s]];return t.runWebGLProgram(e,[],i,n)}}const LG={kernelName:xt,backendName:"webgl",kernelFunc:MG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zG{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const PG={kernelName:vt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new zG(n.shape),i=r.runWebGLProgram(s,[n],n.dtype);return i}},BG="return floor(x);",WG=xB({opSnippet:BG,packedOpSnippet:BG,cpuKernelImpl:Az}),UG={kernelName:wt,backendName:"webgl",kernelFunc:WG},VG="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",GG="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",HG=vB({opSnippet:VG,packedOpSnippet:GG,dtype:"int32"}),jG={kernelName:kt,backendName:"webgl",kernelFunc:HG};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class KG{constructor(e){this.variableNames=["A"];const t=PM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qG{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=PM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const XG={kernelName:wr,backendName:"webgl",kernelFunc:ZG};let YG,JG=ie().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function ZG(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:i}=r,a="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,i];if(o||a){const e=ie().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=YG&&e===JG||(JG=e,YG=document.createElement("canvas").getContext("2d",{willReadFrequently:JG})),YG.canvas.width=u,YG.canvas.height=l,YG.drawImage(s,0,0,u,l),s=YG.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=OO.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=ie().getBool("WEBGL_PACK")?new qG(h):new KG(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,g=Xu(c),m=Ou(s.shape,i.shape,u,h,l,d,!1,g);let b;const y=[],x=null!=a,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=EB({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(x&&e.push(t(a,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",ns(f,"float32"));e.push(t),y.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&ie().getBool("WEBGL_EXP_CONV")){const e=p?wB(p,!0):null,t=new JU(m,x,e,v,w),r=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],s=k();b=n.runWebGLProgram(t,s,"float32",r)}else if(ie().getBool("WEBGL_CONV_IM2COL"))b=tV({x:s,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?wB(p,!1):null,t=new XU(m,x,e,v,w),r=k();b=n.runWebGLProgram(t,r,"float32")}else b=eV({x:s,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=EB({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}const eH={kernelName:Cr,backendName:"webgl",kernelFunc:QG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tH(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let g=c;null==g&&(g=[1,1]),y(Ku(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const m=Ou(s.shape,i.shape,u,g,l,h,!0),b=ie().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,x=d?wB(d,b):null,v=[s,i],w=null!=a,k=null!=o,I="leakyrelu"===d;if(w&&v.push(a),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",ns(p,"float32"));v.push(e),f.push(e)}let C;C=b?new GV(m,w,x,k,I):new VV(m,w,x,k,I);const S=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],$=n.runWebGLProgram(C,v,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}const nH={kernelName:Sr,backendName:"webgl",kernelFunc:tH};class rH{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=OL(n.length);let i="\n    int index;";for(let a=0;a<this.sliceDim;a++)i+=`\n          index = round(getIndices(coords[0], ${a}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};\n          flattenIndex += index * ${this.strides[a]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sH(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=s.shape,a=i[i.length-1],o=w(r.shape),[u,l,c,h]=vf(r,s),d=EB({inputs:{x:s},backend:n,attrs:{shape:[l,a]}}),p=EB({inputs:{x:r},backend:n,attrs:{shape:[w(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),i=Fz(e,t,r.dtype,l,a,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,i.values)}const f=new rH(a,h,[l,c],r.shape),g=n.runWebGLProgram(f,[p,d],p.dtype),m=EB({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}const iH={kernelName:St,backendName:"webgl",kernelFunc:sH};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aH{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=OL(this.rank),r=oH(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function oH(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)2===s?r.push("index"):r.push(`${n[s]}`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uH(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r,u=T(a,s.shape)[0];if(ie().get("DEBUG")){const e=n.readSync(i.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];y(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=hg(s,i,u,o),c=w(i.shape),h=[],d=EB({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=EB({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=Dz(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const g=new aH(d.shape,f),m=n.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const b=EB({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const lH={kernelName:Ct,backendName:"webgl",kernelFunc:uH},cH="return float(a > b);",hH="\n  return vec4(greaterThan(a, b));\n",dH=vB({opSnippet:cH,packedOpSnippet:hH,cpuKernelImpl:Oz,dtype:"bool"}),pH={kernelName:$t,backendName:"webgl",kernelFunc:dH},fH="return float(a >= b);",gH="\n  return vec4(greaterThanEqual(a, b));\n",mH=vB({opSnippet:fH,packedOpSnippet:gH,dtype:"bool",cpuKernelImpl:Mz}),bH={kernelName:Nt,backendName:"webgl",kernelFunc:mH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yH(e){const{inputs:t,backend:n}=e,{input:r}=t;return AG(r,!0,n)}const xH={kernelName:Et,backendName:"webgl",kernelFunc:yH},vH="return float(!isnan(x) && !isinf(x));",wH=xB({opSnippet:vH,dtype:"bool"}),kH={kernelName:_t,backendName:"webgl",kernelFunc:wH},IH="return float(isinf(x));",CH=xB({opSnippet:IH,dtype:"bool"}),SH={kernelName:At,backendName:"webgl",kernelFunc:CH},$H="return float(isnan(x));",NH=xB({opSnippet:$H,dtype:"bool"}),TH={kernelName:Ft,backendName:"webgl",kernelFunc:NH},EH="return float(a < b);",RH="\n  return vec4(lessThan(a, b));\n",_H=vB({opSnippet:EH,packedOpSnippet:RH,cpuKernelImpl:Lz,dtype:"bool"}),AH={kernelName:Ot,backendName:"webgl",kernelFunc:_H},FH="return float(a <= b);",DH="\n  return vec4(lessThanEqual(a, b));\n",OH=vB({opSnippet:FH,packedOpSnippet:DH,cpuKernelImpl:zz,dtype:"bool"}),MH={kernelName:Mt,backendName:"webgl",kernelFunc:OH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LH(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=Pz(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}const zH={kernelName:Lt,backendName:"webgl",kernelFunc:LH},PH=yB+"\n  return x < 0.0 ? 0./0. : log(x);\n",BH="\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",WH=xB({opSnippet:PH,packedOpSnippet:BH,cpuKernelImpl:Bz}),UH={kernelName:zt,backendName:"webgl",kernelFunc:WH},VH=yB+"\n  return log(1.0 + x);\n",GH=xB({opSnippet:VH}),HH={kernelName:Pt,backendName:"webgl",kernelFunc:GH},jH="return float(a >= 1.0 && b >= 1.0);",KH="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",qH=vB({opSnippet:jH,packedOpSnippet:KH,dtype:"bool"}),XH={kernelName:Bt,backendName:"webgl",kernelFunc:qH},YH="return float(!(x >= 1.0));",JH=xB({opSnippet:YH}),ZH={kernelName:Wt,backendName:"webgl",kernelFunc:JH},QH="return float(a >= 1.0 || b >= 1.0);",ej="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",tj=vB({opSnippet:QH,packedOpSnippet:ej,dtype:"bool"}),nj={kernelName:Ut,backendName:"webgl",kernelFunc:tj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class rj{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sj{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ij=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:u}=r,l=ie().getBool("WEBGL_PACK_NORMALIZATION")?new sj(s.shape,i,a,o,u):new rj(s.shape,i,a,o,u);return n.runWebGLProgram(l,[s],s.dtype)},aj={kernelName:Gt,backendName:"webgl",kernelFunc:ij};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oj{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const uj=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new oj(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,i,a],s.dtype)},lj={kernelName:Ht,backendName:"webgl",kernelFunc:uj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cj(e,t,n,r){const s=w(t),i=w(e.shape),a=i/s,o=EB({inputs:{x:e},attrs:{shape:[a,s]},backend:r}),u=DB(o,e.dtype,"max",r),l=EB({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hj(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,u=T(i,s.shape);let l=u;const c=Ec(l,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId),t=e.values,r=new Array(o);for(let n=0;n<r.length;n++)r[n]=s.shape[c[n]];const i=gP(t,s.shape,s.dtype,c,r);p=n.makeTensorInfo(r,s.dtype);const a=n.texData.get(p.dataId);a.values=i}else p=zB(s,c,n);l=_c(l.length,o)}Tc("max",l,o);const[f,g]=$c(p.shape,l);let m,b=f;if(a&&(b=Nc(f,u)),d){const e=n.texData.get(p.dataId),t=e.values,r=Wz(t,w(g),b,s.dtype);m=n.makeTensorInfo(b,s.dtype);const i=n.texData.get(m.dataId);i.values=r}else m=cj(p,g,b,n);return h&&n.disposeIntermediateTensorInfo(p),m}const dj={kernelName:jt,backendName:"webgl",kernelFunc:hj},pj=nB+"\n  return max(a, b);\n",fj="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+sB+"\n  return result;\n",gj=vB({opSnippet:pj,packedOpSnippet:fj,cpuKernelImpl:Uz}),mj={kernelName:Kt,backendName:"webgl",kernelFunc:gj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bj(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;LM(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:u}=r,l=1;y(Ku(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=Fu(s.shape,i,a,l,o,u);if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))return aB({inputs:{x:s},backend:n});const h=new PW(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}const yj={kernelName:qt,backendName:"webgl",kernelFunc:bj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xj(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=[1,1,1],h=Du(s.shape,i,a,c,o,l,u),d=new BW(h,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}const vj={kernelName:Yt,backendName:"webgl",kernelFunc:xj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wj{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,o=i-1-e.padInfo.left,u=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kj{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ij(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=[1,1,1],d=Du(a.shape,o,u,h,l,c),p=new BW(d,"max",!0),f=n.runWebGLProgram(p,[a],a.dtype),g=new kj(d),m=n.runWebGLProgram(g,[s,f],a.dtype);return n.disposeIntermediateTensorInfo(f),m}const Cj={kernelName:Jt,backendName:"webgl",kernelFunc:Ij};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sj(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;LM([i,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Fu(o.shape,u,l,1,c,h),p=!0,f=new PW(d,"max",p),g=n.runWebGLProgram(f,[o],o.dtype),m=new wj(d),b=n.runWebGLProgram(m,[s,g],o.dtype);return n.disposeIntermediateTensorInfo(g),b}const $j={kernelName:Xt,backendName:"webgl",kernelFunc:Sj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nj(e,t,n,r){let s=new PW(n,"max",!1);const i=r.runWebGLProgram(s,[e],"float32");s=new PW(n,"max",!0,!0,t);const a=r.runWebGLProgram(s,[e],"float32");return[i,a]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Tj={kernelName:Zt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=t,u=n;y(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];y(Ku(i,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const c=Fu(r.shape,s,i,l,a),[h,d]=Nj(r,o,c,u);return[h,d]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ej(e,t,n,r){const s=w(t),i=w(e.shape),a=i/s,o=EB({inputs:{x:e},attrs:{shape:[a,s]},backend:r}),u=DB(o,"float32","mean",r),l=EB({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Rj={kernelName:Qt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:i}=t,a=n,o=r.shape.length,u=T(i,r.shape);let l=u;const c=Ec(l,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=a.texData.get(f.dataId),t=e.values,n=new Array(o);for(let a=0;a<n.length;a++)n[a]=r.shape[c[a]];const s=gP(t,r.shape,r.dtype,c,n);f=a.makeTensorInfo(n,r.dtype);const i=a.texData.get(f.dataId);i.values=s}else f=zB(r,c,a);p.push(f),l=_c(l.length,o)}Tc("sum",l,o);const[g,m]=$c(f.shape,l);let b=g;s&&(b=Nc(g,u));const y=Ej(f,m,b,a);for(const x of p)a.disposeIntermediateTensorInfo(x);return y}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _j(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,u=T(i,s.shape);let l=u;const c=Ec(l,o);let h=s;null!=c&&(h=UB({inputs:{x:s},backend:n,attrs:{perm:c}}),l=_c(l.length,s.shape.length)),Tc("min",l,o);const[d,p]=$c(h.shape,l),f=w(p),g=EB({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=DB(g,g.dtype,"min",n);let b;if(a){const e=Nc(d,u);b=EB({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=EB({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const Aj={kernelName:en,backendName:"webgl",kernelFunc:_j},Fj=nB+"\n  return min(a, b);\n",Dj="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+sB+"\n  return result;\n",Oj=vB({opSnippet:Fj,packedOpSnippet:Dj,cpuKernelImpl:Vz}),Mj={kernelName:tn,backendName:"webgl",kernelFunc:Oj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Lj{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=OL(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zj{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=OL(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=yP("rc",r),u=yP("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Pj=({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:i}=n,a=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zj(r.shape,s,i):new Lj(r.shape,s,i),o=t.runWebGLProgram(a,[r],r.dtype);return o},Bj={kernelName:nn,backendName:"webgl",kernelFunc:Pj},Wj="if (b == 0.0) return NAN;\n  return mod(a, b);",Uj="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+sB+"\n  return result;\n",Vj=vB({opSnippet:Wj,packedOpSnippet:Uj}),Gj={kernelName:rn,backendName:"webgl",kernelFunc:Vj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Hj{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const jj="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",Kj="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",qj=vB({opSnippet:jj,packedOpSnippet:Kj,checkOutOfBounds:!0}),Xj={kernelName:lt,backendName:"webgl",kernelFunc:qj},Yj="return a - b;",Jj=vB({opSnippet:Yj,packedOpSnippet:Yj,supportsComplex:!0,cpuKernelImpl:dP}),Zj={kernelName:lr,backendName:"webgl",kernelFunc:Jj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qj(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=T([i],s.shape),o=hj({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),u=Nc(o.shape,a),l=EB({inputs:{x:o},backend:n,attrs:{shape:u}}),c=Jj({inputs:{a:s,b:l},backend:n}),h=CG({inputs:{x:c},backend:n}),d=BB({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=EB({inputs:{x:d},backend:n,attrs:{shape:u}}),f=qj({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const eK={kernelName:Yn,backendName:"webgl",kernelFunc:Qj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tK(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r,u=o?s:Qj({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new Hj(l,c,i),d=[[a]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}const nK={kernelName:sn,backendName:"webgl",kernelFunc:tK},rK=_P+"\n  return -x;\n",sK="\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";function iK(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=Hz(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new GP(r.shape,sK):new RP(r.shape,rK),n.runWebGLProgram(s,[r],r.dtype)}const aK={kernelName:on,backendName:"webgl",kernelFunc:iK},oK=ip;function uK(e){$r("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=oK(l,c,a,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const lK={kernelName:ln,backendName:"webgl",kernelFunc:uK},cK=ap;function hK(e){$r("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=cK(c,h,a,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const dK={kernelName:cn,backendName:"webgl",kernelFunc:hK},pK=op;function fK(e){$r("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=a,p=o,f=u,g=l,{selectedIndices:m,selectedScores:b}=pK(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const gK={kernelName:hn,backendName:"webgl",kernelFunc:fK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class mK{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const bK=e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:u}=r,l=w(s.shape),c=new mK(l,a,o,u),h=EB({inputs:{x:s},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=[...s.shape,a],f=EB({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},yK={kernelName:pn,backendName:"webgl",kernelFunc:bK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xK(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=IU({inputs:{input:r},backend:n}),t=xK({inputs:{x:e},backend:n}),s=VU({inputs:{input:r},backend:n}),i=xK({inputs:{x:s},backend:n}),a=uB({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return MG({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const vK={kernelName:xr,backendName:"webgl",kernelFunc:xK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wK(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=IU({inputs:{input:r},backend:n}),t=wK({inputs:{x:e},backend:n}),s=VU({inputs:{input:r},backend:n}),i=xK({inputs:{x:s},backend:n}),a=uB({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return MG({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const kK={kernelName:dn,backendName:"webgl",kernelFunc:wK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IK(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return $G({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{x(i,e.shape,"All tensors passed to stack must have matching shapes"),y(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=t.map((e=>{const t=$G({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),l=KU({inputs:u,backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const CK={kernelName:fn,backendName:"webgl",kernelFunc:IK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SK{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=OL(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $K{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=OL(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=yP("rc",r),u=yP("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,g=1===r?2:4;f<g;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const NK=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;if(0===w(s.shape)){const e=i.map(((e,t)=>e[0]+s.shape[t]+e[1]));return MG({backend:n,attrs:{shape:e,value:a,dtype:s.dtype}})}const o=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $K(s.shape,i,a):new SK(s.shape,i,a),u=[[a]];return n.runWebGLProgram(o,[s],s.dtype,u)},TK={kernelName:gn,backendName:"webgl",kernelFunc:NK},EK="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",RK="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+sB+"\n  return result;\n",_K=vB({opSnippet:EK,packedOpSnippet:RK}),AK={kernelName:mn,backendName:"webgl",kernelFunc:_K};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FK(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,u=[],l=T(i,s.shape);let c=l;const h=Ec(c,o);let d,p=s;if(null!=h&&(p=UB({inputs:{x:s},backend:n,attrs:{perm:h}}),c=_c(c.length,o),u.push(p)),Tc("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=Kz(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=$c(p.shape,c),r=w(t),i=EB({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=Ws(s.dtype),o=DB(i,a,"prod",n);d=EB({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(i),u.push(o)}if(a){u.push(d);const e=Nc(d.shape,l);d=EB({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const DK={kernelName:yn,backendName:"webgl",kernelFunc:FK};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OK(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=r,u=s.map((e=>n.readSync(e.dataId))),l=s.map((e=>e.shape)),c=n.readSync(i.dataId),h=n.readSync(a.dataId),[d,p,f]=qz(u,l,c,i.shape,i.dtype,h,a.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}const MK={kernelName:xn,backendName:"webgl",kernelFunc:OK};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LK(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:i}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(i.dataId),[l,c]=Xz(a,r.shape,r.dtype,o,s.shape,u,i.shape),h=n.makeTensorInfo([l.length],"int32",l),d=n.makeTensorInfo([c.length],r.dtype,c);return[h,d]}const zK={kernelName:vn,backendName:"webgl",kernelFunc:LK};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PK(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(i.dataId),h=n.readSync(a.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,g]=Yz(l,s.shape,c,i.shape,i.dtype,h,a.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,g)}const BK={kernelName:wn,backendName:"webgl",kernelFunc:PK},WK=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:i,dtype:a}=n,o=Jz(r,s,i,a);return t.makeTensorInfo([o.length],a,o)},UK={kernelName:kn,backendName:"webgl",kernelFunc:WK},VK="return 1.0 / x;",GK=xB({opSnippet:VK}),HK={kernelName:Cn,backendName:"webgl",kernelFunc:GK},jK=_P+"\n  return (x < 0.0) ? 0.0 : x;\n",KK="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",qK=xB({opSnippet:jK,packedOpSnippet:KK}),XK={kernelName:Sn,backendName:"webgl",kernelFunc:qK},YK=_P+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",JK="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",ZK=xB({opSnippet:YK,packedOpSnippet:JK}),QK={kernelName:_n,backendName:"webgl",kernelFunc:ZK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class eq{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tq{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nq(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[u,l]=o,c=ie().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tq(s.shape,u,l,i,a):new eq(s.shape,u,l,i,a);return n.runWebGLProgram(c,[s],"float32")}const rq={kernelName:En,backendName:"webgl",kernelFunc:nq};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sq{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],u=[n&&i>1?i-1:i,n&&a>1?a-1:a],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iq(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new sq(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}const aq={kernelName:Rn,backendName:"webgl",kernelFunc:iq};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oq{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class uq{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lq(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[u,l]=o,c=ie().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new uq(s.shape,u,l,i,a):new oq(s.shape,u,l,i,a);return n.runWebGLProgram(c,[s],s.dtype)}const cq={kernelName:Nn,backendName:"webgl",kernelFunc:lq};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hq{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],u=[n&&i>1?i-1:i,n&&a>1?a-1:a],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dq(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new hq(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}const pq={kernelName:Tn,backendName:"webgl",kernelFunc:dq};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fq{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,s=e.map(((e,t)=>r(t))).join(","),i=OL(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gq{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=yP("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=OL(n);function o(e){return h(e)}function u(e){return e[n-1]="("+e[n-1]+" + 1)",h(e)}function l(e){return e[n-2]="("+e[n-2]+" + 1)",h(e)}function c(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",h(e)}function h(t){const n=e.map(((e,n)=>d(n,t))),r=n.join(","),s=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${s}))`}function d(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o(r.slice())};\n          if(${s}){\n            result.g = ${u(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${l(r.slice())};\n            if(${s}) {\n              result.a = ${c(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mq(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r,a=s.shape.length,o=T(i,s.shape);if(0===a)return aB({inputs:{x:s},backend:n});const u=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gq(s.shape,o):new fq(s.shape,o);return n.runWebGLProgram(u,[s],s.dtype)}const bq={kernelName:An,backendName:"webgl",kernelFunc:mq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yq{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const xq={kernelName:kr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:a}=t,o=n,u=new yq(r.shape,i),[l,c]=ff(a,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]],d=o.runWebGLProgram(u,[r],r.dtype,h);return d}},vq="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",wq=xB({opSnippet:vq}),kq={kernelName:Fn,backendName:"webgl",kernelFunc:wq},Iq="return inversesqrt(x);",Cq=xB({opSnippet:Iq,cpuKernelImpl:Zz}),Sq={kernelName:Dn,backendName:"webgl",kernelFunc:Cq};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $q{constructor(e,t,n,r,s,i,a=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=OL(s.length),l=OL(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${g}, sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Nq{constructor(e,t,n,r,s,i,a=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=OL(s.length),l=OL(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${b};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${g}, sum, found));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tq(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=If(i,s,a),d=[h/l,l];if(0===h)return n.makeTensorInfo(a,s.dtype);const p=EB({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),f=EB({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=ie().getBool("WEBGL_PACK")?new Nq(u,o,p.shape.length,f.shape.length,c,d):new $q(u,o,p.shape.length,f.shape.length,c,d);const b=n.runWebGLProgram(m,[f,p,g],f.dtype),y=EB({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),y}const Eq={kernelName:On,backendName:"webgl",kernelFunc:Tq};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Rq{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===ie().getNumber("WEBGL_VERSION")?s:i,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _q(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=new Rq(s.shape[0],s.shape[1],i.shape[1],a),u=[[s.shape[1]]];return n.runWebGLProgram(o,[s,i],"int32",u)}const Aq={kernelName:Ln,backendName:"webgl",kernelFunc:_q};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Fq{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<t.length;r++)a.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=OL(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dq(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t,a=new Fq(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,i],Bs(s.dtype,i.dtype))}const Oq={kernelName:zn,backendName:"webgl",kernelFunc:Dq},Mq=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Cf};\n  float scale = ${Sf};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,Lq=xB({opSnippet:Mq}),zq={kernelName:Pn,backendName:"webgl",kernelFunc:Lq},Pq=yB+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",Bq="\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Wq=xB({opSnippet:Pq,packedOpSnippet:Bq,cpuKernelImpl:eP}),Uq={kernelName:Gn,backendName:"webgl",kernelFunc:Wq},Vq="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",Gq=xB({opSnippet:Vq}),Hq={kernelName:Vn,backendName:"webgl",kernelFunc:Gq},jq=yB+"\n  return sin(x);\n",Kq=`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${sB}\n  return result;\n`,qq=xB({opSnippet:jq,packedOpSnippet:Kq}),Xq={kernelName:Wn,backendName:"webgl",kernelFunc:qq},Yq="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",Jq=xB({opSnippet:Yq}),Zq={kernelName:Un,backendName:"webgl",kernelFunc:Jq},Qq="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",eX=xB({opSnippet:Qq}),tX={kernelName:Hn,backendName:"webgl",kernelFunc:eX},nX=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;y(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...a);for(let b=1+i.length;b<s.shape.length;++b)u.push([0,0]);const l=[],c=NK({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=gf(c.shape,i,o,!1),d=mf(h.length,i.length,!1),p=bf(c.shape,i,o,!1),f=EB({inputs:{x:c},backend:n,attrs:{shape:h}}),g=UB({inputs:{x:f},backend:n,attrs:{perm:d}}),m=EB({inputs:{x:g},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(g),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),m},rX={kernelName:qn,backendName:"webgl",kernelFunc:nX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sX(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(i.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,g]=rP(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const iX={kernelName:Jn,backendName:"webgl",kernelFunc:sX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aX(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(i.dataId)),[l,c,h]=sP(o,r.shape,r.dtype,a,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const oX={kernelName:Zn,backendName:"webgl",kernelFunc:aX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uX(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(i.dataId),[l,c]=iP(a,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}const lX={kernelName:Qn,backendName:"webgl",kernelFunc:uX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cX(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(i.dataId),[l,c]=iP(a,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}const hX={kernelName:er,backendName:"webgl",kernelFunc:cX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dX(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=If(i,s,o),p=!1;if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),r=os(n.readSync(a.dataId)[0]),f=Qz(e,t,o,d,c,l,u,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new $q(l,u,s.shape.length,i.shape.length,h,[d,1],p),g=n.runWebGLProgram(f,[i,s,a],i.dtype),m=EB({inputs:{x:g},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(g),m}const pX={kernelName:tr,backendName:"webgl",kernelFunc:dX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=T(a,s.shape)[0],u=Yf(s,i,o),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=uU({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}const gX={kernelName:Xn,backendName:"webgl",kernelFunc:fX},mX="return sqrt(x);",bX=xB({opSnippet:mX,packedOpSnippet:mX,cpuKernelImpl:aP}),yX={kernelName:jn,backendName:"webgl",kernelFunc:bX},xX="return x * x;",vX=xB({opSnippet:xX}),wX={kernelName:rr,backendName:"webgl",kernelFunc:vX},kX="return (a - b) * (a - b);",IX=vB({opSnippet:kX,packedOpSnippet:kX}),CX={kernelName:nr,backendName:"webgl",kernelFunc:IX};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const i=n.readSync(s.dataId),a=dg(i),o=oP(a,"string",r);return n.makeTensorInfo(s.shape,"string",o)}const $X={kernelName:sr,backendName:"webgl",kernelFunc:SX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NX({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=_P+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new RP(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}const TX={kernelName:vr,backendName:"webgl",kernelFunc:NX};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class EX{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=OL(n.length),i=OL(n.length);let a="";if(1===r)a="coords * strides + begin";else{let e=0;a=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:x,end:v,strides:w}=Iu(s.shape,i,a,o,u,l,c,h,d);let k;if(g)k=EB({inputs:{x:s},backend:n,attrs:{shape:f}});else if(m||b){y(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=cu(x,v,w),t=uU({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});k=EB({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.shouldExecuteOnCPU([s]);if(e){const e=n.readSync(s.dataId),t=Ra(s.shape,s.dtype,e),r=uP(p,t,w,x);k=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new EX(x,w,p);k=n.runWebGLProgram(e,[s],s.dtype)}}const I=EB({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),I}const _X={kernelName:ir,backendName:"webgl",kernelFunc:RX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AX(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=lP(d,p,s,i,a,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}const FX={kernelName:ar,backendName:"webgl",kernelFunc:AX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DX(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),u=n.readSync(a.dataId)[0],[l,c,h]=cP(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const OX={kernelName:or,backendName:"webgl",kernelFunc:DX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MX(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=hP(a,s);return n.makeTensorInfo(i.shape,"int32",o)}const LX={kernelName:ur,backendName:"webgl",kernelFunc:MX},zX="return tan(x);",PX=xB({opSnippet:zX}),BX={kernelName:cr,backendName:"webgl",kernelFunc:PX},WX="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",UX=xB({opSnippet:WX}),VX={kernelName:hr,backendName:"webgl",kernelFunc:UX};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GX(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:i,updates:a}=t,{}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=If(a,i,s.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(s.shape,i.dtype);const p=EB({inputs:{x:i},backend:n,attrs:{shape:[u,o]}}),f=EB({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),g=EB({inputs:{x:s},backend:n,attrs:{shape:d}}),m=new $q(u,o,p.shape.length,f.shape.length,c,d,!1,!0),b=n.runWebGLProgram(m,[f,p,g],g.dtype),y=EB({inputs:{x:b},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),y}const HX={kernelName:Mn,backendName:"webgl",kernelFunc:GX};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jX{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;const r=OL(this.rank),s=KX(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function KX(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>os(e))):e,r=Ra(s.shape,s.dtype,t),a=pP(r,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new jX(s.shape,i),o=n.runWebGLProgram(a,[s],s.dtype);return o}const XX={kernelName:dr,backendName:"webgl",kernelFunc:qX};class YX{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class JX{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZX(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function QX(e){let t=1;while(t<e)t*=2;return t}function eY(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r,o=ie().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=ie().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<o||i>u){const e=n.readSync(s.dataId),[t,r]=fP(e,l,s.dtype,i,a);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,MG({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=w(l),g=f/c,m=EB({inputs:{x:p},attrs:{shape:[g,c]},backend:n});d&&ZX(n,p);const b=QX(i),y=QX(c);let x=null;const v=()=>null===x?[m,m]:[m,x],k=(e,t,r)=>{const s=v(),i=new YX(r),a=null===x?1:0,o=[[c],[a],[Number.NEGATIVE_INFINITY],[e],[t]],u=x;x=n.runWebGLProgram(i,s,"int32",o),ZX(n,u)};for(let w=1;w<b;w*=2){const e=2*w;for(let t=w;t>=1;t/=2)k(e,t,[g,y])}for(let w=y;w>b;w/=2){const e=v(),t=new JX([g,w/2]),r=null===x?1:0,s=[[c],[r],[b]],i=x;x=n.runWebGLProgram(t,e,"int32",s),ZX(n,i);const a=b/2,o=2*a;for(let n=a;n>=1;n/=2)k(o,n,x.shape)}let I=x;x=uU({inputs:{x:x},backend:n,attrs:{begin:0,size:[g,i]}}),ZX(n,I);let C=uH({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});ZX(n,m);const S=l.slice(0,-1);S.push(i),I=x,x=EB({inputs:{x:x},attrs:{shape:S},backend:n}),ZX(n,I);const $=C;return C=EB({inputs:{x:C},attrs:{shape:S},backend:n}),ZX(n,$),[C,x]}const tY={kernelName:pr,backendName:"webgl",kernelFunc:eY};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class nY{constructor(e,t,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rY(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=s.shape,[f,g]=null!=l?l:[h,d],m=[c,f,g,p],b=new nY(h,d,a,o,u,m);return n.runWebGLProgram(b,[s,i],"float32")}const sY={kernelName:fr,backendName:"webgl",kernelFunc:rY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iY(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;LM(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:u,indices:l}=mP(a,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}const aY={kernelName:mr,backendName:"webgl",kernelFunc:iY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oY(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,u=s.shape[i],l=new Array(o-1);let c=0;for(let g=0;g<o;g++)g!==i&&(l[c++]=a.shape[g]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(u);for(let g=0;g<f.length;g++){d[i]=g;const e=uU({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),t=EB({inputs:{x:e},backend:n,attrs:{shape:l}});f[g]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const uY={kernelName:br,backendName:"webgl",kernelFunc:oY};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class lY{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o="0.0",u="sumValue",l=4*Math.floor(n/4),c=n%4,h="\n        sumValue += dot(values, segFilter);\n    ";let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cY(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r,o=s.shape.length,u=[];let l=0;const c=Ec([l],o);let h=s;null!=c&&(h=UB({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=_c(1,o)[0]);const d=cg(h.shape,l,a),p=w([h.shape[l]]),f=EB({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const g=Ws(s.dtype),m=(e,t,r,s,i)=>{const a=e.shape[0],o=e.shape[1],l=lg(o,i),c={windowSize:l,inSize:o,batchSize:a,numSegments:i},h=new lY(c,t),d=n.compileAndRun(h,[e,r],s);if(u.push(d),d.shape[1]===i)return d;const p=WK({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=qX({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});u.push(p),u.push(f);const g=m(d,t,f,s,i);return g},b=m(f,"unsortedSegmentSum",i,g,a),y=EB({inputs:{x:b},backend:n,attrs:{shape:d}});let x=y;if(null!=c){u.push(y);const e=Rc(c);x=UB({inputs:{x:x},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const hY={kernelName:yr,backendName:"webgl",kernelFunc:cY},dY=[KB,YB,QB,nW,iW,lW,hW,pW,vW,kW,SW,TW,_W,OW,zW,UW,GW,qW,YW,ZW,nU,hU,pU,bU,xU,TU,_U,OU,lB,PU,qU,rV,lV,dV,fV,mV,yV,kV,SV,TV,OV,LV,PV,UV,jV,YV,ZV,tG,sG,aG,cG,fG,yG,wG,SG,NG,RG,DG,LG,PG,UG,jG,XG,eH,nH,iH,lH,pH,bH,oB,xH,GU,kH,SH,TH,pB,AH,MH,zH,UH,HH,XH,ZH,nj,aj,lj,dj,mj,yj,vj,Cj,$j,Tj,Rj,Aj,Mj,Bj,Gj,nK,NB,aK,lK,dK,gK,kU,yK,kK,CK,TK,AK,bB,DK,MK,zK,BK,UK,CU,Xj,HK,XK,QK,RB,rq,aq,cq,pq,bq,xq,kq,Sq,Eq,Aq,Oq,zq,Uq,Hq,Xq,Zq,lU,eK,tX,rX,iX,oX,lX,hX,pX,gX,yX,wX,CX,$X,TX,_X,FX,OX,LX,Zj,WB,BX,VX,HX,XX,tY,sY,VB,aY,uY,hY,vK];for(const fY of dY)Fr(fY)},947:function(e,t,n){n(6573),n(8100),n(7936),n(7467),n(4732),n(9577),e.exports=s;var r=null;try{r=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(E){}function s(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function i(e){return!0===(e&&e["__isLong__"])}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0}),s.isLong=i;var a={},o={};function u(e,t){var n,r,s;return t?(e>>>=0,(s=0<=e&&e<256)&&(r=o[e],r)?r:(n=c(e,(0|e)<0?-1:0,!0),s&&(o[e]=n),n)):(e|=0,(s=-128<=e&&e<128)&&(r=a[e],r)?r:(n=c(e,e<0?-1:0,!1),s&&(a[e]=n),n))}function l(e,t){if(isNaN(e))return t?w:v;if(t){if(e<0)return w;if(e>=b)return $}else{if(e<=-y)return N;if(e+1>=y)return S}return e<0?l(-e,t).neg():c(e%m|0,e/m|0,t)}function c(e,t,n){return new s(e,t,n)}s.fromInt=u,s.fromNumber=l,s.fromBits=c;var h=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return v;if("number"===typeof t?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var s=l(h(n,8)),i=v,a=0;a<e.length;a+=8){var o=Math.min(8,e.length-a),u=parseInt(e.substring(a,a+o),n);if(o<8){var c=l(h(n,o));i=i.mul(c).add(l(u))}else i=i.mul(s),i=i.add(l(u))}return i.unsigned=t,i}function p(e,t){return"number"===typeof e?l(e,t):"string"===typeof e?d(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}s.fromString=d,s.fromValue=p;var f=65536,g=1<<24,m=f*f,b=m*m,y=b/2,x=u(g),v=u(0);s.ZERO=v;var w=u(0,!0);s.UZERO=w;var k=u(1);s.ONE=k;var I=u(1,!0);s.UONE=I;var C=u(-1);s.NEG_ONE=C;var S=c(-1,2147483647,!1);s.MAX_VALUE=S;var $=c(-1,-1,!0);s.MAX_UNSIGNED_VALUE=$;var N=c(0,-2147483648,!1);s.MIN_VALUE=N;var T=s.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},T.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}var s=l(h(e,6),this.unsigned),i=this,a="";while(1){var o=i.div(s),u=i.sub(o.mul(s)).toInt()>>>0,c=u.toString(e);if(i=o,i.isZero())return c+a;while(c.length<6)c="0"+c;a=""+c+a}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0;t--)if(0!=(e&1<<t))break;return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1===(1&this.low)},T.isEven=function(){return 0===(1&this.low)},T.equals=function(e){return i(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(i(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(k)},T.neg=T.negate,T.add=function(e){i(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,a=e.high>>>16,o=65535&e.high,u=e.low>>>16,l=65535&e.low,h=0,d=0,f=0,g=0;return g+=s+l,f+=g>>>16,g&=65535,f+=r+u,d+=f>>>16,f&=65535,d+=n+o,h+=d>>>16,d&=65535,h+=t+a,h&=65535,c(f<<16|g,h<<16|d,this.unsigned)},T.subtract=function(e){return i(e)||(e=p(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return v;if(i(e)||(e=p(e)),r){var t=r.mul(this.low,this.high,e.low,e.high);return c(t,r.get_high(),this.unsigned)}if(e.isZero())return v;if(this.eq(N))return e.isOdd()?N:v;if(e.eq(N))return this.isOdd()?N:v;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(x)&&e.lt(x))return l(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,o=65535&this.low,u=e.high>>>16,h=65535&e.high,d=e.low>>>16,f=65535&e.low,g=0,m=0,b=0,y=0;return y+=o*f,b+=y>>>16,y&=65535,b+=a*f,m+=b>>>16,b&=65535,b+=o*d,m+=b>>>16,b&=65535,m+=s*f,g+=m>>>16,m&=65535,m+=a*d,g+=m>>>16,m&=65535,m+=o*h,g+=m>>>16,m&=65535,g+=n*f+s*d+a*h+o*u,g&=65535,c(b<<16|y,g<<16|m,this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(i(e)||(e=p(e)),e.isZero())throw Error("division by zero");if(r){if(!this.unsigned&&-2147483648===this.high&&-1===e.low&&-1===e.high)return this;var t=(this.unsigned?r.div_u:r.div_s)(this.low,this.high,e.low,e.high);return c(t,r.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:v;var n,s,a;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return w;if(e.gt(this.shru(1)))return I;a=w}else{if(this.eq(N)){if(e.eq(k)||e.eq(C))return N;if(e.eq(N))return k;var o=this.shr(1);return n=o.div(e).shl(1),n.eq(v)?e.isNegative()?k:C:(s=this.sub(e.mul(n)),a=n.add(s.div(e)),a)}if(e.eq(N))return this.unsigned?w:v;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=v}s=this;while(s.gte(e)){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));var u=Math.ceil(Math.log(n)/Math.LN2),d=u<=48?1:h(2,u-48),f=l(n),g=f.mul(e);while(g.isNegative()||g.gt(s))n-=d,f=l(n,this.unsigned),g=f.mul(e);f.isZero()&&(f=k),a=a.add(f),s=s.sub(g)}return a},T.div=T.divide,T.modulo=function(e){if(i(e)||(e=p(e)),r){var t=(this.unsigned?r.rem_u:r.rem_s)(this.low,this.high,e.low,e.high);return c(t,r.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return c(~this.low,~this.high,this.unsigned)},T.and=function(e){return i(e)||(e=p(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return i(e)||(e=p(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return i(e)||(e=p(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return i(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return i(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(i(e)&&(e=e.toInt()),e&=63,0===e)return this;var t=this.high;if(e<32){var n=this.low;return c(n>>>e|t<<32-e,t>>>e,this.unsigned)}return c(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},s.fromBytes=function(e,t,n){return n?s.fromBytesLE(e,t):s.fromBytesBE(e,t)},s.fromBytesLE=function(e,t){return new s(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},s.fromBytesBE=function(e,t){return new s(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},4458:function(e,t,n){"use strict";n.d(t,{k:function(){return i}});var r,s=function(){return Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))};function i(e,t){void 0===t&&(t={});var n=t.registrationOptions;void 0===n&&(n={}),delete t.registrationOptions;var i=function(e){var n=[],r=arguments.length-1;while(r-- >0)n[r]=arguments[r+1];t&&t[e]&&t[e].apply(t,n)};"serviceWorker"in navigator&&r.then((function(){s()?(u(e,i,n),navigator.serviceWorker.ready.then((function(e){i("ready",e)})).catch((function(e){return a(i,e)}))):(o(e,i,n),navigator.serviceWorker.ready.then((function(e){i("ready",e)})).catch((function(e){return a(i,e)})))}))}function a(e,t){navigator.onLine||e("offline"),e("error",t)}function o(e,t,n){navigator.serviceWorker.register(e,n).then((function(e){t("registered",e),e.waiting?t("updated",e):e.onupdatefound=function(){t("updatefound",e);var n=e.installing;n.onstatechange=function(){"installed"===n.state&&(navigator.serviceWorker.controller?t("updated",e):t("cached",e))}}})).catch((function(e){return a(t,e)}))}function u(e,t,n){fetch(e).then((function(r){404===r.status?(t("error",new Error("Service worker not found at "+e)),l()):-1===r.headers.get("content-type").indexOf("javascript")?(t("error",new Error("Expected "+e+" to have javascript content-type, but received "+r.headers.get("content-type"))),l()):o(e,t,n)})).catch((function(e){return a(t,e)}))}function l(){"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){return a(emit,e)}))}"undefined"!==typeof window&&(r="undefined"!==typeof Promise?new Promise((function(e){return window.addEventListener("load",e)})):{then:function(e){return window.addEventListener("load",e)}})},928:function(e,t,n){var r=n(3785),s=n(4008),i=n(1030),a=n(3404),o=n(9018),u=n(5396),l=n(336);l.alea=r,l.xor128=s,l.xorwow=i,l.xorshift7=a,l.xor4096=o,l.tychei=u,e.exports=l},3785:function(e,t,n){var r;e=n.nmd(e),function(e,s,i){function a(e){var t=this,n=l();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}function l(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var r=.02519603282416938*e;e=r>>>0,r-=e,r*=e,e=r>>>0,r-=e,e+=4294967296*r}return 2.3283064365386963e-10*(e>>>0)};return t}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.alea=u}(0,e,n.amdD)},5396:function(e,t,n){var r;e=n.nmd(e),function(e,s,i){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.tychei=u}(0,e,n.amdD)},4008:function(e,t,n){var r;e=n.nmd(e),function(e,s,i){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xor128=u}(0,e,n.amdD)},9018:function(e,t,n){var r;e=n.nmd(e),function(e,s,i){function a(e){var t=this;function n(e,t){var n,r,s,i,a,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,n=o[127&i]^=r+a,s=0==n?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=a,e.X=o,e.i=s}t.next=function(){var e,n,r=t.w,s=t.X,i=t.i;return t.w=r=r+1640531527|0,n=s[i+34&127],e=s[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[i]=n^e,t.i=i,n+(r^r>>>16)|0},n(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xor4096=u}(0,e,n.amdD)},3404:function(e,t,n){var r;e=n.nmd(e),n(4114),function(e,s,i){function a(e){var t=this;function n(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;while(r.length<8)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],e^=e>>>7,n=e^e<<24,e=r[s+1&7],n^=e^e>>>10,e=r[s+3&7],n^=e^e>>>3,e=r[s+4&7],n^=e^e<<7,e=r[s+7&7],e^=e<<13,n^=e^e<<9,r[s]=n,t.i=s+1&7,n},n(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xorshift7=u}(0,e,n.amdD)},1030:function(e,t,n){var r;e=n.nmd(e),function(e,s,i){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xorwow=u}(0,e,n.amdD)},336:function(e,t,n){var r;n(4114),n(6573),n(8100),n(7936),n(7467),n(4732),n(9577),function(s,i,a){var o,u=256,l=6,c=52,h="random",d=a.pow(u,l),p=a.pow(2,c),f=2*p,g=u-1;function m(e,t,n){var r=[];t=1==t?{entropy:!0}:t||{};var s=v(x(t.entropy?[e,k(i)]:null==e?w():e,3),r),o=new b(r),c=function(){var e=o.g(l),t=d,n=0;while(e<p)e=(e+n)*u,t*=u,n=o.g(1);while(e>=f)e/=2,t/=2,n>>>=1;return(e+n)/t};return c.int32=function(){return 0|o.g(4)},c.quick=function(){return o.g(4)/4294967296},c.double=c,v(k(o.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&y(r,o),e.state=function(){return y(o,{})}),n?(a[h]=e,t):e})(c,s,"global"in t?t.global:this==a,t.state)}function b(e){var t,n=e.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];n||(e=[n++]);while(s<u)a[s]=s++;for(s=0;s<u;s++)a[s]=a[i=g&i+e[s%n]+(t=a[s])],a[i]=t;(r.g=function(e){var t,n=0,s=r.i,i=r.j,a=r.S;while(e--)t=a[s=g&s+1],n=n*u+a[g&(a[s]=a[i=g&i+t])+(a[i]=t)];return r.i=s,r.j=i,n})(u)}function y(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function x(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(x(e[n],t-1))}catch(i){}return r.length?r:"string"==s?e:e+"\0"}function v(e,t){var n,r=e+"",s=0;while(s<r.length)t[g&s]=g&(n^=19*t[g&s])+r.charCodeAt(s++);return k(t)}function w(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),k(e)}catch(r){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,k(i)]}}function k(e){return String.fromCharCode.apply(0,e)}if(v(a.random(),i),e.exports){e.exports=m;try{o=n(1234)}catch(I){}}else r=function(){return m}.call(t,n,t,e),void 0===r||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)},6848:function(e,t,n){"use strict";n.d(t,{Ay:function(){return Zr}});n(4114),n(3375),n(9225),n(3972),n(9209),n(5714),n(7561),n(6197),n(9848);var r=Object.freeze({}),s=Array.isArray;function i(e){return void 0===e||null===e}function a(e){return void 0!==e&&null!==e}function o(e){return!0===e}function u(e){return!1===e}function l(e){return"string"===typeof e||"number"===typeof e||"symbol"===typeof e||"boolean"===typeof e}function c(e){return"function"===typeof e}function h(e){return null!==e&&"object"===typeof e}var d=Object.prototype.toString;function p(e){return"[object Object]"===d.call(e)}function f(e){return"[object RegExp]"===d.call(e)}function g(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function m(e){return a(e)&&"function"===typeof e.then&&"function"===typeof e.catch}function b(e){return null==e?"":Array.isArray(e)||p(e)&&e.toString===d?JSON.stringify(e,y,2):String(e)}function y(e,t){return t&&t.__v_isRef?t.value:t}function x(e){var t=parseFloat(e);return isNaN(t)?e:t}function v(e,t){for(var n=Object.create(null),r=e.split(","),s=0;s<r.length;s++)n[r[s]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}v("slot,component",!0);var w=v("key,ref,slot,slot-scope,is");function k(e,t){var n=e.length;if(n){if(t===e[n-1])return void(e.length=n-1);var r=e.indexOf(t);if(r>-1)return e.splice(r,1)}}var I=Object.prototype.hasOwnProperty;function C(e,t){return I.call(e,t)}function S(e){var t=Object.create(null);return function(n){var r=t[n];return r||(t[n]=e(n))}}var $=/-(\w)/g,N=S((function(e){return e.replace($,(function(e,t){return t?t.toUpperCase():""}))})),T=S((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),E=/\B([A-Z])/g,R=S((function(e){return e.replace(E,"-$1").toLowerCase()}));function _(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n}function A(e,t){return e.bind(t)}var F=Function.prototype.bind?A:_;function D(e,t){t=t||0;var n=e.length-t,r=new Array(n);while(n--)r[n]=e[n+t];return r}function O(e,t){for(var n in t)e[n]=t[n];return e}function M(e){for(var t={},n=0;n<e.length;n++)e[n]&&O(t,e[n]);return t}function L(e,t,n){}var z=function(e,t,n){return!1},P=function(e){return e};function B(e,t){if(e===t)return!0;var n=h(e),r=h(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var s=Array.isArray(e),i=Array.isArray(t);if(s&&i)return e.length===t.length&&e.every((function(e,n){return B(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(s||i)return!1;var a=Object.keys(e),o=Object.keys(t);return a.length===o.length&&a.every((function(n){return B(e[n],t[n])}))}catch(u){return!1}}function W(e,t){for(var n=0;n<e.length;n++)if(B(e[n],t))return n;return-1}function U(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}function V(e,t){return e===t?0===e&&1/e!==1/t:e===e||t===t}var G="data-server-rendered",H=["component","directive","filter"],j=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],K={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:z,isReservedAttr:z,isUnknownElement:z,getTagNamespace:L,parsePlatformTagName:P,mustUseProp:z,async:!0,_lifecycleHooks:j},q=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function X(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function Y(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var J=new RegExp("[^".concat(q.source,".$_\\d]"));function Z(e){if(!J.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}var Q="__proto__"in{},ee="undefined"!==typeof window,te=ee&&window.navigator.userAgent.toLowerCase(),ne=te&&/msie|trident/.test(te),re=te&&te.indexOf("msie 9.0")>0,se=te&&te.indexOf("edge/")>0;te&&te.indexOf("android");var ie=te&&/iphone|ipad|ipod|ios/.test(te);te&&/chrome\/\d+/.test(te),te&&/phantomjs/.test(te);var ae,oe=te&&te.match(/firefox\/(\d+)/),ue={}.watch,le=!1;if(ee)try{var ce={};Object.defineProperty(ce,"passive",{get:function(){le=!0}}),window.addEventListener("test-passive",null,ce)}catch(Za){}var he=function(){return void 0===ae&&(ae=!ee&&"undefined"!==typeof n.g&&(n.g["process"]&&"server"===n.g["process"].env.VUE_ENV)),ae},de=ee&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function pe(e){return"function"===typeof e&&/native code/.test(e.toString())}var fe,ge="undefined"!==typeof Symbol&&pe(Symbol)&&"undefined"!==typeof Reflect&&pe(Reflect.ownKeys);fe="undefined"!==typeof Set&&pe(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var me=null;function be(e){void 0===e&&(e=null),e||me&&me._scope.off(),me=e,e&&e._scope.on()}var ye=function(){function e(e,t,n,r,s,i,a,o){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=s,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),xe=function(e){void 0===e&&(e="");var t=new ye;return t.text=e,t.isComment=!0,t};function ve(e){return new ye(void 0,void 0,void 0,String(e))}function we(e){var t=new ye(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}"function"===typeof SuppressedError&&SuppressedError;var ke=0,Ie=[],Ce=function(){for(var e=0;e<Ie.length;e++){var t=Ie[e];t.subs=t.subs.filter((function(e){return e})),t._pending=!1}Ie.length=0},Se=function(){function e(){this._pending=!1,this.id=ke++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,Ie.push(this))},e.prototype.depend=function(t){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var t=this.subs.filter((function(e){return e}));for(var n=0,r=t.length;n<r;n++){var s=t[n];0,s.update()}},e}();Se.target=null;var $e=[];function Ne(e){$e.push(e),Se.target=e}function Te(){$e.pop(),Se.target=$e[$e.length-1]}var Ee=Array.prototype,Re=Object.create(Ee),_e=["push","pop","shift","unshift","splice","sort","reverse"];_e.forEach((function(e){var t=Ee[e];Y(Re,e,(function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var s,i=t.apply(this,n),a=this.__ob__;switch(e){case"push":case"unshift":s=n;break;case"splice":s=n.slice(2);break}return s&&a.observeArray(s),a.dep.notify(),i}))}));var Ae=Object.getOwnPropertyNames(Re),Fe={},De=!0;function Oe(e){De=e}var Me={notify:L,depend:L,addSub:L,removeSub:L},Le=function(){function e(e,t,n){if(void 0===t&&(t=!1),void 0===n&&(n=!1),this.value=e,this.shallow=t,this.mock=n,this.dep=n?Me:new Se,this.vmCount=0,Y(e,"__ob__",this),s(e)){if(!n)if(Q)e.__proto__=Re;else for(var r=0,i=Ae.length;r<i;r++){var a=Ae[r];Y(e,a,Re[a])}t||this.observeArray(e)}else{var o=Object.keys(e);for(r=0;r<o.length;r++){a=o[r];Pe(e,a,Fe,void 0,t,n)}}}return e.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)ze(e[t],!1,this.mock)},e}();function ze(e,t,n){return e&&C(e,"__ob__")&&e.__ob__ instanceof Le?e.__ob__:!De||!n&&he()||!s(e)&&!p(e)||!Object.isExtensible(e)||e.__v_skip||je(e)||e instanceof ye?void 0:new Le(e,t,n)}function Pe(e,t,n,r,i,a,o){void 0===o&&(o=!1);var u=new Se,l=Object.getOwnPropertyDescriptor(e,t);if(!l||!1!==l.configurable){var c=l&&l.get,h=l&&l.set;c&&!h||n!==Fe&&2!==arguments.length||(n=e[t]);var d=i?n&&n.__ob__:ze(n,!1,a);return Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=c?c.call(e):n;return Se.target&&(u.depend(),d&&(d.dep.depend(),s(t)&&Ue(t))),je(t)&&!i?t.value:t},set:function(t){var r=c?c.call(e):n;if(V(r,t)){if(h)h.call(e,t);else{if(c)return;if(!i&&je(r)&&!je(t))return void(r.value=t);n=t}d=i?t&&t.__ob__:ze(t,!1,a),u.notify()}}}),u}}function Be(e,t,n){if(!He(e)){var r=e.__ob__;return s(e)&&g(t)?(e.length=Math.max(e.length,t),e.splice(t,1,n),r&&!r.shallow&&r.mock&&ze(n,!1,!0),n):t in e&&!(t in Object.prototype)?(e[t]=n,n):e._isVue||r&&r.vmCount?n:r?(Pe(r.value,t,n,void 0,r.shallow,r.mock),r.dep.notify(),n):(e[t]=n,n)}}function We(e,t){if(s(e)&&g(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||He(e)||C(e,t)&&(delete e[t],n&&n.dep.notify())}}function Ue(e){for(var t=void 0,n=0,r=e.length;n<r;n++)t=e[n],t&&t.__ob__&&t.__ob__.dep.depend(),s(t)&&Ue(t)}function Ve(e){return Ge(e,!0),Y(e,"__v_isShallow",!0),e}function Ge(e,t){if(!He(e)){ze(e,t,he());0}}function He(e){return!(!e||!e.__v_isReadonly)}function je(e){return!(!e||!0!==e.__v_isRef)}function Ke(e,t,n){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var e=t[n];if(je(e))return e.value;var r=e&&e.__ob__;return r&&r.dep.depend(),e},set:function(e){var r=t[n];je(r)&&!je(e)?r.value=e:t[n]=e}})}var qe="watcher";"".concat(qe," callback"),"".concat(qe," getter"),"".concat(qe," cleanup");var Xe;var Ye=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Xe,!e&&Xe&&(this.index=(Xe.scopes||(Xe.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var t=Xe;try{return Xe=this,e()}finally{Xe=t}}else 0},e.prototype.on=function(){Xe=this},e.prototype.off=function(){Xe=this.parent},e.prototype.stop=function(e){if(this.active){var t=void 0,n=void 0;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].teardown();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this.active=!1}},e}();function Je(e,t){void 0===t&&(t=Xe),t&&t.active&&t.effects.push(e)}function Ze(){return Xe}function Qe(e){var t=e._provided,n=e.$parent&&e.$parent._provided;return n===t?e._provided=Object.create(n):t}var et=S((function(e){var t="&"===e.charAt(0);e=t?e.slice(1):e;var n="~"===e.charAt(0);e=n?e.slice(1):e;var r="!"===e.charAt(0);return e=r?e.slice(1):e,{name:e,once:n,capture:r,passive:t}}));function tt(e,t){function n(){var e=n.fns;if(!s(e))return Jt(e,null,arguments,t,"v-on handler");for(var r=e.slice(),i=0;i<r.length;i++)Jt(r[i],null,arguments,t,"v-on handler")}return n.fns=e,n}function nt(e,t,n,r,s,a){var u,l,c,h;for(u in e)l=e[u],c=t[u],h=et(u),i(l)||(i(c)?(i(l.fns)&&(l=e[u]=tt(l,a)),o(h.once)&&(l=e[u]=s(h.name,l,h.capture)),n(h.name,l,h.capture,h.passive,h.params)):l!==c&&(c.fns=l,e[u]=c));for(u in t)i(e[u])&&(h=et(u),r(h.name,t[u],h.capture))}function rt(e,t,n){var r;e instanceof ye&&(e=e.data.hook||(e.data.hook={}));var s=e[t];function u(){n.apply(this,arguments),k(r.fns,u)}i(s)?r=tt([u]):a(s.fns)&&o(s.merged)?(r=s,r.fns.push(u)):r=tt([s,u]),r.merged=!0,e[t]=r}function st(e,t,n){var r=t.options.props;if(!i(r)){var s={},o=e.attrs,u=e.props;if(a(o)||a(u))for(var l in r){var c=R(l);it(s,u,l,c,!0)||it(s,o,l,c,!1)}return s}}function it(e,t,n,r,s){if(a(t)){if(C(t,n))return e[n]=t[n],s||delete t[n],!0;if(C(t,r))return e[n]=t[r],s||delete t[r],!0}return!1}function at(e){for(var t=0;t<e.length;t++)if(s(e[t]))return Array.prototype.concat.apply([],e);return e}function ot(e){return l(e)?[ve(e)]:s(e)?lt(e):void 0}function ut(e){return a(e)&&a(e.text)&&u(e.isComment)}function lt(e,t){var n,r,u,c,h=[];for(n=0;n<e.length;n++)r=e[n],i(r)||"boolean"===typeof r||(u=h.length-1,c=h[u],s(r)?r.length>0&&(r=lt(r,"".concat(t||"","_").concat(n)),ut(r[0])&&ut(c)&&(h[u]=ve(c.text+r[0].text),r.shift()),h.push.apply(h,r)):l(r)?ut(c)?h[u]=ve(c.text+r):""!==r&&h.push(ve(r)):ut(r)&&ut(c)?h[u]=ve(c.text+r.text):(o(e._isVList)&&a(r.tag)&&i(r.key)&&a(t)&&(r.key="__vlist".concat(t,"_").concat(n,"__")),h.push(r)));return h}function ct(e,t){var n,r,i,o,u=null;if(s(e)||"string"===typeof e)for(u=new Array(e.length),n=0,r=e.length;n<r;n++)u[n]=t(e[n],n);else if("number"===typeof e)for(u=new Array(e),n=0;n<e;n++)u[n]=t(n+1,n);else if(h(e))if(ge&&e[Symbol.iterator]){u=[];var l=e[Symbol.iterator](),c=l.next();while(!c.done)u.push(t(c.value,u.length)),c=l.next()}else for(i=Object.keys(e),u=new Array(i.length),n=0,r=i.length;n<r;n++)o=i[n],u[n]=t(e[o],o,n);return a(u)||(u=[]),u._isVList=!0,u}function ht(e,t,n,r){var s,i=this.$scopedSlots[e];i?(n=n||{},r&&(n=O(O({},r),n)),s=i(n)||(c(t)?t():t)):s=this.$slots[e]||(c(t)?t():t);var a=n&&n.slot;return a?this.$createElement("template",{slot:a},s):s}function dt(e){return Sr(this.$options,"filters",e,!0)||P}function pt(e,t){return s(e)?-1===e.indexOf(t):e!==t}function ft(e,t,n,r,s){var i=K.keyCodes[t]||n;return s&&r&&!K.keyCodes[t]?pt(s,r):i?pt(i,e):r?R(r)!==t:void 0===e}function gt(e,t,n,r,i){if(n)if(h(n)){s(n)&&(n=M(n));var a=void 0,o=function(s){if("class"===s||"style"===s||w(s))a=e;else{var o=e.attrs&&e.attrs.type;a=r||K.mustUseProp(t,o,s)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var u=N(s),l=R(s);if(!(u in a)&&!(l in a)&&(a[s]=n[s],i)){var c=e.on||(e.on={});c["update:".concat(s)]=function(e){n[s]=e}}};for(var u in n)o(u)}else;return e}function mt(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t||(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),yt(r,"__static__".concat(e),!1)),r}function bt(e,t,n){return yt(e,"__once__".concat(t).concat(n?"_".concat(n):""),!0),e}function yt(e,t,n){if(s(e))for(var r=0;r<e.length;r++)e[r]&&"string"!==typeof e[r]&&xt(e[r],"".concat(t,"_").concat(r),n);else xt(e,t,n)}function xt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function vt(e,t){if(t)if(p(t)){var n=e.on=e.on?O({},e.on):{};for(var r in t){var s=n[r],i=t[r];n[r]=s?[].concat(s,i):i}}else;return e}function wt(e,t,n,r){t=t||{$stable:!n};for(var i=0;i<e.length;i++){var a=e[i];s(a)?wt(a,t,n):a&&(a.proxy&&(a.fn.proxy=!0),t[a.key]=a.fn)}return r&&(t.$key=r),t}function kt(e,t){for(var n=0;n<t.length;n+=2){var r=t[n];"string"===typeof r&&r&&(e[t[n]]=t[n+1])}return e}function It(e,t){return"string"===typeof e?t+e:e}function Ct(e){e._o=bt,e._n=x,e._s=b,e._l=ct,e._t=ht,e._q=B,e._i=W,e._m=mt,e._f=dt,e._k=ft,e._b=gt,e._v=ve,e._e=xe,e._u=wt,e._g=vt,e._d=kt,e._p=It}function St(e,t){if(!e||!e.length)return{};for(var n={},r=0,s=e.length;r<s;r++){var i=e[r],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==t&&i.fnContext!==t||!a||null==a.slot)(n.default||(n.default=[])).push(i);else{var o=a.slot,u=n[o]||(n[o]=[]);"template"===i.tag?u.push.apply(u,i.children||[]):u.push(i)}}for(var l in n)n[l].every($t)&&delete n[l];return n}function $t(e){return e.isComment&&!e.asyncFactory||" "===e.text}function Nt(e){return e.isComment&&e.asyncFactory}function Tt(e,t,n,s){var i,a=Object.keys(n).length>0,o=t?!!t.$stable:!a,u=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(o&&s&&s!==r&&u===s.$key&&!a&&!s.$hasNormal)return s;for(var l in i={},t)t[l]&&"$"!==l[0]&&(i[l]=Et(e,n,l,t[l]))}else i={};for(var c in n)c in i||(i[c]=Rt(n,c));return t&&Object.isExtensible(t)&&(t._normalized=i),Y(i,"$stable",o),Y(i,"$key",u),Y(i,"$hasNormal",a),i}function Et(e,t,n,r){var i=function(){var t=me;be(e);var n=arguments.length?r.apply(null,arguments):r({});n=n&&"object"===typeof n&&!s(n)?[n]:ot(n);var i=n&&n[0];return be(t),n&&(!i||1===n.length&&i.isComment&&!Nt(i))?void 0:n};return r.proxy&&Object.defineProperty(t,n,{get:i,enumerable:!0,configurable:!0}),i}function Rt(e,t){return function(){return e[t]}}function _t(e){var t=e.$options,n=t.setup;if(n){var r=e._setupContext=At(e);be(e),Ne();var s=Jt(n,null,[e._props||Ve({}),r],e,"setup");if(Te(),be(),c(s))t.render=s;else if(h(s))if(e._setupState=s,s.__sfc){var i=e._setupProxy={};for(var a in s)"__sfc"!==a&&Ke(i,s,a)}else for(var a in s)X(a)||Ke(e,s,a);else 0}}function At(e){return{get attrs(){if(!e._attrsProxy){var t=e._attrsProxy={};Y(t,"_v_attr_proxy",!0),Ft(t,e.$attrs,r,e,"$attrs")}return e._attrsProxy},get listeners(){if(!e._listenersProxy){var t=e._listenersProxy={};Ft(t,e.$listeners,r,e,"$listeners")}return e._listenersProxy},get slots(){return Ot(e)},emit:F(e.$emit,e),expose:function(t){t&&Object.keys(t).forEach((function(n){return Ke(e,t,n)}))}}}function Ft(e,t,n,r,s){var i=!1;for(var a in t)a in e?t[a]!==n[a]&&(i=!0):(i=!0,Dt(e,a,r,s));for(var a in e)a in t||(i=!0,delete e[a]);return i}function Dt(e,t,n,r){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){return n[r][t]}})}function Ot(e){return e._slotsProxy||Mt(e._slotsProxy={},e.$scopedSlots),e._slotsProxy}function Mt(e,t){for(var n in t)e[n]=t[n];for(var n in e)n in t||delete e[n]}function Lt(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,s=n&&n.context;e.$slots=St(t._renderChildren,s),e.$scopedSlots=n?Tt(e.$parent,n.data.scopedSlots,e.$slots):r,e._c=function(t,n,r,s){return jt(e,t,n,r,s,!1)},e.$createElement=function(t,n,r,s){return jt(e,t,n,r,s,!0)};var i=n&&n.data;Pe(e,"$attrs",i&&i.attrs||r,null,!0),Pe(e,"$listeners",t._parentListeners||r,null,!0)}var zt=null;function Pt(e){Ct(e.prototype),e.prototype.$nextTick=function(e){return cn(e,this)},e.prototype._render=function(){var e=this,t=e.$options,n=t.render,r=t._parentVnode;r&&e._isMounted&&(e.$scopedSlots=Tt(e.$parent,r.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&Mt(e._slotsProxy,e.$scopedSlots)),e.$vnode=r;var i,a=me,o=zt;try{be(e),zt=e,i=n.call(e._renderProxy,e.$createElement)}catch(Za){Yt(Za,e,"render"),i=e._vnode}finally{zt=o,be(a)}return s(i)&&1===i.length&&(i=i[0]),i instanceof ye||(i=xe()),i.parent=r,i}}function Bt(e,t){return(e.__esModule||ge&&"Module"===e[Symbol.toStringTag])&&(e=e.default),h(e)?t.extend(e):e}function Wt(e,t,n,r,s){var i=xe();return i.asyncFactory=e,i.asyncMeta={data:t,context:n,children:r,tag:s},i}function Ut(e,t){if(o(e.error)&&a(e.errorComp))return e.errorComp;if(a(e.resolved))return e.resolved;var n=zt;if(n&&a(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n),o(e.loading)&&a(e.loadingComp))return e.loadingComp;if(n&&!a(e.owners)){var r=e.owners=[n],s=!0,u=null,l=null;n.$on("hook:destroyed",(function(){return k(r,n)}));var c=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==u&&(clearTimeout(u),u=null),null!==l&&(clearTimeout(l),l=null))},d=U((function(n){e.resolved=Bt(n,t),s?r.length=0:c(!0)})),p=U((function(t){a(e.errorComp)&&(e.error=!0,c(!0))})),f=e(d,p);return h(f)&&(m(f)?i(e.resolved)&&f.then(d,p):m(f.component)&&(f.component.then(d,p),a(f.error)&&(e.errorComp=Bt(f.error,t)),a(f.loading)&&(e.loadingComp=Bt(f.loading,t),0===f.delay?e.loading=!0:u=setTimeout((function(){u=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,c(!1))}),f.delay||200)),a(f.timeout)&&(l=setTimeout((function(){l=null,i(e.resolved)&&p(null)}),f.timeout)))),s=!1,e.loading?e.loadingComp:e.resolved}}function Vt(e){if(s(e))for(var t=0;t<e.length;t++){var n=e[t];if(a(n)&&(a(n.componentOptions)||Nt(n)))return n}}var Gt=1,Ht=2;function jt(e,t,n,r,i,a){return(s(n)||l(n))&&(i=r,r=n,n=void 0),o(a)&&(i=Ht),Kt(e,t,n,r,i)}function Kt(e,t,n,r,i){if(a(n)&&a(n.__ob__))return xe();if(a(n)&&a(n.is)&&(t=n.is),!t)return xe();var o,u;if(s(r)&&c(r[0])&&(n=n||{},n.scopedSlots={default:r[0]},r.length=0),i===Ht?r=ot(r):i===Gt&&(r=at(r)),"string"===typeof t){var l=void 0;u=e.$vnode&&e.$vnode.ns||K.getTagNamespace(t),o=K.isReservedTag(t)?new ye(K.parsePlatformTagName(t),n,r,void 0,void 0,e):n&&n.pre||!a(l=Sr(e.$options,"components",t))?new ye(t,n,r,void 0,void 0,e):ur(l,n,e,r,t)}else o=ur(t,n,e,r);return s(o)?o:a(o)?(a(u)&&qt(o,u),a(n)&&Xt(n),o):xe()}function qt(e,t,n){if(e.ns=t,"foreignObject"===e.tag&&(t=void 0,n=!0),a(e.children))for(var r=0,s=e.children.length;r<s;r++){var u=e.children[r];a(u.tag)&&(i(u.ns)||o(n)&&"svg"!==u.tag)&&qt(u,t,n)}}function Xt(e){h(e.style)&&gn(e.style),h(e.class)&&gn(e.class)}function Yt(e,t,n){Ne();try{if(t){var r=t;while(r=r.$parent){var s=r.$options.errorCaptured;if(s)for(var i=0;i<s.length;i++)try{var a=!1===s[i].call(r,e,t,n);if(a)return}catch(Za){Zt(Za,r,"errorCaptured hook")}}}Zt(e,t,n)}finally{Te()}}function Jt(e,t,n,r,s){var i;try{i=n?e.apply(t,n):e.call(t),i&&!i._isVue&&m(i)&&!i._handled&&(i.catch((function(e){return Yt(e,r,s+" (Promise/async)")})),i._handled=!0)}catch(Za){Yt(Za,r,s)}return i}function Zt(e,t,n){if(K.errorHandler)try{return K.errorHandler.call(null,e,t,n)}catch(Za){Za!==e&&Qt(Za,null,"config.errorHandler")}Qt(e,t,n)}function Qt(e,t,n){if(!ee||"undefined"===typeof console)throw e;console.error(e)}var en,tn=!1,nn=[],rn=!1;function sn(){rn=!1;var e=nn.slice(0);nn.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!==typeof Promise&&pe(Promise)){var an=Promise.resolve();en=function(){an.then(sn),ie&&setTimeout(L)},tn=!0}else if(ne||"undefined"===typeof MutationObserver||!pe(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())en="undefined"!==typeof setImmediate&&pe(setImmediate)?function(){setImmediate(sn)}:function(){setTimeout(sn,0)};else{var on=1,un=new MutationObserver(sn),ln=document.createTextNode(String(on));un.observe(ln,{characterData:!0}),en=function(){on=(on+1)%2,ln.data=String(on)},tn=!0}function cn(e,t){var n;if(nn.push((function(){if(e)try{e.call(t)}catch(Za){Yt(Za,t,"nextTick")}else n&&n(t)})),rn||(rn=!0,en()),!e&&"undefined"!==typeof Promise)return new Promise((function(e){n=e}))}function hn(e){return function(t,n){if(void 0===n&&(n=me),n)return dn(n,e,t)}}function dn(e,t,n){var r=e.$options;r[t]=br(r[t],n)}hn("beforeMount"),hn("mounted"),hn("beforeUpdate"),hn("updated"),hn("beforeDestroy"),hn("destroyed"),hn("activated"),hn("deactivated"),hn("serverPrefetch"),hn("renderTracked"),hn("renderTriggered"),hn("errorCaptured");var pn="2.7.16";var fn=new fe;function gn(e){return mn(e,fn),fn.clear(),e}function mn(e,t){var n,r,i=s(e);if(!(!i&&!h(e)||e.__v_skip||Object.isFrozen(e)||e instanceof ye)){if(e.__ob__){var a=e.__ob__.dep.id;if(t.has(a))return;t.add(a)}if(i){n=e.length;while(n--)mn(e[n],t)}else if(je(e))mn(e.value,t);else{r=Object.keys(e),n=r.length;while(n--)mn(e[r[n]],t)}}}var bn,yn=0,xn=function(){function e(e,t,n,r,s){Je(this,Xe&&!Xe._vm?Xe:e?e._scope:void 0),(this.vm=e)&&s&&(e._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++yn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new fe,this.newDepIds=new fe,this.expression="",c(t)?this.getter=t:(this.getter=Z(t),this.getter||(this.getter=L)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;Ne(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(Za){if(!this.user)throw Za;Yt(Za,t,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&gn(e),Te(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},e.prototype.cleanupDeps=function(){var e=this.deps.length;while(e--){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():Jn(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||h(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'.concat(this.expression,'"');Jt(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){var e=this.deps.length;while(e--)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&k(this.vm._scope.effects,this),this.active){var e=this.deps.length;while(e--)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function vn(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Cn(e,t)}function wn(e,t){bn.$on(e,t)}function kn(e,t){bn.$off(e,t)}function In(e,t){var n=bn;return function r(){var s=t.apply(null,arguments);null!==s&&n.$off(e,r)}}function Cn(e,t,n){bn=e,nt(t,n||{},wn,kn,In,e),bn=void 0}function Sn(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this;if(s(e))for(var i=0,a=e.length;i<a;i++)r.$on(e[i],n);else(r._events[e]||(r._events[e]=[])).push(n),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(s(e)){for(var r=0,i=e.length;r<i;r++)n.$off(e[r],t);return n}var a,o=n._events[e];if(!o)return n;if(!t)return n._events[e]=null,n;var u=o.length;while(u--)if(a=o[u],a===t||a.fn===t){o.splice(u,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?D(n):n;for(var r=D(arguments,1),s='event handler for "'.concat(e,'"'),i=0,a=n.length;i<a;i++)Jt(n[i],t,r,t,s)}return t}}var $n=null;function Nn(e){var t=$n;return $n=e,function(){$n=t}}function Tn(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){while(n.$options.abstract&&n.$parent)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._provided=n?n._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}function En(e){e.prototype._update=function(e,t){var n=this,r=n.$el,s=n._vnode,i=Nn(n);n._vnode=e,n.$el=s?n.__patch__(s,e):n.__patch__(n.$el,e,t,!1),i(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n);var a=n;while(a&&a.$vnode&&a.$parent&&a.$vnode===a.$parent._vnode)a.$parent.$el=a.$el,a=a.$parent},e.prototype.$forceUpdate=function(){var e=this;e._watcher&&e._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){On(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||k(t.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),On(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}function Rn(e,t,n){var r;e.$el=t,e.$options.render||(e.$options.render=xe),On(e,"beforeMount"),r=function(){e._update(e._render(),n)};var s={before:function(){e._isMounted&&!e._isDestroyed&&On(e,"beforeUpdate")}};new xn(e,r,L,s,!0),n=!1;var i=e._preWatchers;if(i)for(var a=0;a<i.length;a++)i[a].run();return null==e.$vnode&&(e._isMounted=!0,On(e,"mounted")),e}function _n(e,t,n,s,i){var a=s.data.scopedSlots,o=e.$scopedSlots,u=!!(a&&!a.$stable||o!==r&&!o.$stable||a&&e.$scopedSlots.$key!==a.$key||!a&&e.$scopedSlots.$key),l=!!(i||e.$options._renderChildren||u),c=e.$vnode;e.$options._parentVnode=s,e.$vnode=s,e._vnode&&(e._vnode.parent=s),e.$options._renderChildren=i;var h=s.data.attrs||r;e._attrsProxy&&Ft(e._attrsProxy,h,c.data&&c.data.attrs||r,e,"$attrs")&&(l=!0),e.$attrs=h,n=n||r;var d=e.$options._parentListeners;if(e._listenersProxy&&Ft(e._listenersProxy,n,d||r,e,"$listeners"),e.$listeners=e.$options._parentListeners=n,Cn(e,n,d),t&&e.$options.props){Oe(!1);for(var p=e._props,f=e.$options._propKeys||[],g=0;g<f.length;g++){var m=f[g],b=e.$options.props;p[m]=$r(m,b,t,e)}Oe(!0),e.$options.propsData=t}l&&(e.$slots=St(i,s.context),e.$forceUpdate())}function An(e){while(e&&(e=e.$parent))if(e._inactive)return!0;return!1}function Fn(e,t){if(t){if(e._directInactive=!1,An(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Fn(e.$children[n]);On(e,"activated")}}function Dn(e,t){if((!t||(e._directInactive=!0,!An(e)))&&!e._inactive){e._inactive=!0;for(var n=0;n<e.$children.length;n++)Dn(e.$children[n]);On(e,"deactivated")}}function On(e,t,n,r){void 0===r&&(r=!0),Ne();var s=me,i=Ze();r&&be(e);var a=e.$options[t],o="".concat(t," hook");if(a)for(var u=0,l=a.length;u<l;u++)Jt(a[u],e,n||null,e,o);e._hasHookEvent&&e.$emit("hook:"+t),r&&(be(s),i&&i.on()),Te()}var Mn=[],Ln=[],zn={},Pn=!1,Bn=!1,Wn=0;function Un(){Wn=Mn.length=Ln.length=0,zn={},Pn=Bn=!1}var Vn=0,Gn=Date.now;if(ee&&!ne){var Hn=window.performance;Hn&&"function"===typeof Hn.now&&Gn()>document.createEvent("Event").timeStamp&&(Gn=function(){return Hn.now()})}var jn=function(e,t){if(e.post){if(!t.post)return 1}else if(t.post)return-1;return e.id-t.id};function Kn(){var e,t;for(Vn=Gn(),Bn=!0,Mn.sort(jn),Wn=0;Wn<Mn.length;Wn++)e=Mn[Wn],e.before&&e.before(),t=e.id,zn[t]=null,e.run();var n=Ln.slice(),r=Mn.slice();Un(),Yn(n),qn(r),Ce(),de&&K.devtools&&de.emit("flush")}function qn(e){var t=e.length;while(t--){var n=e[t],r=n.vm;r&&r._watcher===n&&r._isMounted&&!r._isDestroyed&&On(r,"updated")}}function Xn(e){e._inactive=!1,Ln.push(e)}function Yn(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Fn(e[t],!0)}function Jn(e){var t=e.id;if(null==zn[t]&&(e!==Se.target||!e.noRecurse)){if(zn[t]=!0,Bn){var n=Mn.length-1;while(n>Wn&&Mn[n].id>e.id)n--;Mn.splice(n+1,0,e)}else Mn.push(e);Pn||(Pn=!0,cn(Kn))}}function Zn(e){var t=e.$options.provide;if(t){var n=c(t)?t.call(e):t;if(!h(n))return;for(var r=Qe(e),s=ge?Reflect.ownKeys(n):Object.keys(n),i=0;i<s.length;i++){var a=s[i];Object.defineProperty(r,a,Object.getOwnPropertyDescriptor(n,a))}}}function Qn(e){var t=er(e.$options.inject,e);t&&(Oe(!1),Object.keys(t).forEach((function(n){Pe(e,n,t[n])})),Oe(!0))}function er(e,t){if(e){for(var n=Object.create(null),r=ge?Reflect.ownKeys(e):Object.keys(e),s=0;s<r.length;s++){var i=r[s];if("__ob__"!==i){var a=e[i].from;if(a in t._provided)n[i]=t._provided[a];else if("default"in e[i]){var o=e[i].default;n[i]=c(o)?o.call(t):o}else 0}}return n}}function tr(e,t,n,i,a){var u,l=this,c=a.options;C(i,"_uid")?(u=Object.create(i),u._original=i):(u=i,i=i._original);var h=o(c._compiled),d=!h;this.data=e,this.props=t,this.children=n,this.parent=i,this.listeners=e.on||r,this.injections=er(c.inject,i),this.slots=function(){return l.$slots||Tt(i,e.scopedSlots,l.$slots=St(n,i)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return Tt(i,e.scopedSlots,this.slots())}}),h&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=Tt(i,e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,t,n,r){var a=jt(u,e,t,n,r,d);return a&&!s(a)&&(a.fnScopeId=c._scopeId,a.fnContext=i),a}:this._c=function(e,t,n,r){return jt(u,e,t,n,r,d)}}function nr(e,t,n,i,o){var u=e.options,l={},c=u.props;if(a(c))for(var h in c)l[h]=$r(h,c,t||r);else a(n.attrs)&&sr(l,n.attrs),a(n.props)&&sr(l,n.props);var d=new tr(n,l,o,i,e),p=u.render.call(null,d._c,d);if(p instanceof ye)return rr(p,n,d.parent,u,d);if(s(p)){for(var f=ot(p)||[],g=new Array(f.length),m=0;m<f.length;m++)g[m]=rr(f[m],n,d.parent,u,d);return g}}function rr(e,t,n,r,s){var i=we(e);return i.fnContext=n,i.fnOptions=r,t.slot&&((i.data||(i.data={})).slot=t.slot),i}function sr(e,t){for(var n in t)e[N(n)]=t[n]}function ir(e){return e.name||e.__name||e._componentTag}Ct(tr.prototype);var ar={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;ar.prepatch(n,n)}else{var r=e.componentInstance=lr(e,$n);r.$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions,r=t.componentInstance=e.componentInstance;_n(r,n.propsData,n.listeners,t,n.children)},insert:function(e){var t=e.context,n=e.componentInstance;n._isMounted||(n._isMounted=!0,On(n,"mounted")),e.data.keepAlive&&(t._isMounted?Xn(n):Fn(n,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?Dn(t,!0):t.$destroy())}},or=Object.keys(ar);function ur(e,t,n,r,s){if(!i(e)){var u=n.$options._base;if(h(e)&&(e=u.extend(e)),"function"===typeof e){var l;if(i(e.cid)&&(l=e,e=Ut(l,u),void 0===e))return Wt(l,t,n,r,s);t=t||{},Yr(e),a(t.model)&&dr(e.options,t);var c=st(t,e,s);if(o(e.options.functional))return nr(e,c,t,n,r);var d=t.on;if(t.on=t.nativeOn,o(e.options.abstract)){var p=t.slot;t={},p&&(t.slot=p)}cr(t);var f=ir(e.options)||s,g=new ye("vue-component-".concat(e.cid).concat(f?"-".concat(f):""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:c,listeners:d,tag:s,children:r},l);return g}}}function lr(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},r=e.data.inlineTemplate;return a(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns),new e.componentOptions.Ctor(n)}function cr(e){for(var t=e.hook||(e.hook={}),n=0;n<or.length;n++){var r=or[n],s=t[r],i=ar[r];s===i||s&&s._merged||(t[r]=s?hr(i,s):i)}}function hr(e,t){var n=function(n,r){e(n,r),t(n,r)};return n._merged=!0,n}function dr(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var i=t.on||(t.on={}),o=i[r],u=t.model.callback;a(o)?(s(o)?-1===o.indexOf(u):o!==u)&&(i[r]=[u].concat(o)):i[r]=u}var pr=L,fr=K.optionMergeStrategies;function gr(e,t,n){if(void 0===n&&(n=!0),!t)return e;for(var r,s,i,a=ge?Reflect.ownKeys(t):Object.keys(t),o=0;o<a.length;o++)r=a[o],"__ob__"!==r&&(s=e[r],i=t[r],n&&C(e,r)?s!==i&&p(s)&&p(i)&&gr(s,i):Be(e,r,i));return e}function mr(e,t,n){return n?function(){var r=c(t)?t.call(n,n):t,s=c(e)?e.call(n,n):e;return r?gr(r,s):s}:t?e?function(){return gr(c(t)?t.call(this,this):t,c(e)?e.call(this,this):e)}:t:e}function br(e,t){var n=t?e?e.concat(t):s(t)?t:[t]:e;return n?yr(n):n}function yr(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}function xr(e,t,n,r){var s=Object.create(e||null);return t?O(s,t):s}fr.data=function(e,t,n){return n?mr(e,t,n):t&&"function"!==typeof t?e:mr(e,t)},j.forEach((function(e){fr[e]=br})),H.forEach((function(e){fr[e+"s"]=xr})),fr.watch=function(e,t,n,r){if(e===ue&&(e=void 0),t===ue&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};for(var a in O(i,e),t){var o=i[a],u=t[a];o&&!s(o)&&(o=[o]),i[a]=o?o.concat(u):s(u)?u:[u]}return i},fr.props=fr.methods=fr.inject=fr.computed=function(e,t,n,r){if(!e)return t;var s=Object.create(null);return O(s,e),t&&O(s,t),s},fr.provide=function(e,t){return e?function(){var n=Object.create(null);return gr(n,c(e)?e.call(this):e),t&&gr(n,c(t)?t.call(this):t,!1),n}:t};var vr=function(e,t){return void 0===t?e:t};function wr(e,t){var n=e.props;if(n){var r,i,a,o={};if(s(n)){r=n.length;while(r--)i=n[r],"string"===typeof i&&(a=N(i),o[a]={type:null})}else if(p(n))for(var u in n)i=n[u],a=N(u),o[a]=p(i)?i:{type:i};else 0;e.props=o}}function kr(e,t){var n=e.inject;if(n){var r=e.inject={};if(s(n))for(var i=0;i<n.length;i++)r[n[i]]={from:n[i]};else if(p(n))for(var a in n){var o=n[a];r[a]=p(o)?O({from:a},o):{from:o}}else 0}}function Ir(e){var t=e.directives;if(t)for(var n in t){var r=t[n];c(r)&&(t[n]={bind:r,update:r})}}function Cr(e,t,n){if(c(t)&&(t=t.options),wr(t,n),kr(t,n),Ir(t),!t._base&&(t.extends&&(e=Cr(e,t.extends,n)),t.mixins))for(var r=0,s=t.mixins.length;r<s;r++)e=Cr(e,t.mixins[r],n);var i,a={};for(i in e)o(i);for(i in t)C(e,i)||o(i);function o(r){var s=fr[r]||vr;a[r]=s(e[r],t[r],n,r)}return a}function Sr(e,t,n,r){if("string"===typeof n){var s=e[t];if(C(s,n))return s[n];var i=N(n);if(C(s,i))return s[i];var a=T(i);if(C(s,a))return s[a];var o=s[n]||s[i]||s[a];return o}}function $r(e,t,n,r){var s=t[e],i=!C(n,e),a=n[e],o=_r(Boolean,s.type);if(o>-1)if(i&&!C(s,"default"))a=!1;else if(""===a||a===R(e)){var u=_r(String,s.type);(u<0||o<u)&&(a=!0)}if(void 0===a){a=Nr(r,s,e);var l=De;Oe(!0),ze(a),Oe(l)}return a}function Nr(e,t,n){if(C(t,"default")){var r=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:c(r)&&"Function"!==Er(t.type)?r.call(e):r}}var Tr=/^\s*function (\w+)/;function Er(e){var t=e&&e.toString().match(Tr);return t?t[1]:""}function Rr(e,t){return Er(e)===Er(t)}function _r(e,t){if(!s(t))return Rr(t,e)?0:-1;for(var n=0,r=t.length;n<r;n++)if(Rr(t[n],e))return n;return-1}var Ar={enumerable:!0,configurable:!0,get:L,set:L};function Fr(e,t,n){Ar.get=function(){return this[t][n]},Ar.set=function(e){this[t][n]=e},Object.defineProperty(e,n,Ar)}function Dr(e){var t=e.$options;if(t.props&&Or(e,t.props),_t(e),t.methods&&Vr(e,t.methods),t.data)Mr(e);else{var n=ze(e._data={});n&&n.vmCount++}t.computed&&Pr(e,t.computed),t.watch&&t.watch!==ue&&Gr(e,t.watch)}function Or(e,t){var n=e.$options.propsData||{},r=e._props=Ve({}),s=e.$options._propKeys=[],i=!e.$parent;i||Oe(!1);var a=function(i){s.push(i);var a=$r(i,t,n,e);Pe(r,i,a,void 0,!0),i in e||Fr(e,"_props",i)};for(var o in t)a(o);Oe(!0)}function Mr(e){var t=e.$options.data;t=e._data=c(t)?Lr(t,e):t||{},p(t)||(t={});var n=Object.keys(t),r=e.$options.props,s=(e.$options.methods,n.length);while(s--){var i=n[s];0,r&&C(r,i)||X(i)||Fr(e,"_data",i)}var a=ze(t);a&&a.vmCount++}function Lr(e,t){Ne();try{return e.call(t,t)}catch(Za){return Yt(Za,t,"data()"),{}}finally{Te()}}var zr={lazy:!0};function Pr(e,t){var n=e._computedWatchers=Object.create(null),r=he();for(var s in t){var i=t[s],a=c(i)?i:i.get;0,r||(n[s]=new xn(e,a||L,L,zr)),s in e||Br(e,s,i)}}function Br(e,t,n){var r=!he();c(n)?(Ar.get=r?Wr(t):Ur(n),Ar.set=L):(Ar.get=n.get?r&&!1!==n.cache?Wr(t):Ur(n.get):L,Ar.set=n.set||L),Object.defineProperty(e,t,Ar)}function Wr(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),Se.target&&t.depend(),t.value}}function Ur(e){return function(){return e.call(this,this)}}function Vr(e,t){e.$options.props;for(var n in t)e[n]="function"!==typeof t[n]?L:F(t[n],e)}function Gr(e,t){for(var n in t){var r=t[n];if(s(r))for(var i=0;i<r.length;i++)Hr(e,n,r[i]);else Hr(e,n,r)}}function Hr(e,t,n,r){return p(n)&&(r=n,n=n.handler),"string"===typeof n&&(n=e[n]),e.$watch(t,n,r)}function jr(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Be,e.prototype.$delete=We,e.prototype.$watch=function(e,t,n){var r=this;if(p(t))return Hr(r,e,t,n);n=n||{},n.user=!0;var s=new xn(r,e,t,n);if(n.immediate){var i='callback for immediate watcher "'.concat(s.expression,'"');Ne(),Jt(t,r,[s.value],r,i),Te()}return function(){s.teardown()}}}var Kr=0;function qr(e){e.prototype._init=function(e){var t=this;t._uid=Kr++,t._isVue=!0,t.__v_skip=!0,t._scope=new Ye(!0),t._scope.parent=void 0,t._scope._vm=!0,e&&e._isComponent?Xr(t,e):t.$options=Cr(Yr(t.constructor),e||{},t),t._renderProxy=t,t._self=t,Tn(t),vn(t),Lt(t),On(t,"beforeCreate",void 0,!1),Qn(t),Dr(t),Zn(t),On(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}function Xr(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r;var s=r.componentOptions;n.propsData=s.propsData,n._parentListeners=s.listeners,n._renderChildren=s.children,n._componentTag=s.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}function Yr(e){var t=e.options;if(e.super){var n=Yr(e.super),r=e.superOptions;if(n!==r){e.superOptions=n;var s=Jr(e);s&&O(e.extendOptions,s),t=e.options=Cr(n,e.extendOptions),t.name&&(t.components[t.name]=e)}}return t}function Jr(e){var t,n=e.options,r=e.sealedOptions;for(var s in n)n[s]!==r[s]&&(t||(t={}),t[s]=n[s]);return t}function Zr(e){this._init(e)}function Qr(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=D(arguments,1);return n.unshift(this),c(e.install)?e.install.apply(e,n):c(e)&&e.apply(null,n),t.push(e),this}}function es(e){e.mixin=function(e){return this.options=Cr(this.options,e),this}}function ts(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,s=e._Ctor||(e._Ctor={});if(s[r])return s[r];var i=ir(e)||ir(n.options);var a=function(e){this._init(e)};return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,a.cid=t++,a.options=Cr(n.options,e),a["super"]=n,a.options.props&&ns(a),a.options.computed&&rs(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,H.forEach((function(e){a[e]=n[e]})),i&&(a.options.components[i]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=O({},a.options),s[r]=a,a}}function ns(e){var t=e.options.props;for(var n in t)Fr(e.prototype,"_props",n)}function rs(e){var t=e.options.computed;for(var n in t)Br(e.prototype,n,t[n])}function ss(e){H.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&p(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&c(n)&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}function is(e){return e&&(ir(e.Ctor.options)||e.tag)}function as(e,t){return s(e)?e.indexOf(t)>-1:"string"===typeof e?e.split(",").indexOf(t)>-1:!!f(e)&&e.test(t)}function os(e,t){var n=e.cache,r=e.keys,s=e._vnode,i=e.$vnode;for(var a in n){var o=n[a];if(o){var u=o.name;u&&!t(u)&&us(n,a,r,s)}}i.componentOptions.children=void 0}function us(e,t,n,r){var s=e[t];!s||r&&s.tag===r.tag||s.componentInstance.$destroy(),e[t]=null,k(n,t)}qr(Zr),jr(Zr),Sn(Zr),En(Zr),Pt(Zr);var ls=[String,RegExp,Array],cs={name:"keep-alive",abstract:!0,props:{include:ls,exclude:ls,max:[String,Number]},methods:{cacheVNode:function(){var e=this,t=e.cache,n=e.keys,r=e.vnodeToCache,s=e.keyToCache;if(r){var i=r.tag,a=r.componentInstance,o=r.componentOptions;t[s]={name:is(o),tag:i,componentInstance:a},n.push(s),this.max&&n.length>parseInt(this.max)&&us(t,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)us(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){os(e,(function(e){return as(t,e)}))})),this.$watch("exclude",(function(t){os(e,(function(e){return!as(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Vt(e),n=t&&t.componentOptions;if(n){var r=is(n),s=this,i=s.include,a=s.exclude;if(i&&(!r||!as(i,r))||a&&r&&as(a,r))return t;var o=this,u=o.cache,l=o.keys,c=null==t.key?n.Ctor.cid+(n.tag?"::".concat(n.tag):""):t.key;u[c]?(t.componentInstance=u[c].componentInstance,k(l,c),l.push(c)):(this.vnodeToCache=t,this.keyToCache=c),t.data.keepAlive=!0}return t||e&&e[0]}},hs={KeepAlive:cs};function ds(e){var t={get:function(){return K}};Object.defineProperty(e,"config",t),e.util={warn:pr,extend:O,mergeOptions:Cr,defineReactive:Pe},e.set=Be,e.delete=We,e.nextTick=cn,e.observable=function(e){return ze(e),e},e.options=Object.create(null),H.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,O(e.options.components,hs),Qr(e),es(e),ts(e),ss(e)}ds(Zr),Object.defineProperty(Zr.prototype,"$isServer",{get:he}),Object.defineProperty(Zr.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Zr,"FunctionalRenderContext",{value:tr}),Zr.version=pn;var ps=v("style,class"),fs=v("input,textarea,option,select,progress"),gs=function(e,t,n){return"value"===n&&fs(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},ms=v("contenteditable,draggable,spellcheck"),bs=v("events,caret,typing,plaintext-only"),ys=function(e,t){return Is(t)||"false"===t?"false":"contenteditable"===e&&bs(t)?t:"true"},xs=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),vs="http://www.w3.org/1999/xlink",ws=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},ks=function(e){return ws(e)?e.slice(6,e.length):""},Is=function(e){return null==e||!1===e};function Cs(e){var t=e.data,n=e,r=e;while(a(r.componentInstance))r=r.componentInstance._vnode,r&&r.data&&(t=Ss(r.data,t));while(a(n=n.parent))n&&n.data&&(t=Ss(t,n.data));return $s(t.staticClass,t.class)}function Ss(e,t){return{staticClass:Ns(e.staticClass,t.staticClass),class:a(e.class)?[e.class,t.class]:t.class}}function $s(e,t){return a(e)||a(t)?Ns(e,Ts(t)):""}function Ns(e,t){return e?t?e+" "+t:e:t||""}function Ts(e){return Array.isArray(e)?Es(e):h(e)?Rs(e):"string"===typeof e?e:""}function Es(e){for(var t,n="",r=0,s=e.length;r<s;r++)a(t=Ts(e[r]))&&""!==t&&(n&&(n+=" "),n+=t);return n}function Rs(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}var _s={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},As=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Fs=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Ds=function(e){return As(e)||Fs(e)};function Os(e){return Fs(e)?"svg":"math"===e?"math":void 0}var Ms=Object.create(null);function Ls(e){if(!ee)return!0;if(Ds(e))return!1;if(e=e.toLowerCase(),null!=Ms[e])return Ms[e];var t=document.createElement(e);return e.indexOf("-")>-1?Ms[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Ms[e]=/HTMLUnknownElement/.test(t.toString())}var zs=v("text,number,password,search,email,tel,url");function Ps(e){if("string"===typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}function Bs(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n}function Ws(e,t){return document.createElementNS(_s[e],t)}function Us(e){return document.createTextNode(e)}function Vs(e){return document.createComment(e)}function Gs(e,t,n){e.insertBefore(t,n)}function Hs(e,t){e.removeChild(t)}function js(e,t){e.appendChild(t)}function Ks(e){return e.parentNode}function qs(e){return e.nextSibling}function Xs(e){return e.tagName}function Ys(e,t){e.textContent=t}function Js(e,t){e.setAttribute(t,"")}var Zs=Object.freeze({__proto__:null,createElement:Bs,createElementNS:Ws,createTextNode:Us,createComment:Vs,insertBefore:Gs,removeChild:Hs,appendChild:js,parentNode:Ks,nextSibling:qs,tagName:Xs,setTextContent:Ys,setStyleScope:Js}),Qs={create:function(e,t){ei(t)},update:function(e,t){e.data.ref!==t.data.ref&&(ei(e,!0),ei(t))},destroy:function(e){ei(e,!0)}};function ei(e,t){var n=e.data.ref;if(a(n)){var r=e.context,i=e.componentInstance||e.elm,o=t?null:i,u=t?void 0:i;if(c(n))Jt(n,r,[o],r,"template ref function");else{var l=e.data.refInFor,h="string"===typeof n||"number"===typeof n,d=je(n),p=r.$refs;if(h||d)if(l){var f=h?p[n]:n.value;t?s(f)&&k(f,i):s(f)?f.includes(i)||f.push(i):h?(p[n]=[i],ti(r,n,p[n])):n.value=[i]}else if(h){if(t&&p[n]!==i)return;p[n]=u,ti(r,n,o)}else if(d){if(t&&n.value!==i)return;n.value=o}else 0}}}function ti(e,t,n){var r=e._setupState;r&&C(r,t)&&(je(r[t])?r[t].value=n:r[t]=n)}var ni=new ye("",{},[]),ri=["create","activate","update","remove","destroy"];function si(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&a(e.data)===a(t.data)&&ii(e,t)||o(e.isAsyncPlaceholder)&&i(t.asyncFactory.error))}function ii(e,t){if("input"!==e.tag)return!0;var n,r=a(n=e.data)&&a(n=n.attrs)&&n.type,s=a(n=t.data)&&a(n=n.attrs)&&n.type;return r===s||zs(r)&&zs(s)}function ai(e,t,n){var r,s,i={};for(r=t;r<=n;++r)s=e[r].key,a(s)&&(i[s]=r);return i}function oi(e){var t,n,r={},u=e.modules,c=e.nodeOps;for(t=0;t<ri.length;++t)for(r[ri[t]]=[],n=0;n<u.length;++n)a(u[n][ri[t]])&&r[ri[t]].push(u[n][ri[t]]);function h(e){return new ye(c.tagName(e).toLowerCase(),{},[],void 0,e)}function d(e,t){function n(){0===--n.listeners&&p(e)}return n.listeners=t,n}function p(e){var t=c.parentNode(e);a(t)&&c.removeChild(t,e)}function f(e,t,n,r,s,i,u){if(a(e.elm)&&a(i)&&(e=i[u]=we(e)),e.isRootInsert=!s,!g(e,t,n,r)){var l=e.data,h=e.children,d=e.tag;a(d)?(e.elm=e.ns?c.createElementNS(e.ns,d):c.createElement(d,e),I(e),x(e,h,t),a(l)&&k(e,t),y(n,e.elm,r)):o(e.isComment)?(e.elm=c.createComment(e.text),y(n,e.elm,r)):(e.elm=c.createTextNode(e.text),y(n,e.elm,r))}}function g(e,t,n,r){var s=e.data;if(a(s)){var i=a(e.componentInstance)&&s.keepAlive;if(a(s=s.hook)&&a(s=s.init)&&s(e,!1),a(e.componentInstance))return m(e,t),y(n,e.elm,r),o(i)&&b(e,t,n,r),!0}}function m(e,t){a(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,w(e)?(k(e,t),I(e)):(ei(e),t.push(e))}function b(e,t,n,s){var i,o=e;while(o.componentInstance)if(o=o.componentInstance._vnode,a(i=o.data)&&a(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](ni,o);t.push(o);break}y(n,e.elm,s)}function y(e,t,n){a(e)&&(a(n)?c.parentNode(n)===e&&c.insertBefore(e,t,n):c.appendChild(e,t))}function x(e,t,n){if(s(t)){0;for(var r=0;r<t.length;++r)f(t[r],n,e.elm,null,!0,t,r)}else l(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function w(e){while(e.componentInstance)e=e.componentInstance._vnode;return a(e.tag)}function k(e,n){for(var s=0;s<r.create.length;++s)r.create[s](ni,e);t=e.data.hook,a(t)&&(a(t.create)&&t.create(ni,e),a(t.insert)&&n.push(e))}function I(e){var t;if(a(t=e.fnScopeId))c.setStyleScope(e.elm,t);else{var n=e;while(n)a(t=n.context)&&a(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t),n=n.parent}a(t=$n)&&t!==e.context&&t!==e.fnContext&&a(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t)}function C(e,t,n,r,s,i){for(;r<=s;++r)f(n[r],i,e,t,!1,n,r)}function S(e){var t,n,s=e.data;if(a(s))for(a(t=s.hook)&&a(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(a(t=e.children))for(n=0;n<e.children.length;++n)S(e.children[n])}function $(e,t,n){for(;t<=n;++t){var r=e[t];a(r)&&(a(r.tag)?(N(r),S(r)):p(r.elm))}}function N(e,t){if(a(t)||a(e.data)){var n,s=r.remove.length+1;for(a(t)?t.listeners+=s:t=d(e.elm,s),a(n=e.componentInstance)&&a(n=n._vnode)&&a(n.data)&&N(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);a(n=e.data.hook)&&a(n=n.remove)?n(e,t):t()}else p(e.elm)}function T(e,t,n,r,s){var o,u,l,h,d=0,p=0,g=t.length-1,m=t[0],b=t[g],y=n.length-1,x=n[0],v=n[y],w=!s;while(d<=g&&p<=y)i(m)?m=t[++d]:i(b)?b=t[--g]:si(m,x)?(R(m,x,r,n,p),m=t[++d],x=n[++p]):si(b,v)?(R(b,v,r,n,y),b=t[--g],v=n[--y]):si(m,v)?(R(m,v,r,n,y),w&&c.insertBefore(e,m.elm,c.nextSibling(b.elm)),m=t[++d],v=n[--y]):si(b,x)?(R(b,x,r,n,p),w&&c.insertBefore(e,b.elm,m.elm),b=t[--g],x=n[++p]):(i(o)&&(o=ai(t,d,g)),u=a(x.key)?o[x.key]:E(x,t,d,g),i(u)?f(x,r,e,m.elm,!1,n,p):(l=t[u],si(l,x)?(R(l,x,r,n,p),t[u]=void 0,w&&c.insertBefore(e,l.elm,m.elm)):f(x,r,e,m.elm,!1,n,p)),x=n[++p]);d>g?(h=i(n[y+1])?null:n[y+1].elm,C(e,h,n,p,y,r)):p>y&&$(t,d,g)}function E(e,t,n,r){for(var s=n;s<r;s++){var i=t[s];if(a(i)&&si(e,i))return s}}function R(e,t,n,s,u,l){if(e!==t){a(t.elm)&&a(s)&&(t=s[u]=we(t));var h=t.elm=e.elm;if(o(e.isAsyncPlaceholder))a(t.asyncFactory.resolved)?F(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(o(t.isStatic)&&o(e.isStatic)&&t.key===e.key&&(o(t.isCloned)||o(t.isOnce)))t.componentInstance=e.componentInstance;else{var d,p=t.data;a(p)&&a(d=p.hook)&&a(d=d.prepatch)&&d(e,t);var f=e.children,g=t.children;if(a(p)&&w(t)){for(d=0;d<r.update.length;++d)r.update[d](e,t);a(d=p.hook)&&a(d=d.update)&&d(e,t)}i(t.text)?a(f)&&a(g)?f!==g&&T(h,f,g,n,l):a(g)?(a(e.text)&&c.setTextContent(h,""),C(h,null,g,0,g.length-1,n)):a(f)?$(f,0,f.length-1):a(e.text)&&c.setTextContent(h,""):e.text!==t.text&&c.setTextContent(h,t.text),a(p)&&a(d=p.hook)&&a(d=d.postpatch)&&d(e,t)}}}function _(e,t,n){if(o(n)&&a(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var A=v("attrs,class,staticClass,staticStyle,key");function F(e,t,n,r){var s,i=t.tag,u=t.data,l=t.children;if(r=r||u&&u.pre,t.elm=e,o(t.isComment)&&a(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(a(u)&&(a(s=u.hook)&&a(s=s.init)&&s(t,!0),a(s=t.componentInstance)))return m(t,n),!0;if(a(i)){if(a(l))if(e.hasChildNodes())if(a(s=u)&&a(s=s.domProps)&&a(s=s.innerHTML)){if(s!==e.innerHTML)return!1}else{for(var c=!0,h=e.firstChild,d=0;d<l.length;d++){if(!h||!F(h,l[d],n,r)){c=!1;break}h=h.nextSibling}if(!c||h)return!1}else x(t,l,n);if(a(u)){var p=!1;for(var f in u)if(!A(f)){p=!0,k(t,n);break}!p&&u["class"]&&gn(u["class"])}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,s){if(!i(t)){var u=!1,l=[];if(i(e))u=!0,f(t,l);else{var d=a(e.nodeType);if(!d&&si(e,t))R(e,t,l,null,null,s);else{if(d){if(1===e.nodeType&&e.hasAttribute(G)&&(e.removeAttribute(G),n=!0),o(n)&&F(e,t,l))return _(t,l,!0),e;e=h(e)}var p=e.elm,g=c.parentNode(p);if(f(t,l,p._leaveCb?null:g,c.nextSibling(p)),a(t.parent)){var m=t.parent,b=w(t);while(m){for(var y=0;y<r.destroy.length;++y)r.destroy[y](m);if(m.elm=t.elm,b){for(var x=0;x<r.create.length;++x)r.create[x](ni,m);var v=m.data.hook.insert;if(v.merged)for(var k=v.fns.slice(1),I=0;I<k.length;I++)k[I]()}else ei(m);m=m.parent}}a(g)?$([e],0,0):a(e.tag)&&S(e)}}return _(t,l,u),t.elm}a(e)&&S(e)}}var ui={create:li,update:li,destroy:function(e){li(e,ni)}};function li(e,t){(e.data.directives||t.data.directives)&&ci(e,t)}function ci(e,t){var n,r,s,i=e===ni,a=t===ni,o=di(e.data.directives,e.context),u=di(t.data.directives,t.context),l=[],c=[];for(n in u)r=o[n],s=u[n],r?(s.oldValue=r.value,s.oldArg=r.arg,fi(s,"update",t,e),s.def&&s.def.componentUpdated&&c.push(s)):(fi(s,"bind",t,e),s.def&&s.def.inserted&&l.push(s));if(l.length){var h=function(){for(var n=0;n<l.length;n++)fi(l[n],"inserted",t,e)};i?rt(t,"insert",h):h()}if(c.length&&rt(t,"postpatch",(function(){for(var n=0;n<c.length;n++)fi(c[n],"componentUpdated",t,e)})),!i)for(n in o)u[n]||fi(o[n],"unbind",e,e,a)}var hi=Object.create(null);function di(e,t){var n,r,s=Object.create(null);if(!e)return s;for(n=0;n<e.length;n++){if(r=e[n],r.modifiers||(r.modifiers=hi),s[pi(r)]=r,t._setupState&&t._setupState.__sfc){var i=r.def||Sr(t,"_setupState","v-"+r.name);r.def="function"===typeof i?{bind:i,update:i}:i}r.def=r.def||Sr(t.$options,"directives",r.name,!0)}return s}function pi(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function fi(e,t,n,r,s){var i=e.def&&e.def[t];if(i)try{i(n.elm,e,n,r,s)}catch(Za){Yt(Za,n.context,"directive ".concat(e.name," ").concat(t," hook"))}}var gi=[Qs,ui];function mi(e,t){var n=t.componentOptions;if((!a(n)||!1!==n.Ctor.options.inheritAttrs)&&(!i(e.data.attrs)||!i(t.data.attrs))){var r,s,u,l=t.elm,c=e.data.attrs||{},h=t.data.attrs||{};for(r in(a(h.__ob__)||o(h._v_attr_proxy))&&(h=t.data.attrs=O({},h)),h)s=h[r],u=c[r],u!==s&&bi(l,r,s,t.data.pre);for(r in(ne||se)&&h.value!==c.value&&bi(l,"value",h.value),c)i(h[r])&&(ws(r)?l.removeAttributeNS(vs,ks(r)):ms(r)||l.removeAttribute(r))}}function bi(e,t,n,r){r||e.tagName.indexOf("-")>-1?yi(e,t,n):xs(t)?Is(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):ms(t)?e.setAttribute(t,ys(t,n)):ws(t)?Is(n)?e.removeAttributeNS(vs,ks(t)):e.setAttributeNS(vs,t,n):yi(e,t,n)}function yi(e,t,n){if(Is(n))e.removeAttribute(t);else{if(ne&&!re&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(t,n)}}var xi={create:mi,update:mi};function vi(e,t){var n=t.elm,r=t.data,s=e.data;if(!(i(r.staticClass)&&i(r.class)&&(i(s)||i(s.staticClass)&&i(s.class)))){var o=Cs(t),u=n._transitionClasses;a(u)&&(o=Ns(o,Ts(u))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}var wi,ki={create:vi,update:vi},Ii="__r",Ci="__c";function Si(e){if(a(e[Ii])){var t=ne?"change":"input";e[t]=[].concat(e[Ii],e[t]||[]),delete e[Ii]}a(e[Ci])&&(e.change=[].concat(e[Ci],e.change||[]),delete e[Ci])}function $i(e,t,n){var r=wi;return function s(){var i=t.apply(null,arguments);null!==i&&Ei(e,s,n,r)}}var Ni=tn&&!(oe&&Number(oe[1])<=53);function Ti(e,t,n,r){if(Ni){var s=Vn,i=t;t=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=s||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}wi.addEventListener(e,t,le?{capture:n,passive:r}:n)}function Ei(e,t,n,r){(r||wi).removeEventListener(e,t._wrapper||t,n)}function Ri(e,t){if(!i(e.data.on)||!i(t.data.on)){var n=t.data.on||{},r=e.data.on||{};wi=t.elm||e.elm,Si(n),nt(n,r,Ti,Ei,$i,t.context),wi=void 0}}var _i,Ai={create:Ri,update:Ri,destroy:function(e){return Ri(e,ni)}};function Fi(e,t){if(!i(e.data.domProps)||!i(t.data.domProps)){var n,r,s=t.elm,u=e.data.domProps||{},l=t.data.domProps||{};for(n in(a(l.__ob__)||o(l._v_attr_proxy))&&(l=t.data.domProps=O({},l)),u)n in l||(s[n]="");for(n in l){if(r=l[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===u[n])continue;1===s.childNodes.length&&s.removeChild(s.childNodes[0])}if("value"===n&&"PROGRESS"!==s.tagName){s._value=r;var c=i(r)?"":String(r);Di(s,c)&&(s.value=c)}else if("innerHTML"===n&&Fs(s.tagName)&&i(s.innerHTML)){_i=_i||document.createElement("div"),_i.innerHTML="<svg>".concat(r,"</svg>");var h=_i.firstChild;while(s.firstChild)s.removeChild(s.firstChild);while(h.firstChild)s.appendChild(h.firstChild)}else if(r!==u[n])try{s[n]=r}catch(Za){}}}}function Di(e,t){return!e.composing&&("OPTION"===e.tagName||Oi(e,t)||Mi(e,t))}function Oi(e,t){var n=!0;try{n=document.activeElement!==e}catch(Za){}return n&&e.value!==t}function Mi(e,t){var n=e.value,r=e._vModifiers;if(a(r)){if(r.number)return x(n)!==x(t);if(r.trim)return n.trim()!==t.trim()}return n!==t}var Li={create:Fi,update:Fi},zi=S((function(e){var t={},n=/;(?![^(]*\))/g,r=/:(.+)/;return e.split(n).forEach((function(e){if(e){var n=e.split(r);n.length>1&&(t[n[0].trim()]=n[1].trim())}})),t}));function Pi(e){var t=Bi(e.style);return e.staticStyle?O(e.staticStyle,t):t}function Bi(e){return Array.isArray(e)?M(e):"string"===typeof e?zi(e):e}function Wi(e,t){var n,r={};if(t){var s=e;while(s.componentInstance)s=s.componentInstance._vnode,s&&s.data&&(n=Pi(s.data))&&O(r,n)}(n=Pi(e.data))&&O(r,n);var i=e;while(i=i.parent)i.data&&(n=Pi(i.data))&&O(r,n);return r}var Ui,Vi=/^--/,Gi=/\s*!important$/,Hi=function(e,t,n){if(Vi.test(t))e.style.setProperty(t,n);else if(Gi.test(n))e.style.setProperty(R(t),n.replace(Gi,""),"important");else{var r=Ki(t);if(Array.isArray(n))for(var s=0,i=n.length;s<i;s++)e.style[r]=n[s];else e.style[r]=n}},ji=["Webkit","Moz","ms"],Ki=S((function(e){if(Ui=Ui||document.createElement("div").style,e=N(e),"filter"!==e&&e in Ui)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<ji.length;n++){var r=ji[n]+t;if(r in Ui)return r}}));function qi(e,t){var n=t.data,r=e.data;if(!(i(n.staticStyle)&&i(n.style)&&i(r.staticStyle)&&i(r.style))){var s,o,u=t.elm,l=r.staticStyle,c=r.normalizedStyle||r.style||{},h=l||c,d=Bi(t.data.style)||{};t.data.normalizedStyle=a(d.__ob__)?O({},d):d;var p=Wi(t,!0);for(o in h)i(p[o])&&Hi(u,o,"");for(o in p)s=p[o],Hi(u,o,null==s?"":s)}}var Xi={create:qi,update:qi},Yi=/\s+/;function Ji(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Yi).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" ".concat(e.getAttribute("class")||""," ");n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Zi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Yi).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{var n=" ".concat(e.getAttribute("class")||""," "),r=" "+t+" ";while(n.indexOf(r)>=0)n=n.replace(r," ");n=n.trim(),n?e.setAttribute("class",n):e.removeAttribute("class")}}function Qi(e){if(e){if("object"===typeof e){var t={};return!1!==e.css&&O(t,ea(e.name||"v")),O(t,e),t}return"string"===typeof e?ea(e):void 0}}var ea=S((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),ta=ee&&!re,na="transition",ra="animation",sa="transition",ia="transitionend",aa="animation",oa="animationend";ta&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(sa="WebkitTransition",ia="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(aa="WebkitAnimation",oa="webkitAnimationEnd"));var ua=ee?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function la(e){ua((function(){ua(e)}))}function ca(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Ji(e,t))}function ha(e,t){e._transitionClasses&&k(e._transitionClasses,t),Zi(e,t)}function da(e,t,n){var r=fa(e,t),s=r.type,i=r.timeout,a=r.propCount;if(!s)return n();var o=s===na?ia:oa,u=0,l=function(){e.removeEventListener(o,c),n()},c=function(t){t.target===e&&++u>=a&&l()};setTimeout((function(){u<a&&l()}),i+1),e.addEventListener(o,c)}var pa=/\b(transform|all)(,|$)/;function fa(e,t){var n,r=window.getComputedStyle(e),s=(r[sa+"Delay"]||"").split(", "),i=(r[sa+"Duration"]||"").split(", "),a=ga(s,i),o=(r[aa+"Delay"]||"").split(", "),u=(r[aa+"Duration"]||"").split(", "),l=ga(o,u),c=0,h=0;t===na?a>0&&(n=na,c=a,h=i.length):t===ra?l>0&&(n=ra,c=l,h=u.length):(c=Math.max(a,l),n=c>0?a>l?na:ra:null,h=n?n===na?i.length:u.length:0);var d=n===na&&pa.test(r[sa+"Property"]);return{type:n,timeout:c,propCount:h,hasTransform:d}}function ga(e,t){while(e.length<t.length)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return ma(t)+ma(e[n])})))}function ma(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function ba(e,t){var n=e.elm;a(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=Qi(e.data.transition);if(!i(r)&&!a(n._enterCb)&&1===n.nodeType){var s=r.css,o=r.type,u=r.enterClass,l=r.enterToClass,d=r.enterActiveClass,p=r.appearClass,f=r.appearToClass,g=r.appearActiveClass,m=r.beforeEnter,b=r.enter,y=r.afterEnter,v=r.enterCancelled,w=r.beforeAppear,k=r.appear,I=r.afterAppear,C=r.appearCancelled,S=r.duration,$=$n,N=$n.$vnode;while(N&&N.parent)$=N.context,N=N.parent;var T=!$._isMounted||!e.isRootInsert;if(!T||k||""===k){var E=T&&p?p:u,R=T&&g?g:d,_=T&&f?f:l,A=T&&w||m,F=T&&c(k)?k:b,D=T&&I||y,O=T&&C||v,M=x(h(S)?S.enter:S);0;var L=!1!==s&&!re,z=va(F),P=n._enterCb=U((function(){L&&(ha(n,_),ha(n,R)),P.cancelled?(L&&ha(n,E),O&&O(n)):D&&D(n),n._enterCb=null}));e.data.show||rt(e,"insert",(function(){var t=n.parentNode,r=t&&t._pending&&t._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),F&&F(n,P)})),A&&A(n),L&&(ca(n,E),ca(n,R),la((function(){ha(n,E),P.cancelled||(ca(n,_),z||(xa(M)?setTimeout(P,M):da(n,o,P)))}))),e.data.show&&(t&&t(),F&&F(n,P)),L||z||P()}}}function ya(e,t){var n=e.elm;a(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=Qi(e.data.transition);if(i(r)||1!==n.nodeType)return t();if(!a(n._leaveCb)){var s=r.css,o=r.type,u=r.leaveClass,l=r.leaveToClass,c=r.leaveActiveClass,d=r.beforeLeave,p=r.leave,f=r.afterLeave,g=r.leaveCancelled,m=r.delayLeave,b=r.duration,y=!1!==s&&!re,v=va(p),w=x(h(b)?b.leave:b);0;var k=n._leaveCb=U((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),y&&(ha(n,l),ha(n,c)),k.cancelled?(y&&ha(n,u),g&&g(n)):(t(),f&&f(n)),n._leaveCb=null}));m?m(I):I()}function I(){k.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),d&&d(n),y&&(ca(n,u),ca(n,c),la((function(){ha(n,u),k.cancelled||(ca(n,l),v||(xa(w)?setTimeout(k,w):da(n,o,k)))}))),p&&p(n,k),y||v||k())}}function xa(e){return"number"===typeof e&&!isNaN(e)}function va(e){if(i(e))return!1;var t=e.fns;return a(t)?va(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function wa(e,t){!0!==t.data.show&&ba(t)}var ka=ee?{create:wa,activate:wa,remove:function(e,t){!0!==e.data.show?ya(e,t):t()}}:{},Ia=[xi,ki,Ai,Li,Xi,ka],Ca=Ia.concat(gi),Sa=oi({nodeOps:Zs,modules:Ca});re&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Fa(e,"input")}));var $a={inserted:function(e,t,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?rt(n,"postpatch",(function(){$a.componentUpdated(e,t,n)})):Na(e,t,n.context),e._vOptions=[].map.call(e.options,Ra)):("textarea"===n.tag||zs(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",_a),e.addEventListener("compositionend",Aa),e.addEventListener("change",Aa),re&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Na(e,t,n.context);var r=e._vOptions,s=e._vOptions=[].map.call(e.options,Ra);if(s.some((function(e,t){return!B(e,r[t])}))){var i=e.multiple?t.value.some((function(e){return Ea(e,s)})):t.value!==t.oldValue&&Ea(t.value,s);i&&Fa(e,"change")}}}};function Na(e,t,n){Ta(e,t,n),(ne||se)&&setTimeout((function(){Ta(e,t,n)}),0)}function Ta(e,t,n){var r=t.value,s=e.multiple;if(!s||Array.isArray(r)){for(var i,a,o=0,u=e.options.length;o<u;o++)if(a=e.options[o],s)i=W(r,Ra(a))>-1,a.selected!==i&&(a.selected=i);else if(B(Ra(a),r))return void(e.selectedIndex!==o&&(e.selectedIndex=o));s||(e.selectedIndex=-1)}}function Ea(e,t){return t.every((function(t){return!B(t,e)}))}function Ra(e){return"_value"in e?e._value:e.value}function _a(e){e.target.composing=!0}function Aa(e){e.target.composing&&(e.target.composing=!1,Fa(e.target,"input"))}function Fa(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Da(e){return!e.componentInstance||e.data&&e.data.transition?e:Da(e.componentInstance._vnode)}var Oa={bind:function(e,t,n){var r=t.value;n=Da(n);var s=n.data&&n.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&s?(n.data.show=!0,ba(n,(function(){e.style.display=i}))):e.style.display=r?i:"none"},update:function(e,t,n){var r=t.value,s=t.oldValue;if(!r!==!s){n=Da(n);var i=n.data&&n.data.transition;i?(n.data.show=!0,r?ba(n,(function(){e.style.display=e.__vOriginalDisplay})):ya(n,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none"}},unbind:function(e,t,n,r,s){s||(e.style.display=e.__vOriginalDisplay)}},Ma={model:$a,show:Oa},La={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function za(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?za(Vt(t.children)):e}function Pa(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var s=n._parentListeners;for(var r in s)t[N(r)]=s[r];return t}function Ba(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}function Wa(e){while(e=e.parent)if(e.data.transition)return!0}function Ua(e,t){return t.key===e.key&&t.tag===e.tag}var Va=function(e){return e.tag||Nt(e)},Ga=function(e){return"show"===e.name},Ha={name:"transition",props:La,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Va),n.length)){0;var r=this.mode;0;var s=n[0];if(Wa(this.$vnode))return s;var i=za(s);if(!i)return s;if(this._leaving)return Ba(e,s);var a="__transition-".concat(this._uid,"-");i.key=null==i.key?i.isComment?a+"comment":a+i.tag:l(i.key)?0===String(i.key).indexOf(a)?i.key:a+i.key:i.key;var o=(i.data||(i.data={})).transition=Pa(this),u=this._vnode,c=za(u);if(i.data.directives&&i.data.directives.some(Ga)&&(i.data.show=!0),c&&c.data&&!Ua(i,c)&&!Nt(c)&&(!c.componentInstance||!c.componentInstance._vnode.isComment)){var h=c.data.transition=O({},o);if("out-in"===r)return this._leaving=!0,rt(h,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Ba(e,s);if("in-out"===r){if(Nt(i))return u;var d,p=function(){d()};rt(o,"afterEnter",p),rt(o,"enterCancelled",p),rt(h,"delayLeave",(function(e){d=e}))}}return s}}},ja=O({tag:String,moveClass:String},La);delete ja.mode;var Ka={props:ja,beforeMount:function(){var e=this,t=this._update;this._update=function(n,r){var s=Nn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,s(),t.call(e,n,r)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,s=this.$slots.default||[],i=this.children=[],a=Pa(this),o=0;o<s.length;o++){var u=s[o];if(u.tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))i.push(u),n[u.key]=u,(u.data||(u.data={})).transition=a;else;}if(r){var l=[],c=[];for(o=0;o<r.length;o++){u=r[o];u.data.transition=a,u.data.pos=u.elm.getBoundingClientRect(),n[u.key]?l.push(u):c.push(u)}this.kept=e(t,null,l),this.removed=c}return e(t,null,i)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(qa),e.forEach(Xa),e.forEach(Ya),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,r=n.style;ca(n,t),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(ia,n._moveCb=function e(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(ia,e),n._moveCb=null,ha(n,t))})}})))},methods:{hasMove:function(e,t){if(!ta)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Zi(n,e)})),Ji(n,t),n.style.display="none",this.$el.appendChild(n);var r=fa(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}};function qa(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Xa(e){e.data.newPos=e.elm.getBoundingClientRect()}function Ya(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,s=t.top-n.top;if(r||s){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate(".concat(r,"px,").concat(s,"px)"),i.transitionDuration="0s"}}var Ja={Transition:Ha,TransitionGroup:Ka};Zr.config.mustUseProp=gs,Zr.config.isReservedTag=Ds,Zr.config.isReservedAttr=ps,Zr.config.getTagNamespace=Os,Zr.config.isUnknownElement=Ls,O(Zr.options.directives,Ma),O(Zr.options.components,Ja),Zr.prototype.__patch__=ee?Sa:L,Zr.prototype.$mount=function(e,t){return e=e&&ee?Ps(e):void 0,Rn(this,e,t)},ee&&setTimeout((function(){K.devtools&&de&&de.emit("init",Zr)}),0)},9306:function(e,t,n){"use strict";var r=n(4901),s=n(6823),i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(s(e)+" is not a function")}},3506:function(e,t,n){"use strict";var r=n(3925),s=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw new i("Can't set "+s(e)+" as a prototype")}},7080:function(e,t,n){"use strict";var r=n(4402).has;e.exports=function(e){return r(e),e}},679:function(e,t,n){"use strict";var r=n(1625),s=TypeError;e.exports=function(e,t){if(r(t,e))return e;throw new s("Incorrect invocation")}},8551:function(e,t,n){"use strict";var r=n(34),s=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(s(e)+" is not an object")}},7811:function(e){"use strict";e.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},7394:function(e,t,n){"use strict";var r=n(6706),s=n(4576),i=TypeError;e.exports=r(ArrayBuffer.prototype,"byteLength","get")||function(e){if("ArrayBuffer"!==s(e))throw new i("ArrayBuffer expected");return e.byteLength}},3238:function(e,t,n){"use strict";var r=n(9504),s=n(7394),i=r(ArrayBuffer.prototype.slice);e.exports=function(e){if(0!==s(e))return!1;try{return i(e,0,0),!1}catch(t){return!0}}},5636:function(e,t,n){"use strict";var r=n(4475),s=n(9504),i=n(6706),a=n(7696),o=n(3238),u=n(7394),l=n(4483),c=n(1548),h=r.structuredClone,d=r.ArrayBuffer,p=r.DataView,f=r.TypeError,g=Math.min,m=d.prototype,b=p.prototype,y=s(m.slice),x=i(m,"resizable","get"),v=i(m,"maxByteLength","get"),w=s(b.getInt8),k=s(b.setInt8);e.exports=(c||l)&&function(e,t,n){var r,s=u(e),i=void 0===t?s:a(t),m=!x||!x(e);if(o(e))throw new f("ArrayBuffer is detached");if(c&&(e=h(e,{transfer:[e]}),s===i&&(n||m)))return e;if(s>=i&&(!n||m))r=y(e,0,i);else{var b=n&&!m&&v?{maxByteLength:v(e)}:void 0;r=new d(i,b);for(var I=new p(e),C=new p(r),S=g(i,s),$=0;$<S;$++)k(C,$,w(I,$))}return c||l(e),r}},4644:function(e,t,n){"use strict";var r,s,i,a=n(7811),o=n(3724),u=n(4475),l=n(4901),c=n(34),h=n(9297),d=n(6955),p=n(6823),f=n(6699),g=n(6840),m=n(2106),b=n(1625),y=n(2787),x=n(2967),v=n(8227),w=n(3392),k=n(1181),I=k.enforce,C=k.get,S=u.Int8Array,$=S&&S.prototype,N=u.Uint8ClampedArray,T=N&&N.prototype,E=S&&y(S),R=$&&y($),_=Object.prototype,A=u.TypeError,F=v("toStringTag"),D=w("TYPED_ARRAY_TAG"),O="TypedArrayConstructor",M=a&&!!x&&"Opera"!==d(u.opera),L=!1,z={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},P={BigInt64Array:8,BigUint64Array:8},B=function(e){if(!c(e))return!1;var t=d(e);return"DataView"===t||h(z,t)||h(P,t)},W=function(e){var t=y(e);if(c(t)){var n=C(t);return n&&h(n,O)?n[O]:W(t)}},U=function(e){if(!c(e))return!1;var t=d(e);return h(z,t)||h(P,t)},V=function(e){if(U(e))return e;throw new A("Target is not a typed array")},G=function(e){if(l(e)&&(!x||b(E,e)))return e;throw new A(p(e)+" is not a typed array constructor")},H=function(e,t,n,r){if(o){if(n)for(var s in z){var i=u[s];if(i&&h(i.prototype,e))try{delete i.prototype[e]}catch(a){try{i.prototype[e]=t}catch(l){}}}R[e]&&!n||g(R,e,n?t:M&&$[e]||t,r)}},j=function(e,t,n){var r,s;if(o){if(x){if(n)for(r in z)if(s=u[r],s&&h(s,e))try{delete s[e]}catch(i){}if(E[e]&&!n)return;try{return g(E,e,n?t:M&&E[e]||t)}catch(i){}}for(r in z)s=u[r],!s||s[e]&&!n||g(s,e,t)}};for(r in z)s=u[r],i=s&&s.prototype,i?I(i)[O]=s:M=!1;for(r in P)s=u[r],i=s&&s.prototype,i&&(I(i)[O]=s);if((!M||!l(E)||E===Function.prototype)&&(E=function(){throw new A("Incorrect invocation")},M))for(r in z)u[r]&&x(u[r],E);if((!M||!R||R===_)&&(R=E.prototype,M))for(r in z)u[r]&&x(u[r].prototype,R);if(M&&y(T)!==R&&x(T,R),o&&!h(R,F))for(r in L=!0,m(R,F,{configurable:!0,get:function(){return c(this)?this[D]:void 0}}),z)u[r]&&f(u[r],D,r);e.exports={NATIVE_ARRAY_BUFFER_VIEWS:M,TYPED_ARRAY_TAG:L&&D,aTypedArray:V,aTypedArrayConstructor:G,exportTypedArrayMethod:H,exportTypedArrayStaticMethod:j,getTypedArrayConstructor:W,isView:B,isTypedArray:U,TypedArray:E,TypedArrayPrototype:R}},5370:function(e,t,n){"use strict";var r=n(6198);e.exports=function(e,t,n){var s=0,i=arguments.length>2?n:r(t),a=new e(i);while(i>s)a[s]=t[s++];return a}},9617:function(e,t,n){"use strict";var r=n(5397),s=n(5610),i=n(6198),a=function(e){return function(t,n,a){var o=r(t),u=i(o);if(0===u)return!e&&-1;var l,c=s(a,u);if(e&&n!==n){while(u>c)if(l=o[c++],l!==l)return!0}else for(;u>c;c++)if((e||c in o)&&o[c]===n)return e||c||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},4527:function(e,t,n){"use strict";var r=n(3724),s=n(4376),i=TypeError,a=Object.getOwnPropertyDescriptor,o=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=o?function(e,t){if(s(e)&&!a(e,"length").writable)throw new i("Cannot set read only .length");return e.length=t}:function(e,t){return e.length=t}},7680:function(e,t,n){"use strict";var r=n(9504);e.exports=r([].slice)},7628:function(e,t,n){"use strict";var r=n(6198);e.exports=function(e,t){for(var n=r(e),s=new t(n),i=0;i<n;i++)s[i]=e[n-i-1];return s}},9928:function(e,t,n){"use strict";var r=n(6198),s=n(1291),i=RangeError;e.exports=function(e,t,n,a){var o=r(e),u=s(n),l=u<0?o+u:u;if(l>=o||l<0)throw new i("Incorrect index");for(var c=new t(o),h=0;h<o;h++)c[h]=h===l?a:e[h];return c}},4576:function(e,t,n){"use strict";var r=n(9504),s=r({}.toString),i=r("".slice);e.exports=function(e){return i(s(e),8,-1)}},6955:function(e,t,n){"use strict";var r=n(2140),s=n(4901),i=n(4576),a=n(8227),o=a("toStringTag"),u=Object,l="Arguments"===i(function(){return arguments}()),c=function(e,t){try{return e[t]}catch(n){}};e.exports=r?i:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=c(t=u(e),o))?n:l?i(t):"Object"===(r=i(t))&&s(t.callee)?"Arguments":r}},7740:function(e,t,n){"use strict";var r=n(9297),s=n(5031),i=n(7347),a=n(4913);e.exports=function(e,t,n){for(var o=s(t),u=a.f,l=i.f,c=0;c<o.length;c++){var h=o[c];r(e,h)||n&&r(n,h)||u(e,h,l(t,h))}}},2211:function(e,t,n){"use strict";var r=n(9039);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},6699:function(e,t,n){"use strict";var r=n(3724),s=n(4913),i=n(6980);e.exports=r?function(e,t,n){return s.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},6980:function(e){"use strict";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},2106:function(e,t,n){"use strict";var r=n(283),s=n(4913);e.exports=function(e,t,n){return n.get&&r(n.get,t,{getter:!0}),n.set&&r(n.set,t,{setter:!0}),s.f(e,t,n)}},6840:function(e,t,n){"use strict";var r=n(4901),s=n(4913),i=n(283),a=n(9433);e.exports=function(e,t,n,o){o||(o={});var u=o.enumerable,l=void 0!==o.name?o.name:t;if(r(n)&&i(n,l,o),o.global)u?e[t]=n:a(t,n);else{try{o.unsafe?e[t]&&(u=!0):delete e[t]}catch(c){}u?e[t]=n:s.f(e,t,{value:n,enumerable:!1,configurable:!o.nonConfigurable,writable:!o.nonWritable})}return e}},9433:function(e,t,n){"use strict";var r=n(4475),s=Object.defineProperty;e.exports=function(e,t){try{s(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},3724:function(e,t,n){"use strict";var r=n(9039);e.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4483:function(e,t,n){"use strict";var r,s,i,a,o=n(4475),u=n(9714),l=n(1548),c=o.structuredClone,h=o.ArrayBuffer,d=o.MessageChannel,p=!1;if(l)p=function(e){c(e,{transfer:[e]})};else if(h)try{d||(r=u("worker_threads"),r&&(d=r.MessageChannel)),d&&(s=new d,i=new h(2),a=function(e){s.port1.postMessage(null,[e])},2===i.byteLength&&(a(i),0===i.byteLength&&(p=a)))}catch(f){}e.exports=p},4055:function(e,t,n){"use strict";var r=n(4475),s=n(34),i=r.document,a=s(i)&&s(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},6837:function(e){"use strict";var t=TypeError,n=9007199254740991;e.exports=function(e){if(e>n)throw t("Maximum allowed index exceeded");return e}},5002:function(e){"use strict";e.exports={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}}},7290:function(e,t,n){"use strict";var r=n(516),s=n(9088);e.exports=!r&&!s&&"object"==typeof window&&"object"==typeof document},6763:function(e){"use strict";e.exports="function"==typeof Bun&&Bun&&"string"==typeof Bun.version},516:function(e){"use strict";e.exports="object"==typeof Deno&&Deno&&"object"==typeof Deno.version},8119:function(e,t,n){"use strict";var r=n(9392);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},9088:function(e,t,n){"use strict";var r=n(4475),s=n(4576);e.exports="process"===s(r.process)},9392:function(e){"use strict";e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},7388:function(e,t,n){"use strict";var r,s,i=n(4475),a=n(9392),o=i.process,u=i.Deno,l=o&&o.versions||u&&u.version,c=l&&l.v8;c&&(r=c.split("."),s=r[0]>0&&r[0]<4?1:+(r[0]+r[1])),!s&&a&&(r=a.match(/Edge\/(\d+)/),(!r||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/),r&&(s=+r[1]))),e.exports=s},8727:function(e){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},6193:function(e,t,n){"use strict";var r=n(9504),s=Error,i=r("".replace),a=function(e){return String(new s(e).stack)}("zxcasd"),o=/\n\s*at [^:]*:[^\n]*/,u=o.test(a);e.exports=function(e,t){if(u&&"string"==typeof e&&!s.prepareStackTrace)while(t--)e=i(e,o,"");return e}},6518:function(e,t,n){"use strict";var r=n(4475),s=n(7347).f,i=n(6699),a=n(6840),o=n(9433),u=n(7740),l=n(2796);e.exports=function(e,t){var n,c,h,d,p,f,g=e.target,m=e.global,b=e.stat;if(c=m?r:b?r[g]||o(g,{}):r[g]&&r[g].prototype,c)for(h in t){if(p=t[h],e.dontCallGetSet?(f=s(c,h),d=f&&f.value):d=c[h],n=l(m?h:g+(b?".":"#")+h,e.forced),!n&&void 0!==d){if(typeof p==typeof d)continue;u(p,d)}(e.sham||d&&d.sham)&&i(p,"sham",!0),a(c,h,p,e)}}},9039:function(e){"use strict";e.exports=function(e){try{return!!e()}catch(t){return!0}}},8745:function(e,t,n){"use strict";var r=n(616),s=Function.prototype,i=s.apply,a=s.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(i):function(){return a.apply(i,arguments)})},6080:function(e,t,n){"use strict";var r=n(7476),s=n(9306),i=n(616),a=r(r.bind);e.exports=function(e,t){return s(e),void 0===t?e:i?a(e,t):function(){return e.apply(t,arguments)}}},616:function(e,t,n){"use strict";var r=n(9039);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},9565:function(e,t,n){"use strict";var r=n(616),s=Function.prototype.call;e.exports=r?s.bind(s):function(){return s.apply(s,arguments)}},350:function(e,t,n){"use strict";var r=n(3724),s=n(9297),i=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,o=s(i,"name"),u=o&&"something"===function(){}.name,l=o&&(!r||r&&a(i,"name").configurable);e.exports={EXISTS:o,PROPER:u,CONFIGURABLE:l}},6706:function(e,t,n){"use strict";var r=n(9504),s=n(9306);e.exports=function(e,t,n){try{return r(s(Object.getOwnPropertyDescriptor(e,t)[n]))}catch(i){}}},7476:function(e,t,n){"use strict";var r=n(4576),s=n(9504);e.exports=function(e){if("Function"===r(e))return s(e)}},9504:function(e,t,n){"use strict";var r=n(616),s=Function.prototype,i=s.call,a=r&&s.bind.bind(i,i);e.exports=r?a:function(e){return function(){return i.apply(e,arguments)}}},7751:function(e,t,n){"use strict";var r=n(4475),s=n(4901),i=function(e){return s(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?i(r[e]):r[e]&&r[e][t]}},1767:function(e){"use strict";e.exports=function(e){return{iterator:e,next:e.next,done:!1}}},5966:function(e,t,n){"use strict";var r=n(9306),s=n(4117);e.exports=function(e,t){var n=e[t];return s(n)?void 0:r(n)}},3789:function(e,t,n){"use strict";var r=n(9306),s=n(8551),i=n(9565),a=n(1291),o=n(1767),u="Invalid size",l=RangeError,c=TypeError,h=Math.max,d=function(e,t){this.set=e,this.size=h(t,0),this.has=r(e.has),this.keys=r(e.keys)};d.prototype={getIterator:function(){return o(s(i(this.keys,this.set)))},includes:function(e){return i(this.has,this.set,e)}},e.exports=function(e){s(e);var t=+e.size;if(t!==t)throw new c(u);var n=a(t);if(n<0)throw new l(u);return new d(e,n)}},4475:function(e,t,n){"use strict";var r=function(e){return e&&e.Math===Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},9297:function(e,t,n){"use strict";var r=n(9504),s=n(8981),i=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return i(s(e),t)}},421:function(e){"use strict";e.exports={}},397:function(e,t,n){"use strict";var r=n(7751);e.exports=r("document","documentElement")},5917:function(e,t,n){"use strict";var r=n(3724),s=n(9039),i=n(4055);e.exports=!r&&!s((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},7055:function(e,t,n){"use strict";var r=n(9504),s=n(9039),i=n(4576),a=Object,o=r("".split);e.exports=s((function(){return!a("z").propertyIsEnumerable(0)}))?function(e){return"String"===i(e)?o(e,""):a(e)}:a},3167:function(e,t,n){"use strict";var r=n(4901),s=n(34),i=n(2967);e.exports=function(e,t,n){var a,o;return i&&r(a=t.constructor)&&a!==n&&s(o=a.prototype)&&o!==n.prototype&&i(e,o),e}},3706:function(e,t,n){"use strict";var r=n(9504),s=n(4901),i=n(7629),a=r(Function.toString);s(i.inspectSource)||(i.inspectSource=function(e){return a(e)}),e.exports=i.inspectSource},1181:function(e,t,n){"use strict";var r,s,i,a=n(8622),o=n(4475),u=n(34),l=n(6699),c=n(9297),h=n(7629),d=n(6119),p=n(421),f="Object already initialized",g=o.TypeError,m=o.WeakMap,b=function(e){return i(e)?s(e):r(e,{})},y=function(e){return function(t){var n;if(!u(t)||(n=s(t)).type!==e)throw new g("Incompatible receiver, "+e+" required");return n}};if(a||h.state){var x=h.state||(h.state=new m);x.get=x.get,x.has=x.has,x.set=x.set,r=function(e,t){if(x.has(e))throw new g(f);return t.facade=e,x.set(e,t),t},s=function(e){return x.get(e)||{}},i=function(e){return x.has(e)}}else{var v=d("state");p[v]=!0,r=function(e,t){if(c(e,v))throw new g(f);return t.facade=e,l(e,v,t),t},s=function(e){return c(e,v)?e[v]:{}},i=function(e){return c(e,v)}}e.exports={set:r,get:s,has:i,enforce:b,getterFor:y}},4376:function(e,t,n){"use strict";var r=n(4576);e.exports=Array.isArray||function(e){return"Array"===r(e)}},1108:function(e,t,n){"use strict";var r=n(6955);e.exports=function(e){var t=r(e);return"BigInt64Array"===t||"BigUint64Array"===t}},4901:function(e){"use strict";var t="object"==typeof document&&document.all;e.exports="undefined"==typeof t&&void 0!==t?function(e){return"function"==typeof e||e===t}:function(e){return"function"==typeof e}},2796:function(e,t,n){"use strict";var r=n(9039),s=n(4901),i=/#|\.prototype\./,a=function(e,t){var n=u[o(e)];return n===c||n!==l&&(s(t)?r(t):!!t)},o=a.normalize=function(e){return String(e).replace(i,".").toLowerCase()},u=a.data={},l=a.NATIVE="N",c=a.POLYFILL="P";e.exports=a},4117:function(e){"use strict";e.exports=function(e){return null===e||void 0===e}},34:function(e,t,n){"use strict";var r=n(4901);e.exports=function(e){return"object"==typeof e?null!==e:r(e)}},3925:function(e,t,n){"use strict";var r=n(34);e.exports=function(e){return r(e)||null===e}},6395:function(e){"use strict";e.exports=!1},757:function(e,t,n){"use strict";var r=n(7751),s=n(4901),i=n(1625),a=n(7040),o=Object;e.exports=a?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return s(t)&&i(t.prototype,o(e))}},507:function(e,t,n){"use strict";var r=n(9565);e.exports=function(e,t,n){var s,i,a=n?e:e.iterator,o=e.next;while(!(s=r(o,a)).done)if(i=t(s.value),void 0!==i)return i}},9539:function(e,t,n){"use strict";var r=n(9565),s=n(8551),i=n(5966);e.exports=function(e,t,n){var a,o;s(e);try{if(a=i(e,"return"),!a){if("throw"===t)throw n;return n}a=r(a,e)}catch(u){o=!0,a=u}if("throw"===t)throw n;if(o)throw a;return s(a),n}},6198:function(e,t,n){"use strict";var r=n(8014);e.exports=function(e){return r(e.length)}},283:function(e,t,n){"use strict";var r=n(9504),s=n(9039),i=n(4901),a=n(9297),o=n(3724),u=n(350).CONFIGURABLE,l=n(3706),c=n(1181),h=c.enforce,d=c.get,p=String,f=Object.defineProperty,g=r("".slice),m=r("".replace),b=r([].join),y=o&&!s((function(){return 8!==f((function(){}),"length",{value:8}).length})),x=String(String).split("String"),v=e.exports=function(e,t,n){"Symbol("===g(p(t),0,7)&&(t="["+m(p(t),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!a(e,"name")||u&&e.name!==t)&&(o?f(e,"name",{value:t,configurable:!0}):e.name=t),y&&n&&a(n,"arity")&&e.length!==n.arity&&f(e,"length",{value:n.arity});try{n&&a(n,"constructor")&&n.constructor?o&&f(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(s){}var r=h(e);return a(r,"source")||(r.source=b(x,"string"==typeof t?t:"")),e};Function.prototype.toString=v((function(){return i(this)&&d(this).source||l(this)}),"toString")},741:function(e){"use strict";var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?n:t)(r)}},2603:function(e,t,n){"use strict";var r=n(655);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:r(e)}},4913:function(e,t,n){"use strict";var r=n(3724),s=n(5917),i=n(8686),a=n(8551),o=n(6969),u=TypeError,l=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h="enumerable",d="configurable",p="writable";t.f=r?i?function(e,t,n){if(a(e),t=o(t),a(n),"function"===typeof e&&"prototype"===t&&"value"in n&&p in n&&!n[p]){var r=c(e,t);r&&r[p]&&(e[t]=n.value,n={configurable:d in n?n[d]:r[d],enumerable:h in n?n[h]:r[h],writable:!1})}return l(e,t,n)}:l:function(e,t,n){if(a(e),t=o(t),a(n),s)try{return l(e,t,n)}catch(r){}if("get"in n||"set"in n)throw new u("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},7347:function(e,t,n){"use strict";var r=n(3724),s=n(9565),i=n(8773),a=n(6980),o=n(5397),u=n(6969),l=n(9297),c=n(5917),h=Object.getOwnPropertyDescriptor;t.f=r?h:function(e,t){if(e=o(e),t=u(t),c)try{return h(e,t)}catch(n){}if(l(e,t))return a(!s(i.f,e,t),e[t])}},8480:function(e,t,n){"use strict";var r=n(1828),s=n(8727),i=s.concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,i)}},3717:function(e,t){"use strict";t.f=Object.getOwnPropertySymbols},2787:function(e,t,n){"use strict";var r=n(9297),s=n(4901),i=n(8981),a=n(6119),o=n(2211),u=a("IE_PROTO"),l=Object,c=l.prototype;e.exports=o?l.getPrototypeOf:function(e){var t=i(e);if(r(t,u))return t[u];var n=t.constructor;return s(n)&&t instanceof n?n.prototype:t instanceof l?c:null}},1625:function(e,t,n){"use strict";var r=n(9504);e.exports=r({}.isPrototypeOf)},1828:function(e,t,n){"use strict";var r=n(9504),s=n(9297),i=n(5397),a=n(9617).indexOf,o=n(421),u=r([].push);e.exports=function(e,t){var n,r=i(e),l=0,c=[];for(n in r)!s(o,n)&&s(r,n)&&u(c,n);while(t.length>l)s(r,n=t[l++])&&(~a(c,n)||u(c,n));return c}},8773:function(e,t){"use strict";var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,s=r&&!n.call({1:2},1);t.f=s?function(e){var t=r(this,e);return!!t&&t.enumerable}:n},2967:function(e,t,n){"use strict";var r=n(6706),s=n(34),i=n(7750),a=n(3506);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{e=r(Object.prototype,"__proto__","set"),e(n,[]),t=n instanceof Array}catch(o){}return function(n,r){return i(n),a(r),s(n)?(t?e(n,r):n.__proto__=r,n):n}}():void 0)},4270:function(e,t,n){"use strict";var r=n(9565),s=n(4901),i=n(34),a=TypeError;e.exports=function(e,t){var n,o;if("string"===t&&s(n=e.toString)&&!i(o=r(n,e)))return o;if(s(n=e.valueOf)&&!i(o=r(n,e)))return o;if("string"!==t&&s(n=e.toString)&&!i(o=r(n,e)))return o;throw new a("Can't convert object to primitive value")}},5031:function(e,t,n){"use strict";var r=n(7751),s=n(9504),i=n(8480),a=n(3717),o=n(8551),u=s([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=i.f(o(e)),n=a.f;return n?u(t,n(e)):t}},7979:function(e,t,n){"use strict";var r=n(8551);e.exports=function(){var e=r(this),t="";return e.hasIndices&&(t+="d"),e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.unicodeSets&&(t+="v"),e.sticky&&(t+="y"),t}},7750:function(e,t,n){"use strict";var r=n(4117),s=TypeError;e.exports=function(e){if(r(e))throw new s("Can't call method on "+e);return e}},9472:function(e,t,n){"use strict";var r=n(4475),s=n(8745),i=n(4901),a=n(6763),o=n(9392),u=n(7680),l=n(2812),c=r.Function,h=/MSIE .\./.test(o)||a&&function(){var e=r.Bun.version.split(".");return e.length<3||"0"===e[0]&&(e[1]<3||"3"===e[1]&&"0"===e[2])}();e.exports=function(e,t){var n=t?2:1;return h?function(r,a){var o=l(arguments.length,1)>n,h=i(r)?r:c(r),d=o?u(arguments,n):[],p=o?function(){s(h,this,d)}:h;return t?e(p,a):e(p)}:e}},9286:function(e,t,n){"use strict";var r=n(4402),s=n(8469),i=r.Set,a=r.add;e.exports=function(e){var t=new i;return s(e,(function(e){a(t,e)})),t}},3440:function(e,t,n){"use strict";var r=n(7080),s=n(4402),i=n(9286),a=n(5170),o=n(3789),u=n(8469),l=n(507),c=s.has,h=s.remove;e.exports=function(e){var t=r(this),n=o(e),s=i(t);return a(t)<=n.size?u(t,(function(e){n.includes(e)&&h(s,e)})):l(n.getIterator(),(function(e){c(t,e)&&h(s,e)})),s}},4402:function(e,t,n){"use strict";var r=n(9504),s=Set.prototype;e.exports={Set:Set,add:r(s.add),has:r(s.has),remove:r(s["delete"]),proto:s}},8750:function(e,t,n){"use strict";var r=n(7080),s=n(4402),i=n(5170),a=n(3789),o=n(8469),u=n(507),l=s.Set,c=s.add,h=s.has;e.exports=function(e){var t=r(this),n=a(e),s=new l;return i(t)>n.size?u(n.getIterator(),(function(e){h(t,e)&&c(s,e)})):o(t,(function(e){n.includes(e)&&c(s,e)})),s}},4449:function(e,t,n){"use strict";var r=n(7080),s=n(4402).has,i=n(5170),a=n(3789),o=n(8469),u=n(507),l=n(9539);e.exports=function(e){var t=r(this),n=a(e);if(i(t)<=n.size)return!1!==o(t,(function(e){if(n.includes(e))return!1}),!0);var c=n.getIterator();return!1!==u(c,(function(e){if(s(t,e))return l(c,"normal",!1)}))}},3838:function(e,t,n){"use strict";var r=n(7080),s=n(5170),i=n(8469),a=n(3789);e.exports=function(e){var t=r(this),n=a(e);return!(s(t)>n.size)&&!1!==i(t,(function(e){if(!n.includes(e))return!1}),!0)}},8527:function(e,t,n){"use strict";var r=n(7080),s=n(4402).has,i=n(5170),a=n(3789),o=n(507),u=n(9539);e.exports=function(e){var t=r(this),n=a(e);if(i(t)<n.size)return!1;var l=n.getIterator();return!1!==o(l,(function(e){if(!s(t,e))return u(l,"normal",!1)}))}},8469:function(e,t,n){"use strict";var r=n(9504),s=n(507),i=n(4402),a=i.Set,o=i.proto,u=r(o.forEach),l=r(o.keys),c=l(new a).next;e.exports=function(e,t,n){return n?s({iterator:l(e),next:c},t):u(e,t)}},4916:function(e,t,n){"use strict";var r=n(7751),s=function(e){return{size:e,has:function(){return!1},keys:function(){return{next:function(){return{done:!0}}}}}};e.exports=function(e){var t=r("Set");try{(new t)[e](s(0));try{return(new t)[e](s(-1)),!1}catch(n){return!0}}catch(i){return!1}}},5170:function(e,t,n){"use strict";var r=n(6706),s=n(4402);e.exports=r(s.proto,"size","get")||function(e){return e.size}},3650:function(e,t,n){"use strict";var r=n(7080),s=n(4402),i=n(9286),a=n(3789),o=n(507),u=s.add,l=s.has,c=s.remove;e.exports=function(e){var t=r(this),n=a(e).getIterator(),s=i(t);return o(n,(function(e){l(t,e)?c(s,e):u(s,e)})),s}},4204:function(e,t,n){"use strict";var r=n(7080),s=n(4402).add,i=n(9286),a=n(3789),o=n(507);e.exports=function(e){var t=r(this),n=a(e).getIterator(),u=i(t);return o(n,(function(e){s(u,e)})),u}},6119:function(e,t,n){"use strict";var r=n(5745),s=n(3392),i=r("keys");e.exports=function(e){return i[e]||(i[e]=s(e))}},7629:function(e,t,n){"use strict";var r=n(6395),s=n(4475),i=n(9433),a="__core-js_shared__",o=e.exports=s[a]||i(a,{});(o.versions||(o.versions=[])).push({version:"3.37.1",mode:r?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.37.1/LICENSE",source:"https://github.com/zloirock/core-js"})},5745:function(e,t,n){"use strict";var r=n(7629);e.exports=function(e,t){return r[e]||(r[e]=t||{})}},1548:function(e,t,n){"use strict";var r=n(4475),s=n(9039),i=n(7388),a=n(7290),o=n(516),u=n(9088),l=r.structuredClone;e.exports=!!l&&!s((function(){if(o&&i>92||u&&i>94||a&&i>97)return!1;var e=new ArrayBuffer(8),t=l(e,{transfer:[e]});return 0!==e.byteLength||8!==t.byteLength}))},4495:function(e,t,n){"use strict";var r=n(7388),s=n(9039),i=n(4475),a=i.String;e.exports=!!Object.getOwnPropertySymbols&&!s((function(){var e=Symbol("symbol detection");return!a(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},1606:function(e,t,n){"use strict";var r,s,i,a,o=n(4475),u=n(8745),l=n(6080),c=n(4901),h=n(9297),d=n(9039),p=n(397),f=n(7680),g=n(4055),m=n(2812),b=n(8119),y=n(9088),x=o.setImmediate,v=o.clearImmediate,w=o.process,k=o.Dispatch,I=o.Function,C=o.MessageChannel,S=o.String,$=0,N={},T="onreadystatechange";d((function(){r=o.location}));var E=function(e){if(h(N,e)){var t=N[e];delete N[e],t()}},R=function(e){return function(){E(e)}},_=function(e){E(e.data)},A=function(e){o.postMessage(S(e),r.protocol+"//"+r.host)};x&&v||(x=function(e){m(arguments.length,1);var t=c(e)?e:I(e),n=f(arguments,1);return N[++$]=function(){u(t,void 0,n)},s($),$},v=function(e){delete N[e]},y?s=function(e){w.nextTick(R(e))}:k&&k.now?s=function(e){k.now(R(e))}:C&&!b?(i=new C,a=i.port2,i.port1.onmessage=_,s=l(a.postMessage,a)):o.addEventListener&&c(o.postMessage)&&!o.importScripts&&r&&"file:"!==r.protocol&&!d(A)?(s=A,o.addEventListener("message",_,!1)):s=T in g("script")?function(e){p.appendChild(g("script"))[T]=function(){p.removeChild(this),E(e)}}:function(e){setTimeout(R(e),0)}),e.exports={set:x,clear:v}},5610:function(e,t,n){"use strict";var r=n(1291),s=Math.max,i=Math.min;e.exports=function(e,t){var n=r(e);return n<0?s(n+t,0):i(n,t)}},5854:function(e,t,n){"use strict";var r=n(2777),s=TypeError;e.exports=function(e){var t=r(e,"number");if("number"==typeof t)throw new s("Can't convert number to bigint");return BigInt(t)}},7696:function(e,t,n){"use strict";var r=n(1291),s=n(8014),i=RangeError;e.exports=function(e){if(void 0===e)return 0;var t=r(e),n=s(t);if(t!==n)throw new i("Wrong length or index");return n}},5397:function(e,t,n){"use strict";var r=n(7055),s=n(7750);e.exports=function(e){return r(s(e))}},1291:function(e,t,n){"use strict";var r=n(741);e.exports=function(e){var t=+e;return t!==t||0===t?0:r(t)}},8014:function(e,t,n){"use strict";var r=n(1291),s=Math.min;e.exports=function(e){var t=r(e);return t>0?s(t,9007199254740991):0}},8981:function(e,t,n){"use strict";var r=n(7750),s=Object;e.exports=function(e){return s(r(e))}},2777:function(e,t,n){"use strict";var r=n(9565),s=n(34),i=n(757),a=n(5966),o=n(4270),u=n(8227),l=TypeError,c=u("toPrimitive");e.exports=function(e,t){if(!s(e)||i(e))return e;var n,u=a(e,c);if(u){if(void 0===t&&(t="default"),n=r(u,e,t),!s(n)||i(n))return n;throw new l("Can't convert object to primitive value")}return void 0===t&&(t="number"),o(e,t)}},6969:function(e,t,n){"use strict";var r=n(2777),s=n(757);e.exports=function(e){var t=r(e,"string");return s(t)?t:t+""}},2140:function(e,t,n){"use strict";var r=n(8227),s=r("toStringTag"),i={};i[s]="z",e.exports="[object z]"===String(i)},655:function(e,t,n){"use strict";var r=n(6955),s=String;e.exports=function(e){if("Symbol"===r(e))throw new TypeError("Cannot convert a Symbol value to a string");return s(e)}},9714:function(e,t,n){"use strict";var r=n(9088);e.exports=function(e){try{if(r)return Function('return require("'+e+'")')()}catch(t){}}},6823:function(e){"use strict";var t=String;e.exports=function(e){try{return t(e)}catch(n){return"Object"}}},3392:function(e,t,n){"use strict";var r=n(9504),s=0,i=Math.random(),a=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+a(++s+i,36)}},7040:function(e,t,n){"use strict";var r=n(4495);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},8686:function(e,t,n){"use strict";var r=n(3724),s=n(9039);e.exports=r&&s((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},2812:function(e){"use strict";var t=TypeError;e.exports=function(e,n){if(e<n)throw new t("Not enough arguments");return e}},8622:function(e,t,n){"use strict";var r=n(4475),s=n(4901),i=r.WeakMap;e.exports=s(i)&&/native code/.test(String(i))},8227:function(e,t,n){"use strict";var r=n(4475),s=n(5745),i=n(9297),a=n(3392),o=n(4495),u=n(7040),l=r.Symbol,c=s("wks"),h=u?l["for"]||l:l&&l.withoutSetter||a;e.exports=function(e){return i(c,e)||(c[e]=o&&i(l,e)?l[e]:h("Symbol."+e)),c[e]}},6573:function(e,t,n){"use strict";var r=n(3724),s=n(2106),i=n(3238),a=ArrayBuffer.prototype;r&&!("detached"in a)&&s(a,"detached",{configurable:!0,get:function(){return i(this)}})},7936:function(e,t,n){"use strict";var r=n(6518),s=n(5636);s&&r({target:"ArrayBuffer",proto:!0},{transferToFixedLength:function(){return s(this,arguments.length?arguments[0]:void 0,!1)}})},8100:function(e,t,n){"use strict";var r=n(6518),s=n(5636);s&&r({target:"ArrayBuffer",proto:!0},{transfer:function(){return s(this,arguments.length?arguments[0]:void 0,!0)}})},4114:function(e,t,n){"use strict";var r=n(6518),s=n(8981),i=n(6198),a=n(4527),o=n(6837),u=n(9039),l=u((function(){return 4294967297!==[].push.call({length:4294967296},1)})),c=function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}},h=l||!c();r({target:"Array",proto:!0,arity:1,forced:h},{push:function(e){var t=s(this),n=i(t),r=arguments.length;o(n+r);for(var u=0;u<r;u++)t[n]=arguments[u],n++;return a(t,n),n}})},9479:function(e,t,n){"use strict";var r=n(4475),s=n(3724),i=n(2106),a=n(7979),o=n(9039),u=r.RegExp,l=u.prototype,c=s&&o((function(){var e=!0;try{u(".","d")}catch(c){e=!1}var t={},n="",r=e?"dgimsy":"gimsy",s=function(e,r){Object.defineProperty(t,e,{get:function(){return n+=r,!0}})},i={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};for(var a in e&&(i.hasIndices="d"),i)s(a,i[a]);var o=Object.getOwnPropertyDescriptor(l,"flags").get.call(t);return o!==r||n!==r}));c&&i(l,"flags",{configurable:!0,get:a})},7642:function(e,t,n){"use strict";var r=n(6518),s=n(3440),i=n(4916);r({target:"Set",proto:!0,real:!0,forced:!i("difference")},{difference:s})},8004:function(e,t,n){"use strict";var r=n(6518),s=n(9039),i=n(8750),a=n(4916),o=!a("intersection")||s((function(){return"3,2"!==String(Array.from(new Set([1,2,3]).intersection(new Set([3,2]))))}));r({target:"Set",proto:!0,real:!0,forced:o},{intersection:i})},3853:function(e,t,n){"use strict";var r=n(6518),s=n(4449),i=n(4916);r({target:"Set",proto:!0,real:!0,forced:!i("isDisjointFrom")},{isDisjointFrom:s})},5876:function(e,t,n){"use strict";var r=n(6518),s=n(3838),i=n(4916);r({target:"Set",proto:!0,real:!0,forced:!i("isSubsetOf")},{isSubsetOf:s})},2475:function(e,t,n){"use strict";var r=n(6518),s=n(8527),i=n(4916);r({target:"Set",proto:!0,real:!0,forced:!i("isSupersetOf")},{isSupersetOf:s})},5024:function(e,t,n){"use strict";var r=n(6518),s=n(3650),i=n(4916);r({target:"Set",proto:!0,real:!0,forced:!i("symmetricDifference")},{symmetricDifference:s})},1698:function(e,t,n){"use strict";var r=n(6518),s=n(4204),i=n(4916);r({target:"Set",proto:!0,real:!0,forced:!i("union")},{union:s})},7467:function(e,t,n){"use strict";var r=n(7628),s=n(4644),i=s.aTypedArray,a=s.exportTypedArrayMethod,o=s.getTypedArrayConstructor;a("toReversed",(function(){return r(i(this),o(this))}))},4732:function(e,t,n){"use strict";var r=n(4644),s=n(9504),i=n(9306),a=n(5370),o=r.aTypedArray,u=r.getTypedArrayConstructor,l=r.exportTypedArrayMethod,c=s(r.TypedArrayPrototype.sort);l("toSorted",(function(e){void 0!==e&&i(e);var t=o(this),n=a(u(t),t);return c(n,e)}))},9577:function(e,t,n){"use strict";var r=n(9928),s=n(4644),i=n(1108),a=n(1291),o=n(5854),u=s.aTypedArray,l=s.getTypedArrayConstructor,c=s.exportTypedArrayMethod,h=!!function(){try{new Int8Array(1)["with"](2,{valueOf:function(){throw 8}})}catch(e){return 8===e}}();c("with",{with:function(e,t){var n=u(this),s=a(e),c=i(n)?o(t):+t;return r(n,l(n),s,c)}}["with"],!h)},3375:function(e,t,n){"use strict";n(7642)},9225:function(e,t,n){"use strict";n(8004)},3972:function(e,t,n){"use strict";n(3853)},9209:function(e,t,n){"use strict";n(5876)},5714:function(e,t,n){"use strict";n(2475)},7561:function(e,t,n){"use strict";n(5024)},6197:function(e,t,n){"use strict";n(1698)},6368:function(e,t,n){"use strict";var r=n(6518),s=n(4475),i=n(1606).clear;r({global:!0,bind:!0,enumerable:!0,forced:s.clearImmediate!==i},{clearImmediate:i})},4979:function(e,t,n){"use strict";var r=n(6518),s=n(4475),i=n(7751),a=n(6980),o=n(4913).f,u=n(9297),l=n(679),c=n(3167),h=n(2603),d=n(5002),p=n(6193),f=n(3724),g=n(6395),m="DOMException",b=i("Error"),y=i(m),x=function(){l(this,v);var e=arguments.length,t=h(e<1?void 0:arguments[0]),n=h(e<2?void 0:arguments[1],"Error"),r=new y(t,n),s=new b(t);return s.name=m,o(r,"stack",a(1,p(s.stack,1))),c(r,this,x),r},v=x.prototype=y.prototype,w="stack"in new b(m),k="stack"in new y(1,2),I=y&&f&&Object.getOwnPropertyDescriptor(s,m),C=!!I&&!(I.writable&&I.configurable),S=w&&!C&&!k;r({global:!0,constructor:!0,forced:g||S},{DOMException:S?x:y});var $=i(m),N=$.prototype;if(N.constructor!==$)for(var T in g||o(N,"constructor",a(1,$)),d)if(u(d,T)){var E=d[T],R=E.s;u($,R)||o($,R,a(6,E.c))}},9848:function(e,t,n){"use strict";n(6368),n(9309)},9309:function(e,t,n){"use strict";var r=n(6518),s=n(4475),i=n(1606).set,a=n(9472),o=s.setImmediate?a(i,!1):i;r({global:!0,bind:!0,enumerable:!0,forced:s.setImmediate!==o},{setImmediate:o})},4603:function(e,t,n){"use strict";var r=n(6840),s=n(9504),i=n(655),a=n(2812),o=URLSearchParams,u=o.prototype,l=s(u.append),c=s(u["delete"]),h=s(u.forEach),d=s([].push),p=new o("a=1&a=2&b=3");p["delete"]("a",1),p["delete"]("b",void 0),p+""!=="a=2"&&r(u,"delete",(function(e){var t=arguments.length,n=t<2?void 0:arguments[1];if(t&&void 0===n)return c(this,e);var r=[];h(this,(function(e,t){d(r,{key:t,value:e})})),a(t,1);var s,o=i(e),u=i(n),p=0,f=0,g=!1,m=r.length;while(p<m)s=r[p++],g||s.key===o?(g=!0,c(this,s.key)):f++;while(f<m)s=r[f++],s.key===o&&s.value===u||l(this,s.key,s.value)}),{enumerable:!0,unsafe:!0})},7566:function(e,t,n){"use strict";var r=n(6840),s=n(9504),i=n(655),a=n(2812),o=URLSearchParams,u=o.prototype,l=s(u.getAll),c=s(u.has),h=new o("a=1");!h.has("a",2)&&h.has("a",void 0)||r(u,"has",(function(e){var t=arguments.length,n=t<2?void 0:arguments[1];if(t&&void 0===n)return c(this,e);var r=l(this,e);a(t,1);var s=i(n),o=0;while(o<r.length)if(r[o++]===s)return!0;return!1}),{enumerable:!0,unsafe:!0})},8721:function(e,t,n){"use strict";var r=n(3724),s=n(9504),i=n(2106),a=URLSearchParams.prototype,o=s(a.forEach);r&&!("size"in a)&&i(a,"size",{get:function(){var e=0;return o(this,(function(){e++})),e},configurable:!0,enumerable:!0})}}]);
//# sourceMappingURL=chunk-vendors.f3a7138b.js.map